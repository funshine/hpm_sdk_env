<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__lcdc__drv_8h" kind="file" language="C++">
    <compoundname>hpm_lcdc_drv.h</compoundname>
    <includes refid="hpm__display__common_8h" local="yes">hpm_display_common.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <includes local="yes">hpm_lcdc_regs.h</includes>
    <includedby refid="hpm__lcdc__drv_8c" local="yes">drivers/src/hpm_lcdc_drv.c</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="2">
        <label>hpm_display_common.h</label>
        <link refid="hpm__display__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>hpm_lcdc_regs.h</label>
      </node>
      <node id="9">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_lcdc_drv.h</label>
        <link refid="hpm__lcdc__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>drivers/src/hpm_lcdc_drv.c</label>
        <link refid="hpm__lcdc__drv_8c"/>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_lcdc_drv.h</label>
        <link refid="hpm__lcdc__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlcdc__control" prot="public">lcdc_control</innerclass>
    <innerclass refid="structlcdc__xsync__config" prot="public">lcdc_xsync_config</innerclass>
    <innerclass refid="structlcdc__config" prot="public">lcdc_config</innerclass>
    <innerclass refid="structlcdc__layer__config" prot="public">lcdc_layer_config</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lcd__interface_1gaeabbe9167bb40d69fc7b73605892c4fd" prot="public" static="no">
        <name>LCDC_TEST_MODE_DISABLE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lcd__interface_1gadcbebef1d3fdc51c7d1270d1c17f8b81" prot="public" static="no">
        <name>LCDC_TEST_MODE_BACKGROUND</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lcd__interface_1gabf2b80ad1f1ea0b7ac7f61a84fb12445" prot="public" static="no">
        <name>LCDC_TEST_MODE_COLOR_BAR_COL</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lcd__interface_1ga4109f2ce073dabcc0f1e8f6fa00fe713" prot="public" static="no">
        <name>LCDC_TEST_MODE_COLOR_BAR_ROW</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__lcd__interface_1ga1b70d876770ccff427513794d6b0b2a7" prot="public" static="no" strong="no">
        <type></type>
        <name>@78</name>
        <enumvalue id="group__lcd__interface_1gga1b70d876770ccff427513794d6b0b2a7a5ac506e0f76f957ddb4a86402bde06fe" prot="public">
          <name>status_lcdc_no_active_layer_yet</name>
          <initializer>= ((uint32_t)( status_group_lcdc )*1000U + (uint32_t)( 1 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga1b70d876770ccff427513794d6b0b2a7aa27260d3e7c97fae14ccbb988aa29b05" prot="public">
          <name>status_lcdc_layer_not_supported</name>
          <initializer>= ((uint32_t)( status_group_lcdc )*1000U + (uint32_t)( 2 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="29" column="1" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="enum" id="group__lcd__interface_1gac8baeee654d9bd5162e70955f6590dd6" prot="public" static="no" strong="no">
        <type></type>
        <name>lcdc_line_pattern</name>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aca0adaf72d4677defc5bc6d923f7e87a" prot="public">
          <name>lcdc_line_pattern_rgb</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aba41f0e661dd312cee08f57cf6a7c8b3" prot="public">
          <name>lcdc_line_pattern_rbg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aab29a99c5cd4ca1c302a3300a7127357" prot="public">
          <name>lcdc_line_pattern_gbr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6adb8938fe1232bf4fff9390b0be9621e8" prot="public">
          <name>lcdc_line_pattern_grb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6af2c7132e2c4a7884412fcf5e85aca898" prot="public">
          <name>lcdc_line_pattern_brg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6ab1bea42405e8cc07530c88ef11531a76" prot="public">
          <name>lcdc_line_pattern_bgr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="35" column="1" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="group__lcd__interface_1gace4b674064d39a3e2d28d39cc47ed08b" prot="public" static="no" strong="no">
        <type></type>
        <name>lcdc_display_mode</name>
        <enumvalue id="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba250e3d53f02b0bcffd9e3f31c45c8733" prot="public">
          <name>lcdc_display_mode_normal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08bab6c6d57cadccf3272afa904af51fc852" prot="public">
          <name>lcdc_display_mode_test_mode_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba237710209146b2179d3ceeadcb0ca69d" prot="public">
          <name>lcdc_display_mode_test_mode_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba85250add35513c14d8c8c68160351cf8" prot="public">
          <name>lcdc_display_mode_test_mode_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="45" column="1" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="group__lcd__interface_1ga3ac0b02cfa9dfea7d4f6afea26866473" prot="public" static="no" strong="no">
        <type></type>
        <name>lcdc_layer_max_bytes_per_transfer</name>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a941c845cd1cb12d64328e2b0b2a9523d" prot="public">
          <name>lcdc_layer_max_bytes_64</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473aa0f68132e15d234b9192db891ebcbd1d" prot="public">
          <name>lcdc_layer_max_bytes_128</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a3329228a351ad5155f47531cba4f9aa9" prot="public">
          <name>lcdc_layer_max_bytes_256</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a1a7e2222559a38db8d8a0204e952c5c3" prot="public">
          <name>lcdc_layer_max_bytes_512</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a1d43fa423a10d94a763211609ecf2077" prot="public">
          <name>lcdc_layer_max_bytes_1024</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="53" column="1" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="53" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lcd__interface_1gaeb9b6aa8e37e2ecc814cbc10f1b1fdfc" prot="public" static="no">
        <type>enum <ref refid="group__lcd__interface_1gac8baeee654d9bd5162e70955f6590dd6" kindref="member">lcdc_line_pattern</ref></type>
        <definition>typedef enum lcdc_line_pattern lcdc_line_pattern_t</definition>
        <argsstring></argsstring>
        <name>lcdc_line_pattern_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="42" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga1d1353e5d3a62b664c37e8654fc07ab4" prot="public" static="no">
        <type>enum <ref refid="group__lcd__interface_1gace4b674064d39a3e2d28d39cc47ed08b" kindref="member">lcdc_display_mode</ref></type>
        <definition>typedef enum lcdc_display_mode lcdc_display_mode_t</definition>
        <argsstring></argsstring>
        <name>lcdc_display_mode_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="50" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga0272f1dd52fd2261a6e00c21ab69e669" prot="public" static="no">
        <type>enum <ref refid="group__lcd__interface_1ga3ac0b02cfa9dfea7d4f6afea26866473" kindref="member">lcdc_layer_max_bytes_per_transfer</ref></type>
        <definition>typedef enum lcdc_layer_max_bytes_per_transfer lcdc_layer_max_bytes_per_transfer_t</definition>
        <argsstring></argsstring>
        <name>lcdc_layer_max_bytes_per_transfer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="59" column="37"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga8f87b673193f2a1cccdb8fcb90eaa931" prot="public" static="no">
        <type>struct <ref refid="structlcdc__control" kindref="compound">lcdc_control</ref></type>
        <definition>typedef struct lcdc_control lcdc_control_t</definition>
        <argsstring></argsstring>
        <name>lcdc_control_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="70" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga864f51e879f69ddeb9930e7f9a96042a" prot="public" static="no">
        <type>struct <ref refid="structlcdc__xsync__config" kindref="compound">lcdc_xsync_config</ref></type>
        <definition>typedef struct lcdc_xsync_config lcdc_xsync_config_t</definition>
        <argsstring></argsstring>
        <name>lcdc_xsync_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="77" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga1618096149b89f53016e8ca7218ef0ef" prot="public" static="no">
        <type>struct <ref refid="structlcdc__config" kindref="compound">lcdc_config</ref></type>
        <definition>typedef struct lcdc_config lcdc_config_t</definition>
        <argsstring></argsstring>
        <name>lcdc_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="87" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga66b7b8fa0bb34db0052ca10dd75cde43" prot="public" static="no">
        <type>struct <ref refid="structlcdc__layer__config" kindref="compound">lcdc_layer_config</ref></type>
        <definition>typedef struct lcdc_layer_config lcdc_layer_config_t</definition>
        <argsstring></argsstring>
        <name>lcdc_layer_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="105" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lcd__interface_1gaca8744ccbaf1a274ca2a659048b6f67e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_software_reset</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_software_reset</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Layer config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="117" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga574ca415d8b9f0832ab2d52b5df4af90" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_enable_interrupt</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t interrupt_mask)</argsstring>
        <name>lcdc_enable_interrupt</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>interrupt_mask</declname>
        </param>
        <briefdescription>
<para>Enable interrupt according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="130" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gae656bf3a25f6f2cdeb0604555d070529" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_disable_interrupt</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t interrupt_mask)</argsstring>
        <name>lcdc_disable_interrupt</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>interrupt_mask</declname>
        </param>
        <briefdescription>
<para>Disable interrupt according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="142" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gab8c85a0ceecf7639bbc3cd2fcaa18a4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_clear_status</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t mask)</argsstring>
        <name>lcdc_clear_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear specific status according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Status mask of status to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="154" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga4a61faf4d1467b887ca6b7eb9e6acb71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lcdc_layer_control_shadow_loaded</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index)</argsstring>
        <name>lcdc_layer_control_shadow_loaded</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Make layer control shadow registers take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of layer to be controlled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="166" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga46763020b7422cbf42f5f4c4eeb975db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t lcdc_get_dma_status</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_get_dma_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get DMA status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DMA</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="178" column="24" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gaad71d0dc1862ea893a65af2faf1e44e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lcdc_check_dma_status</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t mask)</argsstring>
        <name>lcdc_check_dma_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Check DMA status against the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of expected DMA status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if all bits set to 1 in mask are set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if any bit set to 1 in mask is not set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="192" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga91b1d6d93d8b501c34a8577d298c7e24" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_clear_dma_status</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t mask)</argsstring>
        <name>lcdc_clear_dma_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear DMA status according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of expected DMA status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="204" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gad58708966231705405111327c0831ea7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t lcdc_get_status</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_get_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>current</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="216" column="24" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga7e368098c2b81d53566e5b1d008a1aa8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lcdc_check_status</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t mask)</argsstring>
        <name>lcdc_check_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Check status against the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of expected status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if all bits set to 1 in mask are set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if any bit set to 1 in mask is not set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="230" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga003ef157d362cfd3269703a47a2977be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_set_next_buffer</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t layer_index, uint32_t buffer)</argsstring>
        <name>lcdc_layer_set_next_buffer</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Set next buffer for certain layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>display buffer to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="243" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga690f2cdcd596a43791aa83466625b5e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_update_background</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, display_color_32b_t background)</argsstring>
        <name>lcdc_layer_update_background</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1gad391a163a4166553135c8e5e8fa5b1a1" kindref="member">display_color_32b_t</ref></type>
          <declname>background</declname>
        </param>
        <briefdescription>
<para>Update specific layer background. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">background</parametername>
</parameternamelist>
<parameterdescription>
<para>color to be set as background </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="257" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="257" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga324db591eddb10957918a6781e275ea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_update_position</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, uint16_t x, uint32_t y)</argsstring>
        <name>lcdc_layer_update_position</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Update specific layer position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Position X coord </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>Position Y coord </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="273" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="273" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga022e9c7867a95c631fdda3a785ee3170" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_update_dimension</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, uint8_t width, uint8_t height)</argsstring>
        <name>lcdc_layer_update_dimension</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Update specific layer dimension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width in pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height in pixel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="290" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="290" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gafab5498c611abef8ec7b7cb0f4253a8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_set_region</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2)</argsstring>
        <name>lcdc_layer_set_region</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
<para>Update specific layer region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x1</parametername>
</parameternamelist>
<parameterdescription>
<para>X coord of the top left pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y1</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coord of the top left pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x2</parametername>
</parameternamelist>
<parameterdescription>
<para>X coord of the bottom right pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y2</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coord of the bottom right pixel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="309" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="309" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gad7a75cfa1242bc88e90d6c8ec8780406" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_update</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index)</argsstring>
        <name>lcdc_layer_update</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Update specific layer configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="326" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gae6fa4c9cae9fb980692a3e7af37b891b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_enable</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t layer_index)</argsstring>
        <name>lcdc_layer_enable</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Enable specific layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="338" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga746402452749ebe1c65fe09353732ded" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_disable</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t layer_index)</argsstring>
        <name>lcdc_layer_disable</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Disable specific layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="351" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="351" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga4c7dea3a91b3cfdf6f79de939bcccd9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_set_testmode</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t test_mode)</argsstring>
        <name>lcdc_set_testmode</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>test_mode</declname>
        </param>
        <briefdescription>
<para>Set test mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">test_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>target test mode to be enabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="365" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="365" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga3eec4612d5db08ad03ebe155bf38728f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_set_background</definition>
        <argsstring>(LCDC_Type *ptr, display_color_32b_t color)</argsstring>
        <name>lcdc_set_background</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1gad391a163a4166553135c8e5e8fa5b1a1" kindref="member">display_color_32b_t</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set background. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">color</parametername>
</parameternamelist>
<parameterdescription>
<para>background color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="379" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="379" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga9bd64357e9fc54c3516894646f32bbc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_enable_background_in_alpha_blender</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_enable_background_in_alpha_blender</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable background on alpha blender </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it not depend the background color of the layer itself. it can be used with lcdc_set_background API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="395" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gad32de1a11167d5e54fc47464b0b9cf0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_disable_background_in_alpha_blender</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_disable_background_in_alpha_blender</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable background on alpha blender </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>if not use background but want depend the the background color of the layer itself, can be use the API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="408" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="408" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gab00cf80546531f73627e151d9cd60dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_get_default_layer_config</definition>
        <argsstring>(LCDC_Type *ptr, lcdc_layer_config_t *layer, display_pixel_format_t pixel_format, uint8_t layer_index)</argsstring>
        <name>lcdc_get_default_layer_config</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__lcd__interface_1ga66b7b8fa0bb34db0052ca10dd75cde43" kindref="member">lcdc_layer_config_t</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>pixel_format</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Get default layer configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of layer configuration struct buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pixel_format</parametername>
</parameternamelist>
<parameterdescription>
<para>Pixel format to be used for this layer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="421" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="51" bodyend="111" declfile="drivers/inc/hpm_lcdc_drv.h" declline="421" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gab6c13f8160459eea736fa9f9712cb5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_get_default_config</definition>
        <argsstring>(LCDC_Type *ptr, lcdc_config_t *config)</argsstring>
        <name>lcdc_get_default_config</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__lcd__interface_1ga1618096149b89f53016e8ca7218ef0ef" kindref="member">lcdc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get default configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of configuration struct buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="431" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="113" bodyend="133" declfile="drivers/inc/hpm_lcdc_drv.h" declline="431" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gaf6614a25a45db9947bb8c64145913a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_init</definition>
        <argsstring>(LCDC_Type *ptr, lcdc_config_t *config)</argsstring>
        <name>lcdc_init</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__lcd__interface_1ga1618096149b89f53016e8ca7218ef0ef" kindref="member">lcdc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize LCD controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of configuration struct buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="440" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="165" bodyend="190" declfile="drivers/inc/hpm_lcdc_drv.h" declline="440" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gad1d4855261cdfef944230cbc874795c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t lcdc_config_layer</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, lcdc_layer_config_t *layer_config, bool enable_layer)</argsstring>
        <name>lcdc_config_layer</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type><ref refid="group__lcd__interface_1ga66b7b8fa0bb34db0052ca10dd75cde43" kindref="member">lcdc_layer_config_t</ref> *</type>
          <declname>layer_config</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_layer</declname>
        </param>
        <briefdescription>
<para>Configure specific layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of layer configuration struct buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true if the layer needs to be enabled right after being configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="451" column="12" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="192" bodyend="259" declfile="drivers/inc/hpm_lcdc_drv.h" declline="451" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gaa97b8a406e9092722a63e60b7df387ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_turn_on_display</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_turn_on_display</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Turn on display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="460" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="281" bodyend="286" declfile="drivers/inc/hpm_lcdc_drv.h" declline="460" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gae40d2ac8aaf7c927b561a8609f39c3d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_turn_off_display</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_turn_off_display</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Turn off display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="468" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="261" bodyend="279" declfile="drivers/inc/hpm_lcdc_drv.h" declline="468" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_LCDC_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_LCDC_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__display__common_8h" kindref="compound">hpm_display_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_lcdc_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="group__lcd__interface_1gaeabbe9167bb40d69fc7b73605892c4fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCDC_TEST_MODE_DISABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="group__lcd__interface_1gadcbebef1d3fdc51c7d1270d1c17f8b81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCDC_TEST_MODE_BACKGROUND<sp/><sp/><sp/><sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__lcd__interface_1gabf2b80ad1f1ea0b7ac7f61a84fb12445" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCDC_TEST_MODE_COLOR_BAR_COL<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__lcd__interface_1ga4109f2ce073dabcc0f1e8f6fa00fe713" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCDC_TEST_MODE_COLOR_BAR_ROW<sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>LCD<sp/>driver<sp/>specific<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30" refid="group__lcd__interface_1gga1b70d876770ccff427513794d6b0b2a7a5ac506e0f76f957ddb4a86402bde06fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1gga1b70d876770ccff427513794d6b0b2a7a5ac506e0f76f957ddb4a86402bde06fe" kindref="member">status_lcdc_no_active_layer_yet</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409ae126a3e513e0487f12e4e8db0ff703e9" kindref="member">status_group_lcdc</ref>,<sp/>1),</highlight></codeline>
<codeline lineno="31" refid="group__lcd__interface_1gga1b70d876770ccff427513794d6b0b2a7aa27260d3e7c97fae14ccbb988aa29b05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1gga1b70d876770ccff427513794d6b0b2a7aa27260d3e7c97fae14ccbb988aa29b05" kindref="member">status_lcdc_layer_not_supported</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409ae126a3e513e0487f12e4e8db0ff703e9" kindref="member">status_group_lcdc</ref>,<sp/>2),</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>LCD<sp/>line<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__lcd__interface_1gac8baeee654d9bd5162e70955f6590dd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gac8baeee654d9bd5162e70955f6590dd6" kindref="member">lcdc_line_pattern</ref><sp/>{</highlight></codeline>
<codeline lineno="36" refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aca0adaf72d4677defc5bc6d923f7e87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aca0adaf72d4677defc5bc6d923f7e87a" kindref="member">lcdc_line_pattern_rgb</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="37" refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aba41f0e661dd312cee08f57cf6a7c8b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aba41f0e661dd312cee08f57cf6a7c8b3" kindref="member">lcdc_line_pattern_rbg</ref>,</highlight></codeline>
<codeline lineno="38" refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aab29a99c5cd4ca1c302a3300a7127357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aab29a99c5cd4ca1c302a3300a7127357" kindref="member">lcdc_line_pattern_gbr</ref>,</highlight></codeline>
<codeline lineno="39" refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6adb8938fe1232bf4fff9390b0be9621e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6adb8938fe1232bf4fff9390b0be9621e8" kindref="member">lcdc_line_pattern_grb</ref>,</highlight></codeline>
<codeline lineno="40" refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6af2c7132e2c4a7884412fcf5e85aca898" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6af2c7132e2c4a7884412fcf5e85aca898" kindref="member">lcdc_line_pattern_brg</ref>,</highlight></codeline>
<codeline lineno="41" refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6ab1bea42405e8cc07530c88ef11531a76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6ab1bea42405e8cc07530c88ef11531a76" kindref="member">lcdc_line_pattern_bgr</ref>,</highlight></codeline>
<codeline lineno="42" refid="group__lcd__interface_1gaeb9b6aa8e37e2ecc814cbc10f1b1fdfc" refkind="member"><highlight class="normal">}<sp/><ref refid="group__lcd__interface_1gaeb9b6aa8e37e2ecc814cbc10f1b1fdfc" kindref="member">lcdc_line_pattern_t</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>LCD<sp/>display<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__lcd__interface_1gace4b674064d39a3e2d28d39cc47ed08b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gace4b674064d39a3e2d28d39cc47ed08b" kindref="member">lcdc_display_mode</ref><sp/>{</highlight></codeline>
<codeline lineno="46" refid="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba250e3d53f02b0bcffd9e3f31c45c8733" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba250e3d53f02b0bcffd9e3f31c45c8733" kindref="member">lcdc_display_mode_normal</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="47" refid="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08bab6c6d57cadccf3272afa904af51fc852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08bab6c6d57cadccf3272afa904af51fc852" kindref="member">lcdc_display_mode_test_mode_1</ref>,</highlight></codeline>
<codeline lineno="48" refid="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba237710209146b2179d3ceeadcb0ca69d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba237710209146b2179d3ceeadcb0ca69d" kindref="member">lcdc_display_mode_test_mode_2</ref>,</highlight></codeline>
<codeline lineno="49" refid="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba85250add35513c14d8c8c68160351cf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba85250add35513c14d8c8c68160351cf8" kindref="member">lcdc_display_mode_test_mode_3</ref>,</highlight></codeline>
<codeline lineno="50" refid="group__lcd__interface_1ga1d1353e5d3a62b664c37e8654fc07ab4" refkind="member"><highlight class="normal">}<sp/><ref refid="group__lcd__interface_1ga1d1353e5d3a62b664c37e8654fc07ab4" kindref="member">lcdc_display_mode_t</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>LCD<sp/>layer<sp/>transfer<sp/>max<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__lcd__interface_1ga3ac0b02cfa9dfea7d4f6afea26866473" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga3ac0b02cfa9dfea7d4f6afea26866473" kindref="member">lcdc_layer_max_bytes_per_transfer</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a941c845cd1cb12d64328e2b0b2a9523d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a941c845cd1cb12d64328e2b0b2a9523d" kindref="member">lcdc_layer_max_bytes_64</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="55" refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473aa0f68132e15d234b9192db891ebcbd1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473aa0f68132e15d234b9192db891ebcbd1d" kindref="member">lcdc_layer_max_bytes_128</ref>,</highlight></codeline>
<codeline lineno="56" refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a3329228a351ad5155f47531cba4f9aa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a3329228a351ad5155f47531cba4f9aa9" kindref="member">lcdc_layer_max_bytes_256</ref>,</highlight></codeline>
<codeline lineno="57" refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a1a7e2222559a38db8d8a0204e952c5c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a1a7e2222559a38db8d8a0204e952c5c3" kindref="member">lcdc_layer_max_bytes_512</ref>,</highlight></codeline>
<codeline lineno="58" refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a1d43fa423a10d94a763211609ecf2077" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a1d43fa423a10d94a763211609ecf2077" kindref="member">lcdc_layer_max_bytes_1024</ref>,</highlight></codeline>
<codeline lineno="59" refid="group__lcd__interface_1ga0272f1dd52fd2261a6e00c21ab69e669" refkind="member"><highlight class="normal">}<sp/><ref refid="group__lcd__interface_1ga0272f1dd52fd2261a6e00c21ab69e669" kindref="member">lcdc_layer_max_bytes_per_transfer_t</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>LCD<sp/>control<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structlcdc__control" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlcdc__control" kindref="compound">lcdc_control</ref><sp/>{</highlight></codeline>
<codeline lineno="63" refid="structlcdc__control_1ab2b7dbd2b24564a904328acdf8bd075a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1gaeb9b6aa8e37e2ecc814cbc10f1b1fdfc" kindref="member">lcdc_line_pattern_t</ref><sp/><ref refid="structlcdc__control_1ab2b7dbd2b24564a904328acdf8bd075a" kindref="member">line_pattern</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="structlcdc__control_1a56031eaf5935e6d74d811556bf1b818c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ga1d1353e5d3a62b664c37e8654fc07ab4" kindref="member">lcdc_display_mode_t</ref><sp/><ref refid="structlcdc__control_1a56031eaf5935e6d74d811556bf1b818c" kindref="member">display_mode</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="structlcdc__control_1a54b9966d57da03cfd3655a2924c83d6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlcdc__control_1a54b9966d57da03cfd3655a2924c83d6a" kindref="member">invert_pixel_data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="structlcdc__control_1ac1080dcd20d6120eaeb1c17de8304cdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlcdc__control_1ac1080dcd20d6120eaeb1c17de8304cdd" kindref="member">invert_pixel_clock</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="structlcdc__control_1aaff81811e85df7924fc43146e7c0772a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlcdc__control_1aaff81811e85df7924fc43146e7c0772a" kindref="member">invert_href</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="structlcdc__control_1ae0f3fc5e816050c32602a2f099e80632" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlcdc__control_1ae0f3fc5e816050c32602a2f099e80632" kindref="member">invert_vsync</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="structlcdc__control_1a8a570e34b9c666704d000a4dbce631e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlcdc__control_1a8a570e34b9c666704d000a4dbce631e9" kindref="member">invert_hsync</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="group__lcd__interface_1ga8f87b673193f2a1cccdb8fcb90eaa931" refkind="member"><highlight class="normal">}<sp/><ref refid="group__lcd__interface_1ga8f87b673193f2a1cccdb8fcb90eaa931" kindref="member">lcdc_control_t</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>LCD<sp/>hsync/vsync<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structlcdc__xsync__config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlcdc__xsync__config" kindref="compound">lcdc_xsync_config</ref><sp/>{</highlight></codeline>
<codeline lineno="74" refid="structlcdc__xsync__config_1a340192aef7940f86566844a843c78250" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__xsync__config_1a340192aef7940f86566844a843c78250" kindref="member">front_porch_pulse</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="structlcdc__xsync__config_1abff71e88a545f32c8c1edac71ecc2211" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__xsync__config_1abff71e88a545f32c8c1edac71ecc2211" kindref="member">back_porch_pulse</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="structlcdc__xsync__config_1aa72afa3d3d108603a6fb11a3da17f4a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__xsync__config_1aa72afa3d3d108603a6fb11a3da17f4a5" kindref="member">pulse_width</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="group__lcd__interface_1ga864f51e879f69ddeb9930e7f9a96042a" refkind="member"><highlight class="normal">}<sp/><ref refid="group__lcd__interface_1ga864f51e879f69ddeb9930e7f9a96042a" kindref="member">lcdc_xsync_config_t</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>LCD<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structlcdc__config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlcdc__config" kindref="compound">lcdc_config</ref><sp/>{</highlight></codeline>
<codeline lineno="81" refid="structlcdc__config_1a608a232a5d1d9da980da71beb5fb1c8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__config_1a608a232a5d1d9da980da71beb5fb1c8c" kindref="member">resolution_x</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="structlcdc__config_1aafe23c8876c8e03ba588328eb3e71e3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__config_1aafe23c8876c8e03ba588328eb3e71e3d" kindref="member">resolution_y</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="structlcdc__config_1acffbdb5bb613d8eb05b7f65970c775fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlcdc__xsync__config" kindref="compound">lcdc_xsync_config_t</ref><sp/><ref refid="structlcdc__config_1acffbdb5bb613d8eb05b7f65970c775fa" kindref="member">hsync</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="structlcdc__config_1a9b7c790bf444965a8c2133b73ca14ec2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlcdc__xsync__config" kindref="compound">lcdc_xsync_config_t</ref><sp/><ref refid="structlcdc__config_1a9b7c790bf444965a8c2133b73ca14ec2" kindref="member">vsync</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="structlcdc__config_1adf3e6b404f39d906dd3d8de393fb4d07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondisplay__color__32b" kindref="compound">display_color_32b_t</ref><sp/><ref refid="structlcdc__config_1adf3e6b404f39d906dd3d8de393fb4d07" kindref="member">background</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="structlcdc__config_1a919139549d6cb541fd696f20e129e4a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlcdc__control" kindref="compound">lcdc_control_t</ref><sp/><ref refid="structlcdc__config_1a919139549d6cb541fd696f20e129e4a6" kindref="member">control</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="group__lcd__interface_1ga1618096149b89f53016e8ca7218ef0ef" refkind="member"><highlight class="normal">}<sp/><ref refid="group__lcd__interface_1ga1618096149b89f53016e8ca7218ef0ef" kindref="member">lcdc_config_t</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>LCD<sp/>layer<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structlcdc__layer__config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlcdc__layer__config" kindref="compound">lcdc_layer_config</ref><sp/>{</highlight></codeline>
<codeline lineno="91" refid="structlcdc__layer__config_1ad6afc63d3fae5614671d2cc35a29a095" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlcdc__layer__config_1ad6afc63d3fae5614671d2cc35a29a095" kindref="member">max_ot</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92" refid="structlcdc__layer__config_1acf15aa5417e43369dd1e3427eee569f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__Display__common__interface_1gaed3db61ea26eebc8ef29feb463734ca8" kindref="member">display_byteorder_t</ref><sp/><ref refid="structlcdc__layer__config_1acf15aa5417e43369dd1e3427eee569f0" kindref="member">byteorder</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="structlcdc__layer__config_1a6393edb56269bfff4c60e81195c54ba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__Display__common__interface_1ga83441eb67ce3c6d11bcdbd6c6777e31f" kindref="member">display_yuv_format_t</ref><sp/><ref refid="structlcdc__layer__config_1a6393edb56269bfff4c60e81195c54ba6" kindref="member">yuv</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="structlcdc__layer__config_1a758b74475251941b762d348bfa5db72d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref><sp/><ref refid="structlcdc__layer__config_1a758b74475251941b762d348bfa5db72d" kindref="member">pixel_format</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="structlcdc__layer__config_1a89f7ac6db32733069a5c40e212d632c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdispaly__alphablend__option" kindref="compound">display_alphablend_option_t</ref><sp/><ref refid="structlcdc__layer__config_1a89f7ac6db32733069a5c40e212d632c5" kindref="member">alphablend</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96" refid="structlcdc__layer__config_1a3661cfc8ed2f31de5f9744a3d20b1930" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdisplay__yuv2rgb__config" kindref="compound">display_yuv2rgb_config_t</ref><sp/><ref refid="structlcdc__layer__config_1a3661cfc8ed2f31de5f9744a3d20b1930" kindref="member">csc_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="structlcdc__layer__config_1af50a570603bf9cb174f110acb0c03206" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lcd__interface_1ga0272f1dd52fd2261a6e00c21ab69e669" kindref="member">lcdc_layer_max_bytes_per_transfer_t</ref><sp/><ref refid="structlcdc__layer__config_1af50a570603bf9cb174f110acb0c03206" kindref="member">max_bytes</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="structlcdc__layer__config_1a4874c1c99ba71a657d131bea17cfa7f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__layer__config_1a4874c1c99ba71a657d131bea17cfa7f6" kindref="member">height</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="structlcdc__layer__config_1ab690ff7578e0c9df885f76b3e4a3dbf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__layer__config_1ab690ff7578e0c9df885f76b3e4a3dbf6" kindref="member">width</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="structlcdc__layer__config_1a9d8deafaa31087f7cd47480ba6c2c136" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__layer__config_1a9d8deafaa31087f7cd47480ba6c2c136" kindref="member">position_x</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="structlcdc__layer__config_1ad2bb8679cd69b8aa7b4eed9f0a662d31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlcdc__layer__config_1ad2bb8679cd69b8aa7b4eed9f0a662d31" kindref="member">position_y</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="structlcdc__layer__config_1a6ad1a85d97cd13495aa567faaf041ffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondisplay__color__32b" kindref="compound">display_color_32b_t</ref><sp/><ref refid="structlcdc__layer__config_1a6ad1a85d97cd13495aa567faaf041ffd" kindref="member">background</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="structlcdc__layer__config_1ad4fb55d888e3baa675dc04cce7edecbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structlcdc__layer__config_1ad4fb55d888e3baa675dc04cce7edecbc" kindref="member">buffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="structlcdc__layer__config_1aa3a2cfbb9ba8b62fb6aa6092e3fd9bab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structlcdc__layer__config_1aa3a2cfbb9ba8b62fb6aa6092e3fd9bab" kindref="member">stride</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="group__lcd__interface_1ga66b7b8fa0bb34db0052ca10dd75cde43" refkind="member"><highlight class="normal">}<sp/><ref refid="group__lcd__interface_1ga66b7b8fa0bb34db0052ca10dd75cde43" kindref="member">lcdc_layer_config_t</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="group__lcd__interface_1gaca8744ccbaf1a274ca2a659048b6f67e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gaca8744ccbaf1a274ca2a659048b6f67e" kindref="member">lcdc_software_reset</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1aba7432639047cca2897a83b3d55bab6c" kindref="member">CTRL</ref><sp/>|=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ad672736635b68e9a928248db4689de70" kindref="member">LCDC_CTRL_SW_RST_MASK</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1aba7432639047cca2897a83b3d55bab6c" kindref="member">CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ad672736635b68e9a928248db4689de70" kindref="member">LCDC_CTRL_SW_RST_MASK</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="group__lcd__interface_1ga574ca415d8b9f0832ab2d52b5df4af90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga574ca415d8b9f0832ab2d52b5df4af90" kindref="member">lcdc_enable_interrupt</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>interrupt_mask)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af0973c396d4efc10e279025493841139" kindref="member">INT_EN</ref><sp/>|=<sp/>interrupt_mask;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group__lcd__interface_1gae656bf3a25f6f2cdeb0604555d070529" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gae656bf3a25f6f2cdeb0604555d070529" kindref="member">lcdc_disable_interrupt</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>interrupt_mask)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af0973c396d4efc10e279025493841139" kindref="member">INT_EN</ref><sp/>&amp;=<sp/>~interrupt_mask;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="group__lcd__interface_1gab8c85a0ceecf7639bbc3cd2fcaa18a4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gab8c85a0ceecf7639bbc3cd2fcaa18a4d" kindref="member">lcdc_clear_status</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1a9e1b32b683bceabca10ec55b16d23916" kindref="member">ST</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group__lcd__interface_1ga4a61faf4d1467b887ca6b7eb9e6acb71" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga4a61faf4d1467b887ca6b7eb9e6acb71" kindref="member">lcdc_layer_control_shadow_loaded</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>layer_index)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>&amp;<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="group__lcd__interface_1ga46763020b7422cbf42f5f4c4eeb975db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__lcd__interface_1ga46763020b7422cbf42f5f4c4eeb975db" kindref="member">lcdc_get_dma_status</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structLCDC__Type_1a5afc96384453d39e003dbcea7bcba8ae" kindref="member">DMA_ST</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group__lcd__interface_1gaad71d0dc1862ea893a65af2faf1e44e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gaad71d0dc1862ea893a65af2faf1e44e4" kindref="member">lcdc_check_dma_status</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structLCDC__Type_1a5afc96384453d39e003dbcea7bcba8ae" kindref="member">DMA_ST</ref><sp/>&amp;<sp/>mask)<sp/>==<sp/>mask);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="group__lcd__interface_1ga91b1d6d93d8b501c34a8577d298c7e24" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga91b1d6d93d8b501c34a8577d298c7e24" kindref="member">lcdc_clear_dma_status</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1a5afc96384453d39e003dbcea7bcba8ae" kindref="member">DMA_ST</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="group__lcd__interface_1gad58708966231705405111327c0831ea7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__lcd__interface_1gad58708966231705405111327c0831ea7" kindref="member">lcdc_get_status</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structLCDC__Type_1a9e1b32b683bceabca10ec55b16d23916" kindref="member">ST</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="group__lcd__interface_1ga7e368098c2b81d53566e5b1d008a1aa8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga7e368098c2b81d53566e5b1d008a1aa8" kindref="member">lcdc_check_status</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr-&gt;<ref refid="structLCDC__Type_1a9e1b32b683bceabca10ec55b16d23916" kindref="member">ST</ref><sp/>&amp;<sp/>mask)<sp/>==<sp/>mask;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="group__lcd__interface_1ga003ef157d362cfd3269703a47a2977be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga003ef157d362cfd3269703a47a2977be" kindref="member">lcdc_layer_set_next_buffer</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>layer_index,<sp/>uint32_t<sp/>buffer)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1ae1dffb4a027bf8428a39661381bfa907" kindref="member">START0</ref><sp/>=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a1d088eb6e1a95b41bb029a41ae48efa8" kindref="member">LCDC_LAYER_START0_ADDR0_SET</ref>(buffer);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>|=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="group__lcd__interface_1ga690f2cdcd596a43791aa83466625b5e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga690f2cdcd596a43791aa83466625b5e3" kindref="member">lcdc_layer_update_background</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>layer_index,<sp/><ref refid="uniondisplay__color__32b" kindref="compound">display_color_32b_t</ref><sp/>background)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a3d14914f90fcfeecdd229847cf9d8d75" kindref="member">BG_CL</ref><sp/>=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a9b6fa0ac2e301c9d22704b0b7604845b" kindref="member">LCDC_LAYER_BG_CL_ARGB_SET</ref>(background.<ref refid="uniondisplay__color__32b_1a69609d06971c149adf65e9b659522bf1" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>|=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="group__lcd__interface_1ga324db591eddb10957918a6781e275ea6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga324db591eddb10957918a6781e275ea6" kindref="member">lcdc_layer_update_position</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>layer_index,<sp/>uint16_t<sp/>x,<sp/>uint32_t<sp/>y)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a6fc376ba7eb53538b7de91445a5f0055" kindref="member">LAYPOS</ref><sp/>=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a473ca26540d3af3fa1a8b9849776d20f" kindref="member">LCDC_LAYER_LAYPOS_X_SET</ref>(x)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a338358ea0e45c2446312583ed9ac87b4" kindref="member">LCDC_LAYER_LAYPOS_Y_SET</ref>(y);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>|=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="group__lcd__interface_1ga022e9c7867a95c631fdda3a785ee3170" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga022e9c7867a95c631fdda3a785ee3170" kindref="member">lcdc_layer_update_dimension</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>layer_index,<sp/>uint8_t<sp/>width,<sp/>uint8_t<sp/>height)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1acae6f25478ebba82decf10cb791e0eb1" kindref="member">LAYSIZE</ref><sp/>=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1af8dd42839b5c86fc41f18e10edff5782" kindref="member">LCDC_LAYER_LAYSIZE_WIDTH_SET</ref>(width)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a483af6985d11781c5b64490694b11f66" kindref="member">LCDC_LAYER_LAYSIZE_HEIGHT_SET</ref>(height);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>|=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="group__lcd__interface_1gafab5498c611abef8ec7b7cb0f4253a8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gafab5498c611abef8ec7b7cb0f4253a8e" kindref="member">lcdc_layer_set_region</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>layer_index,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>x1,<sp/>uint16_t<sp/>y1,<sp/>uint16_t<sp/>x2,<sp/>uint16_t<sp/>y2)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a6fc376ba7eb53538b7de91445a5f0055" kindref="member">LAYPOS</ref><sp/>=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a473ca26540d3af3fa1a8b9849776d20f" kindref="member">LCDC_LAYER_LAYPOS_X_SET</ref>(x1)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a338358ea0e45c2446312583ed9ac87b4" kindref="member">LCDC_LAYER_LAYPOS_Y_SET</ref>(y1);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1acae6f25478ebba82decf10cb791e0eb1" kindref="member">LAYSIZE</ref><sp/>=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1af8dd42839b5c86fc41f18e10edff5782" kindref="member">LCDC_LAYER_LAYSIZE_WIDTH_SET</ref>(x2<sp/>-<sp/>x1<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a483af6985d11781c5b64490694b11f66" kindref="member">LCDC_LAYER_LAYSIZE_HEIGHT_SET</ref>(y2<sp/>-<sp/>y1<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>|=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="group__lcd__interface_1gad7a75cfa1242bc88e90d6c8ec8780406" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gad7a75cfa1242bc88e90d6c8ec8780406" kindref="member">lcdc_layer_update</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>layer_index)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>|=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="group__lcd__interface_1gae6fa4c9cae9fb980692a3e7af37b891b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gae6fa4c9cae9fb980692a3e7af37b891b" kindref="member">lcdc_layer_enable</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>layer_index)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>|=</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ab52c308fb5929fbc2efe6cbd9052748a" kindref="member">LCDC_LAYER_LAYCTRL_EN_MASK</ref><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__lcd__interface_1ga746402452749ebe1c65fe09353732ded" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga746402452749ebe1c65fe09353732ded" kindref="member">lcdc_layer_disable</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>layer_index)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>=</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ptr-&gt;<ref refid="structLCDC__Type_1af028484e7e05784a4ff4cc78c1d9b876" kindref="member">LAYER</ref>[layer_index].<ref refid="structLCDC__Type_1a371f646d2dd56a1b41aa27e3bea4baa3" kindref="member">LAYCTRL</ref><sp/>&amp;<sp/>(~<ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ab52c308fb5929fbc2efe6cbd9052748a" kindref="member">LCDC_LAYER_LAYCTRL_EN_MASK</ref>))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ac065a9c316e6afa74506bdf09b98e5ad" kindref="member">LCDC_LAYER_LAYCTRL_SHADOW_LOAD_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="group__lcd__interface_1ga4c7dea3a91b3cfdf6f79de939bcccd9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga4c7dea3a91b3cfdf6f79de939bcccd9e" kindref="member">lcdc_set_testmode</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>test_mode)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1aba7432639047cca2897a83b3d55bab6c" kindref="member">CTRL</ref><sp/>=<sp/>((ptr-&gt;<ref refid="structLCDC__Type_1aba7432639047cca2897a83b3d55bab6c" kindref="member">CTRL</ref><sp/>&amp;<sp/>~<ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a1f09aced3edf31adceec306d0c984928" kindref="member">LCDC_CTRL_DISP_MODE_MASK</ref>))</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a66f23a0ba0bcd77ad173bba147235387" kindref="member">LCDC_CTRL_DISP_MODE_SET</ref>(test_mode)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ad93249142edf1fd6f4536caf6412f922" kindref="member">LCDC_CTRL_DISP_ON_MASK</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="group__lcd__interface_1ga3eec4612d5db08ad03ebe155bf38728f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga3eec4612d5db08ad03ebe155bf38728f" kindref="member">lcdc_set_background</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uniondisplay__color__32b" kindref="compound">display_color_32b_t</ref><sp/>color)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1a05de52df3969077d3dd6e7dacd01d2bd" kindref="member">BGND_CL</ref><sp/>=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a3eceacc5b3bf713a37c94f9baa4014cb" kindref="member">LCDC_BGND_CL_R_SET</ref>(color.<ref refid="uniondisplay__color__32b_1ad0aa237c13d4930e733e9d29377e34cb" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1a45b87c0b8338b365de5a394521aedf08" kindref="member">LCDC_BGND_CL_G_SET</ref>(color.<ref refid="uniondisplay__color__32b_1adf6777235edbe9967a102618890a7d2c" kindref="member">g</ref>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1af39a314f25bc0abd64f8958fdb0951fa" kindref="member">LCDC_BGND_CL_B_SET</ref>(color.<ref refid="uniondisplay__color__32b_1a34b9f3b5ac65bcc0ba49aaac6ac28780" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="group__lcd__interface_1ga9bd64357e9fc54c3516894646f32bbc8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1ga9bd64357e9fc54c3516894646f32bbc8" kindref="member">lcdc_enable_background_in_alpha_blender</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1aba7432639047cca2897a83b3d55bab6c" kindref="member">CTRL</ref><sp/>|=<sp/><ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ab13500da4cd84309b28d7cae736b93f1" kindref="member">LCDC_CTRL_BGDCL4CLR_MASK</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="group__lcd__interface_1gad32de1a11167d5e54fc47464b0b9cf0c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gad32de1a11167d5e54fc47464b0b9cf0c" kindref="member">lcdc_disable_background_in_alpha_blender</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLCDC__Type_1aba7432639047cca2897a83b3d55bab6c" kindref="member">CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6700_2ip_2hpm__lcdc__regs_8h_1ab13500da4cd84309b28d7cae736b93f1" kindref="member">LCDC_CTRL_BGDCL4CLR_MASK</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gab00cf80546531f73627e151d9cd60dd0" kindref="member">lcdc_get_default_layer_config</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlcdc__layer__config" kindref="compound">lcdc_layer_config_t</ref><sp/>*layer,<sp/><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref><sp/>pixel_format,<sp/>uint8_t<sp/>layer_index);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gab6c13f8160459eea736fa9f9712cb5c9" kindref="member">lcdc_get_default_config</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/><ref refid="structlcdc__config" kindref="compound">lcdc_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gaf6614a25a45db9947bb8c64145913a5e" kindref="member">lcdc_init</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/><ref refid="structlcdc__config" kindref="compound">lcdc_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__lcd__interface_1gad1d4855261cdfef944230cbc874795c6" kindref="member">lcdc_config_layer</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>layer_index,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlcdc__layer__config" kindref="compound">lcdc_layer_config_t</ref><sp/>*layer_config,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_layer);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gaa97b8a406e9092722a63e60b7df387ed" kindref="member">lcdc_turn_on_display</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lcd__interface_1gae40d2ac8aaf7c927b561a8609f39c3d0" kindref="member">lcdc_turn_off_display</ref>(<ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_LCDC_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_lcdc_drv.h"/>
  </compounddef>
</doxygen>
