<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__usb__drv_8h" kind="file" language="C++">
    <compoundname>hpm_usb_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_usb_regs.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <includedby refid="hpm__usb__drv_8c" local="yes">drivers/src/hpm_usb_drv.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>hpm_usb_regs.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_usb_drv.h</label>
        <link refid="hpm__usb__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_soc_feature.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>drivers/src/hpm_usb_drv.c</label>
        <link refid="hpm__usb__drv_8c"/>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_usb_drv.h</label>
        <link refid="hpm__usb__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structusb__endpoint__config__t" prot="public">usb_endpoint_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__usb__interface_1ga3fd7b002744275ddfda479972a64d190" prot="public" static="no">
        <name>USB_PHY_INIT_DELAY_COUNT</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a delay count for USB phy initialization </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__usb__interface_1gabba486df2e6dd2326995116094d526b8" prot="public" static="no">
        <name>USB_HOST_FRAMELIST_SIZE</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a frame list size in USB host mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__usb__interface_1gac8a76acd5a4f562121857c3b5fa12f62" prot="public" static="no" strong="no">
        <type></type>
        <name>usb_dir_t</name>
        <enumvalue id="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62aeaa12a81a0e999bc935e4e102a1a6d52" prot="public">
          <name>usb_dir_out</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62a7e072c1670e0569278bf13f7254468b4" prot="public">
          <name>usb_dir_in</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62a221cb59897a7fb73e55c7da15e555fd5" prot="public">
          <name>usb_dir_in_mask</name>
          <initializer>= 0x80</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB transfer direction types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="39" column="1" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="group__usb__interface_1gad74e07f65d6e7c0bd897ffeffedbd0c9" prot="public" static="no" strong="no">
        <type></type>
        <name>usb_xfer_type_t</name>
        <enumvalue id="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9ae1c42deb77d05e7eb5bfdd07572a499d" prot="public">
          <name>usb_xfer_control</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a74b1e326fd6b9902b3e1087ad5e1116e" prot="public">
          <name>usb_xfer_isochronous</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a25bd25d04dd90fb57cc44e70c72a255f" prot="public">
          <name>usb_xfer_bulk</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a27f6f81da60ada963b24b8eca8e425f4" prot="public">
          <name>usb_xfer_interrupt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB transfer types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="48" column="1" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="enum" id="group__usb__interface_1gaca5d4f37e7d8e31787c6009341537914" prot="public" static="no" strong="no">
        <type></type>
        <name>usb_controller_mode_t</name>
        <enumvalue id="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a62a82ec6e2773d9d9fef90e6d7ddb4df" prot="public">
          <name>usb_ctrl_mode_otg</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a1889c80b318fac7d6fc528f67fe966ab" prot="public">
          <name>usb_ctrl_mode_device</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a4c4700adf6ab553a3f58769abcb83806" prot="public">
          <name>usb_ctrl_mode_host</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB controller work modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="58" column="1" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="enum" id="group__usb__interface_1ga685cf8597bcb51d5290f93fedb57d948" prot="public" static="no" strong="no">
        <type></type>
        <name>usb_line_state_t</name>
        <enumvalue id="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948abe4875891a55ad4af5e1835150267b20" prot="public">
          <name>usb_line_state0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948a0bec168a8e4b7ff9d58a23b3f6f85048" prot="public">
          <name>usb_line_state1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948a38e6adc51df2b4901e16260ed31c4a56" prot="public">
          <name>usb_line_state2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB line state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="67" column="1" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="group__usb__interface_1gabb913c906ebdab67d51368a0d79d4f76" prot="public" static="no" strong="no">
        <type></type>
        <name>usb_transceiver_t</name>
        <enumvalue id="group__usb__interface_1ggabb913c906ebdab67d51368a0d79d4f76ae4d9da7a25dfe8f360dd05e403e53df0" prot="public">
          <name>usb_tran_parallel</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1ggabb913c906ebdab67d51368a0d79d4f76a5b1d81d437dcc85e4f221870a21eb947" prot="public">
          <name>usb_tran_serial</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB transceiver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="76" column="1" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="enum" id="group__usb__interface_1ga6b26e9b4631d854f44e6578f1588dbec" prot="public" static="no" strong="no">
        <type></type>
        <name>usb_test_mode_t</name>
        <enumvalue id="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca5ab921b0a1a87b57f00a207c2397bad2" prot="public">
          <name>usb_test_mode_disable</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca78322dc11d557ca634e21f8447da3d7c" prot="public">
          <name>usb_test_j_state</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca172cae3ff7e9220e085f55047eaa2635" prot="public">
          <name>usb_test_k_state</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca2801a26739e6b3237a688655a54a883b" prot="public">
          <name>usb_test_se0_nak</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecac5d65e6531fcfd8adac839e83bbc754c" prot="public">
          <name>usb_test_packet</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecabb6b7de77cf139ec08ead0cc83f790f0" prot="public">
          <name>usb_test_force_hs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecab7b3171151db55e444636dde8ed59e47" prot="public">
          <name>usb_test_force_fs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecaaa2bea72a632b90975b50c9ddd1eece7" prot="public">
          <name>usb_test_force_ls</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB test modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="84" column="1" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="84" bodyend="93"/>
      </memberdef>
      <memberdef kind="enum" id="group__usb__interface_1ga73d8465a8d3e82001a52657d149ef0bd" prot="public" static="no" strong="no">
        <type></type>
        <name>usb_vbus_wakeup_source_t</name>
        <enumvalue id="group__usb__interface_1gga73d8465a8d3e82001a52657d149ef0bda86d2d0698260096aa144d73145a955f5" prot="public">
          <name>usb_vbus_wakeup_vbus_valid</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__interface_1gga73d8465a8d3e82001a52657d149ef0bda810489cc0de5e5933f56b6312f57dc6b" prot="public">
          <name>usb_vbus_wakeup_session_valid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB vbus wakeup source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="98" column="1" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="98" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__usb__interface_1gae147b28fcfb6c35c2bfa5b8805c3343e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>usb_control_request_t</definition>
        <argsstring></argsstring>
        <name>usb_control_request_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="125" column="2" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__usb__interface_1gaaaf873d0073c24e1322cb78040785bd9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t usb_get_interrupts</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_get_interrupts</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the mask of all enabled interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Mask</parametername>
</parameternamelist>
<parameterdescription>
<para>of all enabled interrupts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="151" column="24" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga90b58bdcf539cd729484d23dee83de12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_enable_interrupts</definition>
        <argsstring>(USB_Type *ptr, uint32_t mask)</argsstring>
        <name>usb_enable_interrupts</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask value for interrupt events </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="162" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga4f6763a3c0dba2fce55d681a0cc46bb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t usb_get_status_flags</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_get_status_flags</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get all USB status flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>USB interrupt status flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="173" column="24" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gab758df15c9c7b620f14c721bc35eff9b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_clear_status_flags</definition>
        <argsstring>(USB_Type *ptr, uint32_t mask)</argsstring>
        <name>usb_clear_status_flags</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear status flags. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the specified flags can be cleared by writing USBSTS register.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask value for flags to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="187" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga142ce90e906c714e1fafd99fb579575f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_otg_enable_vbus_wakeup</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otg_enable_vbus_wakeup</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable otg vbus wakeup. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="197" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gac4a51f077a28d1265c4c734d62baa777" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_otg_disable_vbus_wakeup</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otg_disable_vbus_wakeup</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disbable otg vbus wakeup. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="207" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga12b9c3bdace88e7a1b117ddb44eb6041" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_otg_set_vbus_wakeup_source</definition>
        <argsstring>(USB_Type *ptr, usb_vbus_wakeup_source_t src)</argsstring>
        <name>usb_otg_set_vbus_wakeup_source</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__usb__interface_1ga73d8465a8d3e82001a52657d149ef0bd" kindref="member">usb_vbus_wakeup_source_t</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Set otg vbus wakeup source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>wakeup source, <ref refid="group__usb__interface_1ga73d8465a8d3e82001a52657d149ef0bd" kindref="member">usb_vbus_wakeup_source_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="218" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga00a45a7d2c03b94ae676d7e93cdfcf97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_otg_enable_wakeup_int</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otg_enable_wakeup_int</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable otg wakeup interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="228" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga3009816fbb58761911be3d66f145f305" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_otg_disable_wakeup_int</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otg_disable_wakeup_int</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable otg wakeup interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="238" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga19c4aa4f5165188795a44c600fdf6356" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usb_get_otg_wakeup_int_flag</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_get_otg_wakeup_int_flag</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get otg wakeup status flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>USB otg wakeup interrupt status flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="249" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga21870c361bfd4242f6bab55ce1572dd7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t usb_get_suspend_status</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_get_suspend_status</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get USB suspend status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>USB controller suspend status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="260" column="23" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="260" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga0ea35987674289f35787ab42935c4ef4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usb_get_port_reset_status</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_get_port_reset_status</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get USB reset status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>USB controller reset status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="271" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gab042236cf3fd048b9fd38a45db340244" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usb_get_port_ccs</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_get_port_ccs</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get USB current connect status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>USB controller reset status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="282" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga14d1d0f4ba442713328d0e9a6f3d89ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t usb_get_port_speed</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_get_port_speed</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get USB port speed status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>USB controller port speed status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="293" column="23" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga67dbd8e3c2aa1ed942c22b8e36dad5ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_set_port_test_mode</definition>
        <argsstring>(USB_Type *ptr, usb_test_mode_t test_mode)</argsstring>
        <name>usb_set_port_test_mode</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__usb__interface_1ga6b26e9b4631d854f44e6578f1588dbec" kindref="member">usb_test_mode_t</ref></type>
          <declname>test_mode</declname>
        </param>
        <briefdescription>
<para>Set port test control mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">test_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>usb test mode, <ref refid="group__usb__interface_1ga6b26e9b4631d854f44e6578f1588dbec" kindref="member">usb_test_mode_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="304" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga7105d897b2041e8a60c8021763a9507b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_set_port_suspend</definition>
        <argsstring>(USB_Type *ptr, bool suspend)</argsstring>
        <name>usb_set_port_suspend</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>suspend</declname>
        </param>
        <briefdescription>
<para>USB set port suspend. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">suspend</parametername>
</parameternamelist>
<parameterdescription>
<para>true - suspend, false - not suspend </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="315" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaa8d7b1f4160c160fac1a1d048bc927b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_force_port_resume</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_force_port_resume</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>USB force port resume. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="325" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga599237cef768dca6cf6aa62d3718f37b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_phy_enter_low_power_suspend</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_enter_low_power_suspend</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>USB phy enter low power suspend. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="335" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga473d391beec25c0f14adfa16d7455b44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_phy_exit_low_power_suspend</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_exit_low_power_suspend</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>USB phy exit low power suspend. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="345" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="345" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga3b906bc33a8c2889e9b0dd8e06aaf226" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usb_phy_get_session_valid_flag</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_get_session_valid_flag</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get phy session valid flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>phy session valid flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="361" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga41c17f40229de80fa7717facaf93b875" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_otgsc_enable_session_valid_chg_int</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otgsc_enable_session_valid_chg_int</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable otgsc session valid change interrupt </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="371" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga48580cdbe46b621f6a0f476c02d159bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_otgsc_disable_session_valid_chg_int</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otgsc_disable_session_valid_chg_int</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable otgsc session valid change interrupt </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="381" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="381" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gab301a0a1796d377338dd4fa63e95ab10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usb_otgsc_get_session_valid_chg_flag</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otgsc_get_session_valid_chg_flag</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get otgsc session valid change flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>otgsc session valid flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="392" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaddc48af892c48e38a9d22c8f4da78c1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_otgsc_clear_session_valid_chg_flag</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otgsc_clear_session_valid_chg_flag</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>clear otgsc session valid change flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="402" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="402" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gae0720072561815f9a9b94b42b0becd6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usb_otgsc_get_session_valid_flag</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_otgsc_get_session_valid_flag</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get otgsc session valid flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>otgsc session valid flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="413" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gadd0eb9457097bc5b9bb5538b59043f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_phy_init</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_init</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Initialize USB phy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="423" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="52" bodyend="84" declfile="drivers/inc/hpm_usb_drv.h" declline="423" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaf4db15f9ad88140c5cb1a91996fd9d19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t usb_phy_get_line_state</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_get_line_state</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>USB phy get line status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="430" column="23" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="430" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga7d0c8f1b7fad5111bb5c077e5b4760d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_phy_using_internal_vbus</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_using_internal_vbus</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>USB phy using internal vbus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="440" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="440" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga5a05b0fa6a2f03d790ea1050aaf1969c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_phy_using_external_vbus</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_using_external_vbus</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>USB phy using external vbus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="451" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="451" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gac2f61d1cb7b9fa4a1659e285dcde415c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_phy_disable_dp_dm_pulldown</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_disable_dp_dm_pulldown</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>USB phy disconnect dp/dm pins pulldown resistance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="462" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaeaab6bfcb5b96868f46e6cd2c6763910" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_phy_enable_dp_dm_pulldown</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phy_enable_dp_dm_pulldown</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>USB phy connect dp/dm pins pulldown resistance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="472" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="472" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaf003972896197cb2c108dabcdde737b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_phyctrl1_set_not_utmi_suspend</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_phyctrl1_set_not_utmi_suspend</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set phyctrl1 not utmi suspend. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="482" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="482" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga5656966fc46a5c1c45b05ad42ca0f1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_bus_reset</definition>
        <argsstring>(USB_Type *ptr, uint16_t ep0_max_packet_size)</argsstring>
        <name>usb_dcd_bus_reset</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ep0_max_packet_size</declname>
        </param>
        <briefdescription>
<para>USB device bus reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep0_max_packet_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum packet size of endpoint 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="498" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="86" bodyend="112" declfile="drivers/inc/hpm_usb_drv.h" declline="498" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaff93d59e0f375b4edd7195e12f21fc0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_init</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_dcd_init</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Initialize controller to device mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="505" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="114" bodyend="153" declfile="drivers/inc/hpm_usb_drv.h" declline="505" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga45bce816a6316b47c9a0a26b566988af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_deinit</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_dcd_deinit</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Deinitialize controller to device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="512" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="155" bodyend="176" declfile="drivers/inc/hpm_usb_drv.h" declline="512" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaba25dc7f740483fca43efae2d35eab71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_remote_wakeup</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_dcd_remote_wakeup</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Wakeup from host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="519" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="290" bodyend="293" declfile="drivers/inc/hpm_usb_drv.h" declline="519" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gab2450ed6584f4fc6056d785c4b340f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_edpt_open</definition>
        <argsstring>(USB_Type *ptr, usb_endpoint_config_t *config)</argsstring>
        <name>usb_dcd_edpt_open</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structusb__endpoint__config__t" kindref="compound">usb_endpoint_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Open an endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the specified endpoint config struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="527" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="208" bodyend="218" declfile="drivers/inc/hpm_usb_drv.h" declline="527" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga6615e90df81dfa952badf5cbe5a2853a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t usb_dcd_edpt_get_type</definition>
        <argsstring>(USB_Type *ptr, uint8_t ep_addr)</argsstring>
        <name>usb_dcd_edpt_get_type</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
<para>get a specified endpoint type </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="535" column="9" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="220" bodyend="227" declfile="drivers/inc/hpm_usb_drv.h" declline="535" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaadf458a5102a42b971d1ff9c69cdc712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_edpt_xfer</definition>
        <argsstring>(USB_Type *ptr, uint8_t ep_idx)</argsstring>
        <name>usb_dcd_edpt_xfer</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_idx</declname>
        </param>
        <briefdescription>
<para>Submit a transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>An index of the specified endpoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="543" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="229" bodyend="235" declfile="drivers/inc/hpm_usb_drv.h" declline="543" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga363402a353d7b62397b3e742f3013ef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_edpt_stall</definition>
        <argsstring>(USB_Type *ptr, uint8_t ep_addr)</argsstring>
        <name>usb_dcd_edpt_stall</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
<para>Stall endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>An address of the specified endpoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="551" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="237" bodyend="243" declfile="drivers/inc/hpm_usb_drv.h" declline="551" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gae98b1372cf7dda04bf8669fbe56ba969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_edpt_clear_stall</definition>
        <argsstring>(USB_Type *ptr, uint8_t ep_addr)</argsstring>
        <name>usb_dcd_edpt_clear_stall</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
<para>Clear stall. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>An address of the specified endpoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="559" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="245" bodyend="253" declfile="drivers/inc/hpm_usb_drv.h" declline="559" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga83beef7b50abe7cca5684662b13b25f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_dcd_edpt_check_stall</definition>
        <argsstring>(USB_Type *ptr, uint8_t ep_addr)</argsstring>
        <name>usb_dcd_edpt_check_stall</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
<para>Clear stall. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>An address of the specified endpoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>status of endpoint stall, true is stall, false is not stall </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="568" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="255" bodyend="261" declfile="drivers/inc/hpm_usb_drv.h" declline="568" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga206094a9ee1dab3d52df63a36185b9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_edpt_close</definition>
        <argsstring>(USB_Type *ptr, uint8_t ep_addr)</argsstring>
        <name>usb_dcd_edpt_close</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
<para>Close a specified endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>An address of the specified endpoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="576" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="263" bodyend="288" declfile="drivers/inc/hpm_usb_drv.h" declline="576" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga3526d2d96452fe0f905cb41a44cbad03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_connect</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_dcd_connect</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Connect by enabling internal pull-up resistor on D+/D-. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="583" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="179" bodyend="182" declfile="drivers/inc/hpm_usb_drv.h" declline="583" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gab7681ff335b3134cf4fe056a4d06be49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_dcd_disconnect</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_dcd_disconnect</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disconnect by disabling internal pull-up resistor on D+/D-. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="590" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="185" bodyend="202" declfile="drivers/inc/hpm_usb_drv.h" declline="590" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga458e6353080c3188117e60c451d85a96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t usb_dcd_get_edpt_setup_status</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_dcd_get_edpt_setup_status</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get setup status of endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>status of setup endpoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="598" column="24" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="598" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gae5aea3d230463140c4ecb3b0b7f098b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_dcd_clear_edpt_setup_status</definition>
        <argsstring>(USB_Type *ptr, uint32_t mask)</argsstring>
        <name>usb_dcd_clear_edpt_setup_status</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear the setup status of all specified endpoints. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of all specified endpoints </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="609" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="609" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga56f4485460fb8e69291a267a755b6870" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_dcd_set_address</definition>
        <argsstring>(USB_Type *ptr, uint8_t dev_addr)</argsstring>
        <name>usb_dcd_set_address</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dev_addr</declname>
        </param>
        <briefdescription>
<para>Set address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>An assigned endpoint address from USB host </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="620" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga4d330448bb7abef5ff1273927cebac81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_dcd_set_edpt_list_addr</definition>
        <argsstring>(USB_Type *ptr, uint32_t addr)</argsstring>
        <name>usb_dcd_set_edpt_list_addr</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Set endpoint list address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>A start address of the endpoint qtd list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="631" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="631" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gab785d17f2e833df64a42695d726f4157" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t usb_dcd_get_device_addr</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_dcd_get_device_addr</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get device address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="642" column="23" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="642" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga7eff2d319dc7c0a51fbd50cb68f4b713" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t usb_dcd_get_edpt_complete_status</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_dcd_get_edpt_complete_status</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get complete status of endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>complete status od endpoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="653" column="24" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga82811e6be34b432b2e744744d30da1e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_dcd_clear_edpt_complete_status</definition>
        <argsstring>(USB_Type *ptr, uint32_t mask)</argsstring>
        <name>usb_dcd_clear_edpt_complete_status</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear complete status of endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of the specified endpoints </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="664" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="664" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga0570e2f862011ae43270784768f347b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_hcd_init</definition>
        <argsstring>(USB_Type *ptr, uint32_t int_mask, uint16_t framelist_size)</argsstring>
        <name>usb_hcd_init</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>int_mask</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>framelist_size</declname>
        </param>
        <briefdescription>
<para>Initialize controller to host mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of all required interrupts </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">framelist_size</parametername>
</parameternamelist>
<parameterdescription>
<para>A size of the frame list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="680" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="295" bodyend="342" declfile="drivers/inc/hpm_usb_drv.h" declline="680" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga9bcce6385820752906a63201939d4170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_hcd_port_reset</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_hcd_port_reset</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Initialize controller to host modeHost Reset port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="687" column="6" bodyfile="drivers/src/hpm_usb_drv.c" bodystart="344" bodyend="358" declfile="drivers/inc/hpm_usb_drv.h" declline="687" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga4ae736cf1c923257d9bb16a692536bf6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_hcd_set_command</definition>
        <argsstring>(USB_Type *ptr, uint32_t mask)</argsstring>
        <name>usb_hcd_set_command</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Initialize controller to host modeHost set command register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of all required commands </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="695" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="695" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga38d5124bffeb5eb639b182346f0d96b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t usb_hcd_get_frame_index</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_hcd_get_frame_index</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get frame index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the current frame list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="706" column="24" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="706" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga330e7a78985b4fa69d85d3a14e4410dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usb_hcd_get_port_csc</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_hcd_get_port_csc</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get port connect status change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>connect status change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="717" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="717" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga3d2d648e5012d244d006b0255c5949da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_hcd_set_power_ctrl_polarity</definition>
        <argsstring>(USB_Type *ptr, bool high)</argsstring>
        <name>usb_hcd_set_power_ctrl_polarity</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>high</declname>
        </param>
        <briefdescription>
<para>Set power ctrl polarity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">high</parametername>
</parameternamelist>
<parameterdescription>
<para>true - vbus high level enable, false - vbus low level enable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="728" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="728" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gaf2018b3df6e99d84ca0a5f3c30a67103" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_hcd_enable_port_power</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_hcd_enable_port_power</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable port power. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="742" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="742" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1gac06958a62e1061688cdc0f60e8f783dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_hcd_set_async_list_addr</definition>
        <argsstring>(USB_Type *ptr, uint32_t addr)</argsstring>
        <name>usb_hcd_set_async_list_addr</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Get port connect status changeSet async list address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>An the start address of the async endpoint list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="753" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="753" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga772642c91cf81c227d201d4a39e81d67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_hcd_set_periodic_list_addr</definition>
        <argsstring>(USB_Type *ptr, uint32_t addr)</argsstring>
        <name>usb_hcd_set_periodic_list_addr</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Set periodic list address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>An start address of the periodic endpoint list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="764" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="764" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga72c81c5dcd874b15192fa072aa50a129" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_hcd_run</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_hcd_run</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Start hcd controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="774" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="774" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__interface_1ga641f92202a1b5877b2d5d53334f80bc2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_hcd_stop</definition>
        <argsstring>(USB_Type *ptr)</argsstring>
        <name>usb_hcd_stop</name>
        <param>
          <type><ref refid="structUSB__Type" kindref="compound">USB_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Stop hcd controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A USB peripheral base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_usb_drv.h" line="784" column="20" bodyfile="drivers/inc/hpm_usb_drv.h" bodystart="784" bodyend="787"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_USB_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_USB_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Includes</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_usb_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>Macro<sp/>Constant<sp/>Declarations</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__usb__interface_1ga3fd7b002744275ddfda479972a64d190" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USB_PHY_INIT_DELAY_COUNT<sp/><sp/>(16U)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__usb__interface_1gabba486df2e6dd2326995116094d526b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USB_HOST_FRAMELIST_SIZE<sp/><sp/><sp/>(8U)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>Macro<sp/>Enum<sp/>Declarations</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__usb__interface_1gac8a76acd5a4f562121857c3b5fa12f62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40" refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62aeaa12a81a0e999bc935e4e102a1a6d52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62aeaa12a81a0e999bc935e4e102a1a6d52" kindref="member">usb_dir_out</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="41" refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62a7e072c1670e0569278bf13f7254468b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62a7e072c1670e0569278bf13f7254468b4" kindref="member">usb_dir_in</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62a221cb59897a7fb73e55c7da15e555fd5" kindref="member">usb_dir_in_mask</ref><sp/>=<sp/>0x80</highlight></codeline>
<codeline lineno="43" refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62a221cb59897a7fb73e55c7da15e555fd5" refkind="member"><highlight class="normal">}<sp/><ref refid="group__usb__interface_1gac8a76acd5a4f562121857c3b5fa12f62" kindref="member">usb_dir_t</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="group__usb__interface_1gad74e07f65d6e7c0bd897ffeffedbd0c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49" refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9ae1c42deb77d05e7eb5bfdd07572a499d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9ae1c42deb77d05e7eb5bfdd07572a499d" kindref="member">usb_xfer_control</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="50" refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a74b1e326fd6b9902b3e1087ad5e1116e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a74b1e326fd6b9902b3e1087ad5e1116e" kindref="member">usb_xfer_isochronous</ref>,</highlight></codeline>
<codeline lineno="51" refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a25bd25d04dd90fb57cc44e70c72a255f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a25bd25d04dd90fb57cc44e70c72a255f" kindref="member">usb_xfer_bulk</ref>,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a27f6f81da60ada963b24b8eca8e425f4" kindref="member">usb_xfer_interrupt</ref></highlight></codeline>
<codeline lineno="53" refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a27f6f81da60ada963b24b8eca8e425f4" refkind="member"><highlight class="normal">}<sp/><ref refid="group__usb__interface_1gad74e07f65d6e7c0bd897ffeffedbd0c9" kindref="member">usb_xfer_type_t</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="group__usb__interface_1gaca5d4f37e7d8e31787c6009341537914" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59" refid="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a62a82ec6e2773d9d9fef90e6d7ddb4df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a62a82ec6e2773d9d9fef90e6d7ddb4df" kindref="member">usb_ctrl_mode_otg</ref><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="60" refid="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a1889c80b318fac7d6fc528f67fe966ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a1889c80b318fac7d6fc528f67fe966ab" kindref="member">usb_ctrl_mode_device</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a4c4700adf6ab553a3f58769abcb83806" kindref="member">usb_ctrl_mode_host</ref><sp/><sp/><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="62" refid="group__usb__interface_1ggaca5d4f37e7d8e31787c6009341537914a4c4700adf6ab553a3f58769abcb83806" refkind="member"><highlight class="normal">}<sp/><ref refid="group__usb__interface_1gaca5d4f37e7d8e31787c6009341537914" kindref="member">usb_controller_mode_t</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="group__usb__interface_1ga685cf8597bcb51d5290f93fedb57d948" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68" refid="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948abe4875891a55ad4af5e1835150267b20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948abe4875891a55ad4af5e1835150267b20" kindref="member">usb_line_state0</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="69" refid="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948a0bec168a8e4b7ff9d58a23b3f6f85048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948a0bec168a8e4b7ff9d58a23b3f6f85048" kindref="member">usb_line_state1</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948a38e6adc51df2b4901e16260ed31c4a56" kindref="member">usb_line_state2</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="71" refid="group__usb__interface_1gga685cf8597bcb51d5290f93fedb57d948a38e6adc51df2b4901e16260ed31c4a56" refkind="member"><highlight class="normal">}<sp/><ref refid="group__usb__interface_1ga685cf8597bcb51d5290f93fedb57d948" kindref="member">usb_line_state_t</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="group__usb__interface_1gabb913c906ebdab67d51368a0d79d4f76" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77" refid="group__usb__interface_1ggabb913c906ebdab67d51368a0d79d4f76ae4d9da7a25dfe8f360dd05e403e53df0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggabb913c906ebdab67d51368a0d79d4f76ae4d9da7a25dfe8f360dd05e403e53df0" kindref="member">usb_tran_parallel</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ggabb913c906ebdab67d51368a0d79d4f76a5b1d81d437dcc85e4f221870a21eb947" kindref="member">usb_tran_serial</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="79" refid="group__usb__interface_1ggabb913c906ebdab67d51368a0d79d4f76a5b1d81d437dcc85e4f221870a21eb947" refkind="member"><highlight class="normal">}<sp/><ref refid="group__usb__interface_1gabb913c906ebdab67d51368a0d79d4f76" kindref="member">usb_transceiver_t</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="group__usb__interface_1ga6b26e9b4631d854f44e6578f1588dbec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85" refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca5ab921b0a1a87b57f00a207c2397bad2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca5ab921b0a1a87b57f00a207c2397bad2" kindref="member">usb_test_mode_disable</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="86" refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca78322dc11d557ca634e21f8447da3d7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca78322dc11d557ca634e21f8447da3d7c" kindref="member">usb_test_j_state</ref>,</highlight></codeline>
<codeline lineno="87" refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca172cae3ff7e9220e085f55047eaa2635" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca172cae3ff7e9220e085f55047eaa2635" kindref="member">usb_test_k_state</ref>,</highlight></codeline>
<codeline lineno="88" refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca2801a26739e6b3237a688655a54a883b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbeca2801a26739e6b3237a688655a54a883b" kindref="member">usb_test_se0_nak</ref>,</highlight></codeline>
<codeline lineno="89" refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecac5d65e6531fcfd8adac839e83bbc754c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecac5d65e6531fcfd8adac839e83bbc754c" kindref="member">usb_test_packet</ref>,</highlight></codeline>
<codeline lineno="90" refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecabb6b7de77cf139ec08ead0cc83f790f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecabb6b7de77cf139ec08ead0cc83f790f0" kindref="member">usb_test_force_hs</ref>,</highlight></codeline>
<codeline lineno="91" refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecab7b3171151db55e444636dde8ed59e47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecab7b3171151db55e444636dde8ed59e47" kindref="member">usb_test_force_fs</ref>,</highlight></codeline>
<codeline lineno="92" refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecaaa2bea72a632b90975b50c9ddd1eece7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga6b26e9b4631d854f44e6578f1588dbecaaa2bea72a632b90975b50c9ddd1eece7" kindref="member">usb_test_force_ls</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/><ref refid="group__usb__interface_1ga6b26e9b4631d854f44e6578f1588dbec" kindref="member">usb_test_mode_t</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="group__usb__interface_1ga73d8465a8d3e82001a52657d149ef0bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99" refid="group__usb__interface_1gga73d8465a8d3e82001a52657d149ef0bda86d2d0698260096aa144d73145a955f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga73d8465a8d3e82001a52657d149ef0bda86d2d0698260096aa144d73145a955f5" kindref="member">usb_vbus_wakeup_vbus_valid</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="100" refid="group__usb__interface_1gga73d8465a8d3e82001a52657d149ef0bda810489cc0de5e5933f56b6312f57dc6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gga73d8465a8d3e82001a52657d149ef0bda810489cc0de5e5933f56b6312f57dc6b" kindref="member">usb_vbus_wakeup_session_valid</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}<sp/><ref refid="group__usb__interface_1ga73d8465a8d3e82001a52657d149ef0bd" kindref="member">usb_vbus_wakeup_source_t</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>Structure<sp/>Declarations</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">__attribute__<sp/>((packed))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">__attribute__<sp/>((packed))<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>recipient<sp/>:<sp/><sp/>5;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>type<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/>2;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>direction<sp/>:<sp/><sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>bmRequestType_bit;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bmRequestType;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>bRequest;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>wValue;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>wIndex;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>wLength;</highlight></codeline>
<codeline lineno="125" refid="group__usb__interface_1gae147b28fcfb6c35c2bfa5b8805c3343e" refkind="member"><highlight class="normal">}<sp/><ref refid="group__usb__interface_1gae147b28fcfb6c35c2bfa5b8805c3343e" kindref="member">usb_control_request_t</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="structusb__endpoint__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131" refid="structusb__endpoint__config__t_1a1f66686c038bcfb44fc25300bdfbc0da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structusb__endpoint__config__t_1a1f66686c038bcfb44fc25300bdfbc0da" kindref="member">xfer</ref>;</highlight></codeline>
<codeline lineno="132" refid="structusb__endpoint__config__t_1a1992fc20d489e4121247d915354d352d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structusb__endpoint__config__t_1a1992fc20d489e4121247d915354d352d" kindref="member">ep_addr</ref>;</highlight></codeline>
<codeline lineno="133" refid="structusb__endpoint__config__t_1a464ade9a8ba66d3a5f057e37c6897273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structusb__endpoint__config__t_1a464ade9a8ba66d3a5f057e37c6897273" kindref="member">max_packet_size</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}<sp/><ref refid="structusb__endpoint__config__t" kindref="compound">usb_endpoint_config_t</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>Common<sp/>API</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group__usb__interface_1gaaaf873d0073c24e1322cb78040785bd9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__usb__interface_1gaaaf873d0073c24e1322cb78040785bd9" kindref="member">usb_get_interrupts</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structUSB__Type_1a67f91f4478d4e767b27b5acd19d82ba3" kindref="member">USBINTR</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="group__usb__interface_1ga90b58bdcf539cd729484d23dee83de12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga90b58bdcf539cd729484d23dee83de12" kindref="member">usb_enable_interrupts</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a67f91f4478d4e767b27b5acd19d82ba3" kindref="member">USBINTR</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="group__usb__interface_1ga4f6763a3c0dba2fce55d681a0cc46bb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__usb__interface_1ga4f6763a3c0dba2fce55d681a0cc46bb9" kindref="member">usb_get_status_flags</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structUSB__Type_1aa60d4d2ddd791c45868e0e0df57bd526" kindref="member">USBSTS</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="group__usb__interface_1gab758df15c9c7b620f14c721bc35eff9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gab758df15c9c7b620f14c721bc35eff9b" kindref="member">usb_clear_status_flags</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1aa60d4d2ddd791c45868e0e0df57bd526" kindref="member">USBSTS</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="group__usb__interface_1ga142ce90e906c714e1fafd99fb579575f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga142ce90e906c714e1fafd99fb579575f" kindref="member">usb_otg_enable_vbus_wakeup</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a05d27091fc851f65e9640b5d37486650" kindref="member">OTG_CTRL0</ref><sp/>|=<sp/><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1af56ba737ae3787e56544ad3aeb3c957d" kindref="member">USB_OTG_CTRL0_OTG_VBUS_WAKEUP_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="group__usb__interface_1gac4a51f077a28d1265c4c734d62baa777" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gac4a51f077a28d1265c4c734d62baa777" kindref="member">usb_otg_disable_vbus_wakeup</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a05d27091fc851f65e9640b5d37486650" kindref="member">OTG_CTRL0</ref><sp/>&amp;=<sp/><sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1af56ba737ae3787e56544ad3aeb3c957d" kindref="member">USB_OTG_CTRL0_OTG_VBUS_WAKEUP_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="group__usb__interface_1ga12b9c3bdace88e7a1b117ddb44eb6041" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga12b9c3bdace88e7a1b117ddb44eb6041" kindref="member">usb_otg_set_vbus_wakeup_source</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/><ref refid="group__usb__interface_1ga73d8465a8d3e82001a52657d149ef0bd" kindref="member">usb_vbus_wakeup_source_t</ref><sp/>src)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a05d27091fc851f65e9640b5d37486650" kindref="member">OTG_CTRL0</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structUSB__Type_1a05d27091fc851f65e9640b5d37486650" kindref="member">OTG_CTRL0</ref><sp/>&amp;<sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a451a3760558d82b0ffcce89536ce9dea" kindref="member">USB_OTG_CTRL0_OTG_VBUS_SOURCE_SEL_MASK</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a33118930b3e885420ea366bddabb1cff" kindref="member">USB_OTG_CTRL0_OTG_VBUS_SOURCE_SEL_SET</ref>(src);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="group__usb__interface_1ga00a45a7d2c03b94ae676d7e93cdfcf97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga00a45a7d2c03b94ae676d7e93cdfcf97" kindref="member">usb_otg_enable_wakeup_int</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a05d27091fc851f65e9640b5d37486650" kindref="member">OTG_CTRL0</ref><sp/>|=<sp/><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a30ff12fd0b56cbf80825f65b920e771a" kindref="member">USB_OTG_CTRL0_OTG_WAKEUP_INT_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="group__usb__interface_1ga3009816fbb58761911be3d66f145f305" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga3009816fbb58761911be3d66f145f305" kindref="member">usb_otg_disable_wakeup_int</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a05d27091fc851f65e9640b5d37486650" kindref="member">OTG_CTRL0</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a30ff12fd0b56cbf80825f65b920e771a" kindref="member">USB_OTG_CTRL0_OTG_WAKEUP_INT_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="group__usb__interface_1ga19c4aa4f5165188795a44c600fdf6356" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga19c4aa4f5165188795a44c600fdf6356" kindref="member">usb_get_otg_wakeup_int_flag</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1afdb9824967cab5913ab4d0a7704b5675" kindref="member">USB_TOP_STATUS_WAKEUP_INT_STATUS_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1ab8dd28b9338bed68742241356f40325f" kindref="member">TOP_STATUS</ref>)<sp/>!=<sp/>0)<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="group__usb__interface_1ga21870c361bfd4242f6bab55ce1572dd7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__usb__interface_1ga21870c361bfd4242f6bab55ce1572dd7" kindref="member">usb_get_suspend_status</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1af904d6f961fb5c82bbcbb41179dbee7f" kindref="member">USB_PORTSC1_SUSP_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="group__usb__interface_1ga0ea35987674289f35787ab42935c4ef4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga0ea35987674289f35787ab42935c4ef4" kindref="member">usb_get_port_reset_status</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1af0c91d533d30908cb2bb80a7bd7fb626" kindref="member">USB_PORTSC1_PR_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="group__usb__interface_1gab042236cf3fd048b9fd38a45db340244" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gab042236cf3fd048b9fd38a45db340244" kindref="member">usb_get_port_ccs</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a18a37c667ed945528303451c44bc357c" kindref="member">USB_PORTSC1_CCS_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="group__usb__interface_1ga14d1d0f4ba442713328d0e9a6f3d89ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__usb__interface_1ga14d1d0f4ba442713328d0e9a6f3d89ee" kindref="member">usb_get_port_speed</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1aaa9cb10d751a46365af5d3d8bc5442b4" kindref="member">USB_PORTSC1_PSPD_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group__usb__interface_1ga67dbd8e3c2aa1ed942c22b8e36dad5ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga67dbd8e3c2aa1ed942c22b8e36dad5ca" kindref="member">usb_set_port_test_mode</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/><ref refid="group__usb__interface_1ga6b26e9b4631d854f44e6578f1588dbec" kindref="member">usb_test_mode_t</ref><sp/>test_mode)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref><sp/>&amp;<sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a937711f032fc6276b3502e5217497aec" kindref="member">USB_PORTSC1_PTC_MASK</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a8fb62460b20e9eabbfd937e3b7124108" kindref="member">USB_PORTSC1_PTC_SET</ref>(test_mode);</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="group__usb__interface_1ga7105d897b2041e8a60c8021763a9507b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga7105d897b2041e8a60c8021763a9507b" kindref="member">usb_set_port_suspend</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>suspend)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref><sp/>&amp;<sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1aed104d1557260f47cae18bb08793f10e" kindref="member">USB_PORTSC1_SUSP_MASK</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a06c7e0f08c80ac8c84a13a2ec3e56b1d" kindref="member">USB_PORTSC1_SUSP_SET</ref>(suspend);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group__usb__interface_1gaa8d7b1f4160c160fac1a1d048bc927b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaa8d7b1f4160c160fac1a1d048bc927b7" kindref="member">usb_force_port_resume</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1aa27da1f234ff08a245eff05f06f1162c" kindref="member">USB_PORTSC1_FPR_MASK</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="group__usb__interface_1ga599237cef768dca6cf6aa62d3718f37b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga599237cef768dca6cf6aa62d3718f37b" kindref="member">usb_phy_enter_low_power_suspend</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a93daea760e825fafe4a6b38f1cd6b280" kindref="member">USB_PORTSC1_PHCD_MASK</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="group__usb__interface_1ga473d391beec25c0f14adfa16d7455b44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga473d391beec25c0f14adfa16d7455b44" kindref="member">usb_phy_exit_low_power_suspend</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a93daea760e825fafe4a6b38f1cd6b280" kindref="member">USB_PORTSC1_PHCD_MASK</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otg<sp/>utmi<sp/>clock<sp/>detection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a3b3b46837651772d432cbc0845ab03f5" kindref="member">PHY_STATUS</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a250328db328de0bcee9bc7da9918b27a" kindref="member">USB_PHY_STATUS_UTMI_CLK_VALID_MASK</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>1<sp/>to<sp/>clear<sp/>valid<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1ac4b3d94d24f7e2d124f7824ca2f334f9" kindref="member">USB_PHY_STATUS_UTMI_CLK_VALID_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a3b3b46837651772d432cbc0845ab03f5" kindref="member">PHY_STATUS</ref>)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>utmi<sp/>clock<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="group__usb__interface_1ga3b906bc33a8c2889e9b0dd8e06aaf226" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga3b906bc33a8c2889e9b0dd8e06aaf226" kindref="member">usb_phy_get_session_valid_flag</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a6cfdc1fcecab99e98c2cd9eb39267bad" kindref="member">USB_PHY_STATUS_UTMI_SESS_VALID_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a3b3b46837651772d432cbc0845ab03f5" kindref="member">PHY_STATUS</ref>)<sp/>!=<sp/>0)<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="group__usb__interface_1ga41c17f40229de80fa7717facaf93b875" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga41c17f40229de80fa7717facaf93b875" kindref="member">usb_otgsc_enable_session_valid_chg_int</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1aa6fab448c5bf905d4632eeb746764904" kindref="member">OTGSC</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a5ddfe78497554a746d69933394135c32" kindref="member">USB_OTGSC_ASVIE_MASK</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="group__usb__interface_1ga48580cdbe46b621f6a0f476c02d159bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga48580cdbe46b621f6a0f476c02d159bf" kindref="member">usb_otgsc_disable_session_valid_chg_int</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1aa6fab448c5bf905d4632eeb746764904" kindref="member">OTGSC</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a5ddfe78497554a746d69933394135c32" kindref="member">USB_OTGSC_ASVIE_MASK</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="group__usb__interface_1gab301a0a1796d377338dd4fa63e95ab10" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gab301a0a1796d377338dd4fa63e95ab10" kindref="member">usb_otgsc_get_session_valid_chg_flag</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a82ca41df98523dcf9898a5f57bca9239" kindref="member">USB_OTGSC_ASVIS_SET</ref>(ptr-&gt;<ref refid="structUSB__Type_1aa6fab448c5bf905d4632eeb746764904" kindref="member">OTGSC</ref>)<sp/>!=<sp/>0)<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="group__usb__interface_1gaddc48af892c48e38a9d22c8f4da78c1a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaddc48af892c48e38a9d22c8f4da78c1a" kindref="member">usb_otgsc_clear_session_valid_chg_flag</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1aa6fab448c5bf905d4632eeb746764904" kindref="member">OTGSC</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a48e142c4cffafdb720fed76d0e610b3a" kindref="member">USB_OTGSC_ASVIS_MASK</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="group__usb__interface_1gae0720072561815f9a9b94b42b0becd6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gae0720072561815f9a9b94b42b0becd6f" kindref="member">usb_otgsc_get_session_valid_flag</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a90e0c9b966246e091f65b85387ffe31f" kindref="member">USB_OTGSC_ASV_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1aa6fab448c5bf905d4632eeb746764904" kindref="member">OTGSC</ref>)<sp/>!=<sp/>0)<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gadd0eb9457097bc5b9bb5538b59043f69" kindref="member">usb_phy_init</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="group__usb__interface_1gaf4db15f9ad88140c5cb1a91996fd9d19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__usb__interface_1gaf4db15f9ad88140c5cb1a91996fd9d19" kindref="member">usb_phy_get_line_state</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a231364ca810c8ff168d437e990d97349" kindref="member">USB_PHY_STATUS_LINE_STATE_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a3b3b46837651772d432cbc0845ab03f5" kindref="member">PHY_STATUS</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="group__usb__interface_1ga7d0c8f1b7fad5111bb5c077e5b4760d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga7d0c8f1b7fad5111bb5c077e5b4760d9" kindref="member">usb_phy_using_internal_vbus</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a8d175f020d095a8ebd558a15cd8a0262" kindref="member">PHY_CTRL0</ref><sp/>|=<sp/>(<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a32110bef4347cc2c2600f95832c80075" kindref="member">USB_PHY_CTRL0_VBUS_VALID_OVERRIDE_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a71130d96f7dae37bc79a5f8690861328" kindref="member">USB_PHY_CTRL0_SESS_VALID_OVERRIDE_MASK</ref>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a4773d99ffedc7b4dc8396d8f75f5eaea" kindref="member">USB_PHY_CTRL0_VBUS_VALID_OVERRIDE_EN_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1af84380ddbeff3762e75948566cd49eaa" kindref="member">USB_PHY_CTRL0_SESS_VALID_OVERRIDE_EN_MASK</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="group__usb__interface_1ga5a05b0fa6a2f03d790ea1050aaf1969c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga5a05b0fa6a2f03d790ea1050aaf1969c" kindref="member">usb_phy_using_external_vbus</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a8d175f020d095a8ebd558a15cd8a0262" kindref="member">PHY_CTRL0</ref><sp/>&amp;=<sp/>~((<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a32110bef4347cc2c2600f95832c80075" kindref="member">USB_PHY_CTRL0_VBUS_VALID_OVERRIDE_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a71130d96f7dae37bc79a5f8690861328" kindref="member">USB_PHY_CTRL0_SESS_VALID_OVERRIDE_MASK</ref>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a4773d99ffedc7b4dc8396d8f75f5eaea" kindref="member">USB_PHY_CTRL0_VBUS_VALID_OVERRIDE_EN_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1af84380ddbeff3762e75948566cd49eaa" kindref="member">USB_PHY_CTRL0_SESS_VALID_OVERRIDE_EN_MASK</ref>));</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="group__usb__interface_1gac2f61d1cb7b9fa4a1659e285dcde415c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gac2f61d1cb7b9fa4a1659e285dcde415c" kindref="member">usb_phy_disable_dp_dm_pulldown</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a8d175f020d095a8ebd558a15cd8a0262" kindref="member">PHY_CTRL0</ref><sp/>|=<sp/>0x001000E0u;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="group__usb__interface_1gaeaab6bfcb5b96868f46e6cd2c6763910" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaeaab6bfcb5b96868f46e6cd2c6763910" kindref="member">usb_phy_enable_dp_dm_pulldown</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a8d175f020d095a8ebd558a15cd8a0262" kindref="member">PHY_CTRL0</ref><sp/>&amp;=<sp/>~0x001000E0u;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="group__usb__interface_1gaf003972896197cb2c108dabcdde737b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaf003972896197cb2c108dabcdde737b0" kindref="member">usb_phyctrl1_set_not_utmi_suspend</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a0aba54e9716848c1a5459a34439049bd" kindref="member">PHY_CTRL1</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a291f4d917b06bec4ef59ab9a98eb5f21" kindref="member">USB_PHY_CTRL1_UTMI_OTG_SUSPENDM_MASK</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>Device<sp/>API</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga5656966fc46a5c1c45b05ad42ca0f1b9" kindref="member">usb_dcd_bus_reset</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint16_t<sp/>ep0_max_packet_size);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaff93d59e0f375b4edd7195e12f21fc0a" kindref="member">usb_dcd_init</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga45bce816a6316b47c9a0a26b566988af" kindref="member">usb_dcd_deinit</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaba25dc7f740483fca43efae2d35eab71" kindref="member">usb_dcd_remote_wakeup</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gab2450ed6584f4fc6056d785c4b340f19" kindref="member">usb_dcd_edpt_open</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/><ref refid="structusb__endpoint__config__t" kindref="compound">usb_endpoint_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal">uint8_t<sp/><ref refid="group__usb__interface_1ga6615e90df81dfa952badf5cbe5a2853a" kindref="member">usb_dcd_edpt_get_type</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaadf458a5102a42b971d1ff9c69cdc712" kindref="member">usb_dcd_edpt_xfer</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ep_idx);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga363402a353d7b62397b3e742f3013ef9" kindref="member">usb_dcd_edpt_stall</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gae98b1372cf7dda04bf8669fbe56ba969" kindref="member">usb_dcd_edpt_clear_stall</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga83beef7b50abe7cca5684662b13b25f0" kindref="member">usb_dcd_edpt_check_stall</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga206094a9ee1dab3d52df63a36185b9b7" kindref="member">usb_dcd_edpt_close</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga3526d2d96452fe0f905cb41a44cbad03" kindref="member">usb_dcd_connect</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gab7681ff335b3134cf4fe056a4d06be49" kindref="member">usb_dcd_disconnect</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="group__usb__interface_1ga458e6353080c3188117e60c451d85a96" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__usb__interface_1ga458e6353080c3188117e60c451d85a96" kindref="member">usb_dcd_get_edpt_setup_status</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structUSB__Type_1a97f6f20451067095757353a077fe7eb1" kindref="member">ENDPTSETUPSTAT</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="group__usb__interface_1gae5aea3d230463140c4ecb3b0b7f098b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gae5aea3d230463140c4ecb3b0b7f098b4" kindref="member">usb_dcd_clear_edpt_setup_status</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a97f6f20451067095757353a077fe7eb1" kindref="member">ENDPTSETUPSTAT</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="group__usb__interface_1ga56f4485460fb8e69291a267a755b6870" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga56f4485460fb8e69291a267a755b6870" kindref="member">usb_dcd_set_address</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>dev_addr)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a4ef9291dee02e249c17154f6d0ee5dee" kindref="member">DEVICEADDR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a34bee051630a68f7ed0f806e96b77313" kindref="member">USB_DEVICEADDR_USBADR_SET</ref>(dev_addr)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1aefec79f98437560067c820fcfae832da" kindref="member">USB_DEVICEADDR_USBADRA_MASK</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="group__usb__interface_1ga4d330448bb7abef5ff1273927cebac81" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga4d330448bb7abef5ff1273927cebac81" kindref="member">usb_dcd_set_edpt_list_addr</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>addr)</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a55e8d2714e247269d4f16e05e9214679" kindref="member">ENDPTLISTADDR</ref><sp/>=<sp/>addr<sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1af5cb78e286db1a938bda65f9d43f7457" kindref="member">USB_ENDPTLISTADDR_EPBASE_MASK</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="group__usb__interface_1gab785d17f2e833df64a42695d726f4157" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__usb__interface_1gab785d17f2e833df64a42695d726f4157" kindref="member">usb_dcd_get_device_addr</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a8f518d31cccabe9d7fb7a15a72c120de" kindref="member">USB_DEVICEADDR_USBADR_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a4ef9291dee02e249c17154f6d0ee5dee" kindref="member">DEVICEADDR</ref>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="group__usb__interface_1ga7eff2d319dc7c0a51fbd50cb68f4b713" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__usb__interface_1ga7eff2d319dc7c0a51fbd50cb68f4b713" kindref="member">usb_dcd_get_edpt_complete_status</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structUSB__Type_1a7a2d175afaa850fe26f0715db3e30ebd" kindref="member">ENDPTCOMPLETE</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="group__usb__interface_1ga82811e6be34b432b2e744744d30da1e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga82811e6be34b432b2e744744d30da1e2" kindref="member">usb_dcd_clear_edpt_complete_status</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a7a2d175afaa850fe26f0715db3e30ebd" kindref="member">ENDPTCOMPLETE</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>*<sp/>Host<sp/>API</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga0570e2f862011ae43270784768f347b3" kindref="member">usb_hcd_init</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>int_mask,<sp/>uint16_t<sp/>framelist_size);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga9bcce6385820752906a63201939d4170" kindref="member">usb_hcd_port_reset</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="group__usb__interface_1ga4ae736cf1c923257d9bb16a692536bf6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga4ae736cf1c923257d9bb16a692536bf6" kindref="member">usb_hcd_set_command</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a4b91d1e811cdc715ab92938ef12c27bb" kindref="member">USBCMD</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="group__usb__interface_1ga38d5124bffeb5eb639b182346f0d96b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__usb__interface_1ga38d5124bffeb5eb639b182346f0d96b0" kindref="member">usb_hcd_get_frame_index</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structUSB__Type_1a440bd689abad751d0899dd82fd28e16f" kindref="member">FRINDEX</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="group__usb__interface_1ga330e7a78985b4fa69d85d3a14e4410dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga330e7a78985b4fa69d85d3a14e4410dd" kindref="member">usb_hcd_get_port_csc</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a0347f7939fb70744bfcb69a952748210" kindref="member">USB_PORTSC1_CSC_GET</ref>(ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="group__usb__interface_1ga3d2d648e5012d244d006b0255c5949da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga3d2d648e5012d244d006b0255c5949da" kindref="member">usb_hcd_set_power_ctrl_polarity</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>high)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(high)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a05d27091fc851f65e9640b5d37486650" kindref="member">OTG_CTRL0</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a7272311a427a7ed9122b772c64f47e62" kindref="member">USB_OTG_CTRL0_OTG_POWER_MASK_MASK</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a05d27091fc851f65e9640b5d37486650" kindref="member">OTG_CTRL0</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a7272311a427a7ed9122b772c64f47e62" kindref="member">USB_OTG_CTRL0_OTG_POWER_MASK_MASK</ref>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="742" refid="group__usb__interface_1gaf2018b3df6e99d84ca0a5f3c30a67103" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaf2018b3df6e99d84ca0a5f3c30a67103" kindref="member">usb_hcd_enable_port_power</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a87c6a6c563ec67519e378e6162ab59c0" kindref="member">PORTSC1</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a8f2fa86b9c41ae6f21cd17920c3b27da" kindref="member">USB_PORTSC1_PP_MASK</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="group__usb__interface_1gac06958a62e1061688cdc0f60e8f783dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gac06958a62e1061688cdc0f60e8f783dd" kindref="member">usb_hcd_set_async_list_addr</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>addr)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1ace4150a742460bea9cbb69985355ba8c" kindref="member">ASYNCLISTADDR</ref><sp/>=<sp/>addr<sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a19a4a12c1b4a7699d39fb0b3fd204566" kindref="member">USB_ASYNCLISTADDR_ASYBASE_MASK</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="group__usb__interface_1ga772642c91cf81c227d201d4a39e81d67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga772642c91cf81c227d201d4a39e81d67" kindref="member">usb_hcd_set_periodic_list_addr</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>addr)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a61a890e0a7e49143122d82e4ccb61b69" kindref="member">PERIODICLISTBASE</ref><sp/>=<sp/>addr<sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a7a42b440a18012dc71c1ad02a7c255c7" kindref="member">USB_PERIODICLISTBASE_BASEADR_MASK</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="group__usb__interface_1ga72c81c5dcd874b15192fa072aa50a129" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga72c81c5dcd874b15192fa072aa50a129" kindref="member">usb_hcd_run</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a4b91d1e811cdc715ab92938ef12c27bb" kindref="member">USBCMD</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a6c8627cff2022a9a1ec79adb60196a59" kindref="member">USB_USBCMD_RS_MASK</ref>;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="784" refid="group__usb__interface_1ga641f92202a1b5877b2d5d53334f80bc2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga641f92202a1b5877b2d5d53334f80bc2" kindref="member">usb_hcd_stop</ref>(<ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUSB__Type_1a4b91d1e811cdc715ab92938ef12c27bb" kindref="member">USBCMD</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__usb__regs_8h_1a6c8627cff2022a9a1ec79adb60196a59" kindref="member">USB_USBCMD_RS_MASK</ref>;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_USB_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_usb_drv.h"/>
  </compounddef>
</doxygen>
