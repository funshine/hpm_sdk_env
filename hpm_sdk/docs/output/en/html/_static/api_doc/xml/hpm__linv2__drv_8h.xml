<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__linv2__drv_8h" kind="file" language="C++">
    <compoundname>hpm_linv2_drv.h</compoundname>
    <includes local="no">math.h</includes>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes refid="hpm__linv2__regs_8h" local="yes">hpm_linv2_regs.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <includedby refid="hpm__linv2__drv_8c" local="yes">drivers/src/hpm_linv2_drv.c</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>hpm_linv2_regs.h</label>
        <link refid="hpm__linv2__regs_8h"/>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="2">
        <label>math.h</label>
      </node>
      <node id="10">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_linv2_drv.h</label>
        <link refid="hpm__linv2__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>drivers/src/hpm_linv2_drv.c</label>
        <link refid="hpm__linv2__drv_8c"/>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_linv2_drv.h</label>
        <link refid="hpm__linv2__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlin__timing__t" prot="public">lin_timing_t</innerclass>
    <innerclass refid="structlin__trans__config__t" prot="public">lin_trans_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__linv2__interface_1ga36eedb214280ccadb32d3d0cffdb9c7a" prot="public" static="no">
        <name>LIN_ID_DATA_LEN_SHIFT</name>
        <initializer>4U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bit4 and bit5 encode data length in ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__linv2__interface_1gad360c033970b27dc633f7063ee49dbb7" prot="public" static="no">
        <name>LIN_ID_DATA_LEN_MASK</name>
        <initializer>0x30U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__linv2__interface_1ga3cb969fcf81ed46d50c6940489b883e0" prot="public" static="no">
        <name>LIN_ID_DATA_LEN_GET</name>
        <param><defname>x</defname></param>
        <initializer>(((uint8_t)(x) &amp; <ref refid="group__linv2__interface_1gad360c033970b27dc633f7063ee49dbb7" kindref="member">LIN_ID_DATA_LEN_MASK</ref>) &gt;&gt; <ref refid="group__linv2__interface_1ga36eedb214280ccadb32d3d0cffdb9c7a" kindref="member">LIN_ID_DATA_LEN_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__linv2__interface_1ga102a6541fa3e7b9cd9ce29c211186319" prot="public" static="no" strong="no">
        <type></type>
        <name>lin_id_data_length_t</name>
        <enumvalue id="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319a0cc8305eb1108e4fa09975c8d25f8f76" prot="public">
          <name>id_data_length_2bytes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319ada394e93bdf4e5095888c66d78b31458" prot="public">
          <name>id_data_length_2bytes_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>both 0 and 1 represent 2 bytes </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319a58ab463b755281d09e75243d8da4408c" prot="public">
          <name>id_data_length_4bytes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319aaf1f845c1b353becbaffca2986aa3e5f" prot="public">
          <name>id_data_length_8bytes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319a0cc8305eb1108e4fa09975c8d25f8f76" prot="public">
          <name>id_data_length_2bytes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319ada394e93bdf4e5095888c66d78b31458" prot="public">
          <name>id_data_length_2bytes_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>both 0 and 1 represent 2 bytes </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319a58ab463b755281d09e75243d8da4408c" prot="public">
          <name>id_data_length_4bytes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319aaf1f845c1b353becbaffca2986aa3e5f" prot="public">
          <name>id_data_length_8bytes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>data length in ID bit4 and bit5 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="31" column="1" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="enum" id="group__linv2__interface_1gacf701a1518671653b6755496af29fd06" prot="public" static="no" strong="no">
        <type></type>
        <name>lin_bus_inactivity_time_t</name>
        <enumvalue id="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a543b420e12f82a95bc2254d765032254" prot="public">
          <name>bus_inactivity_time_4s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a48eb156ab317772f40b36fecb9adec90" prot="public">
          <name>bus_inactivity_time_6s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a99cf90c6fd882f417594f640bdda654c" prot="public">
          <name>bus_inactivity_time_8s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a1514292740a0146ade0ea995b7d795f0" prot="public">
          <name>bus_inactivity_time_10s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a543b420e12f82a95bc2254d765032254" prot="public">
          <name>bus_inactivity_time_4s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a48eb156ab317772f40b36fecb9adec90" prot="public">
          <name>bus_inactivity_time_6s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a99cf90c6fd882f417594f640bdda654c" prot="public">
          <name>bus_inactivity_time_8s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a1514292740a0146ade0ea995b7d795f0" prot="public">
          <name>bus_inactivity_time_10s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>bus inactivity tome to go to sleep </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="41" column="1" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="group__linv2__interface_1ga9ea989d71b312ab373ba6d38f3d905b7" prot="public" static="no" strong="no">
        <type></type>
        <name>lin_wakeup_repeat_time_t</name>
        <enumvalue id="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a4548937b00144aa4344190df1d249b54" prot="public">
          <name>wakeup_repeat_time_180ms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a3c83122e03f9ed9e8f9be65b746b2baf" prot="public">
          <name>wakeup_repeat_time_200ms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7aae08223fccbe06b77185465d9cd7c0ca" prot="public">
          <name>wakeup_repeat_time_220ms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a28a605f1ddba92e88d3c86f35272e341" prot="public">
          <name>wakeup_repeat_time_240ms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a4548937b00144aa4344190df1d249b54" prot="public">
          <name>wakeup_repeat_time_180ms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a3c83122e03f9ed9e8f9be65b746b2baf" prot="public">
          <name>wakeup_repeat_time_200ms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7aae08223fccbe06b77185465d9cd7c0ca" prot="public">
          <name>wakeup_repeat_time_220ms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a28a605f1ddba92e88d3c86f35272e341" prot="public">
          <name>wakeup_repeat_time_240ms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>wakeup repeat time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="51" column="1" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="51" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__linv2__interface_1ga761f2e7e58a7c9101b5ced8914c0419b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t lin_get_control_and_status</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_get_control_and_status</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin get control and status register value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t control and status register value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="86" column="24" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga7787da67b80bfe04f59976a832f238f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_reset_interrupt</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_reset_interrupt</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin reset interrupt </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="96" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga3d315b1a3f4b697f28e82a55488dc4a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_reset_error</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_reset_error</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin reset error </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="106" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gac172015a3565bdb39a5b5b4258ed96a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_wakeup</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_wakeup</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin wakeup </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="116" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gaf9c82b2f4fc37b3ac43b4d080f8cf223" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_sleep</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_sleep</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin sleep </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="126" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gaa8a8e8aaa77ffae657c1c94fc89985be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_slave_stop</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_slave_stop</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin slave stop </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="136" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga6c2a3fc1378d75280871062534b11887" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_slave_ack</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_slave_ack</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin slave ack </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="146" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gac9db5280c7e2e9a987570e173ef03aad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_slave_set_bus_inactivity_time</definition>
        <argsstring>(LINV2_Type *ptr, lin_bus_inactivity_time_t time)</argsstring>
        <name>lin_slave_set_bus_inactivity_time</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__lin__interface_1gacf701a1518671653b6755496af29fd06" kindref="member">lin_bus_inactivity_time_t</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>lin slave set bus inactivity time </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>lin_bus_inactivity_time_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="157" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga92c05db58555aa0ae86fbf640d83c8d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_slave_set_wakeup_repeat_time</definition>
        <argsstring>(LINV2_Type *ptr, lin_wakeup_repeat_time_t time)</argsstring>
        <name>lin_slave_set_wakeup_repeat_time</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__lin__interface_1ga9ea989d71b312ab373ba6d38f3d905b7" kindref="member">lin_wakeup_repeat_time_t</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>lin slave set wakeup repeat time </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>lin_wakeup_repeat_time_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="169" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga6931cd17e7c49fda9989d53d64e6dabe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_set_mode</definition>
        <argsstring>(LINV2_Type *ptr, bool master)</argsstring>
        <name>lin_set_mode</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>master</declname>
        </param>
        <briefdescription>
<para>lin set mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>master</parametername>
</parameternamelist>
<parameterdescription>
<para>true for master mode, false for slave mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="181" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="181" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga3e7d889f70f5eb0d2b360af26491d132" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_set_checksum_mode</definition>
        <argsstring>(LINV2_Type *ptr, bool enhance_checksum)</argsstring>
        <name>lin_set_checksum_mode</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enhance_checksum</declname>
        </param>
        <briefdescription>
<para>lin set checksum mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enhance_checksum</parametername>
</parameternamelist>
<parameterdescription>
<para>true for enhance checksum mode, false for normal checksum mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="196" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="196" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga483917cf4b9d91679840cba21538aea0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t lin_get_data_byte</definition>
        <argsstring>(LINV2_Type *ptr, uint8_t index)</argsstring>
        <name>lin_get_data_byte</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>lin get data value in byte </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>byte index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t byte value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="212" column="23" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gaa680fdbb1f02dde68668aa8e5eab7387" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lin_write_data_byte</definition>
        <argsstring>(LINV2_Type *ptr, uint8_t index, uint8_t data)</argsstring>
        <name>lin_write_data_byte</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>lin write data value in byte </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>byte index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>byte value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="224" column="20" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga351f27d665b04f57bab048572701e1d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t lin_get_id</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_get_id</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin get ID </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t ID value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="235" column="23" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga2a035cd0f56d1f0373daa26f3510c760" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t lin_get_checksum</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_get_checksum</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin get checksum value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t checksum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="246" column="23" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga29ae09a34ad5d95fa891cf07f3cf8718" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t lin_is_active</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_is_active</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin active status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true for active, false for inactive </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="257" column="23" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gae416fd59f8e2bbc7a16ea0bc391fe3b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t lin_is_complete</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_is_complete</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>lin complete status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true for complete, false for incomplete </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="268" column="23" bodyfile="drivers/inc/hpm_linv2_drv.h" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga9e26e8d5dfd175eeb74ffdbc85ebc626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t lin_master_configure_timing</definition>
        <argsstring>(LINV2_Type *ptr, lin_timing_t *timing)</argsstring>
        <name>lin_master_configure_timing</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structlin__timing__t" kindref="compound">lin_timing_t</ref> *</type>
          <declname>timing</declname>
        </param>
        <briefdescription>
<para>lin configure timing on master mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timing</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlin__timing__t" kindref="compound">lin_timing_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hpm_stat_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>set master mode</para>
<para>src =20MHz baudrate = 19.2KHz</para>
<para>bt_div = 260, scaler = 1, bt_mul = 0</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="280" column="12" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="12" bodyend="40" declfile="drivers/inc/hpm_linv2_drv.h" declline="280" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gaf5ff09ff09f7c81df5da4d28def52780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t lin_slave_configure_timing</definition>
        <argsstring>(LINV2_Type *ptr, uint32_t src_freq_in_hz)</argsstring>
        <name>lin_slave_configure_timing</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_freq_in_hz</declname>
        </param>
        <briefdescription>
<para>lin config timing on slave mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_freq_in_hz</parametername>
</parameternamelist>
<parameterdescription>
<para>source frequency </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hpm_stat_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>set slave mode, clean bt_div, bit_mul, prescl</para>
<para>src = 20MHz, prescaler = 1, bt_div = 250</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="289" column="12" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="42" bodyend="70" declfile="drivers/inc/hpm_linv2_drv.h" declline="289" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga04b6f1b991beb3113c80e505ef80efbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lin_master_transfer</definition>
        <argsstring>(LINV2_Type *ptr, lin_trans_config_t *config)</argsstring>
        <name>lin_master_transfer</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>lin transfer on master mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>config id</para>
<para>sent or receive</para>
<para>start</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="297" column="6" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="99" bodyend="126" declfile="drivers/inc/hpm_linv2_drv.h" declline="297" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga7e7b1c960282961feeb9001461d2c70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lin_slave_transfer</definition>
        <argsstring>(LINV2_Type *ptr, lin_trans_config_t *config)</argsstring>
        <name>lin_slave_transfer</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>lin transfer on slave mode </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>call this function after lin generate data request interrupt</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>transmit or receive</para>
<para>data ack</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="307" column="6" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="231" bodyend="259" declfile="drivers/inc/hpm_linv2_drv.h" declline="307" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga74af34c200cc2d8db66d6bced36e0c83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t lin_get_data_length</definition>
        <argsstring>(LINV2_Type *ptr)</argsstring>
        <name>lin_get_data_length</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get data length </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>data length is determined by DATA_LEN register and ID</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t data length </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="317" column="9" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="88" bodyend="97" declfile="drivers/inc/hpm_linv2_drv.h" declline="317" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga92c9a1e01ad3ec8655f84aacfa68ea24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t lin_master_sent</definition>
        <argsstring>(LINV2_Type *ptr, lin_trans_config_t *config)</argsstring>
        <name>lin_master_sent</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>lin send data on master mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_timeout </para>
</simplesect>
<simplesect kind="return"><para>status_success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>wait for lin inactive</para>
<para>config id</para>
<para>load data into registers</para>
<para>start</para>
<para>waiting for lin complete</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="327" column="12" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="128" bodyend="177" declfile="drivers/inc/hpm_linv2_drv.h" declline="327" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gaa7cd44d6d3fafbd33aef2727af98b477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t lin_master_receive</definition>
        <argsstring>(LINV2_Type *ptr, lin_trans_config_t *config)</argsstring>
        <name>lin_master_receive</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>lin receive data on master mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_timeout </para>
</simplesect>
<simplesect kind="return"><para>status_success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>waiting for lin inactive</para>
<para>config id</para>
<para>receive</para>
<para>start</para>
<para>waiting for receive complete</para>
<para>load register data into buffer</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="337" column="12" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="179" bodyend="229" declfile="drivers/inc/hpm_linv2_drv.h" declline="337" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1gad61f4b08011f8d78ffc39afeff44f755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t lin_slave_sent</definition>
        <argsstring>(LINV2_Type *ptr, lin_trans_config_t *config)</argsstring>
        <name>lin_slave_sent</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>lin send data on slave mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_timeout </para>
</simplesect>
<simplesect kind="return"><para>status_success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>waiting for lin data_req</para>
<para>transmit</para>
<para>data ack</para>
<para>waiting for lin complete</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="347" column="12" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="261" bodyend="311" declfile="drivers/inc/hpm_linv2_drv.h" declline="347" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga3d867566f5bf797d7707d8c1fc66f9ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t lin_slave_receive</definition>
        <argsstring>(LINV2_Type *ptr, lin_trans_config_t *config)</argsstring>
        <name>lin_slave_receive</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>lin receive data on slave mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_timeout </para>
</simplesect>
<simplesect kind="return"><para>status_success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>waiting for lin data_req</para>
<para>receive</para>
<para>data ack</para>
<para>waiting for lin complete</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="357" column="12" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="313" bodyend="364" declfile="drivers/inc/hpm_linv2_drv.h" declline="357" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__linv2__interface_1ga4de3f507787e3c2d5205bc81b340bbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lin_slave_dma_transfer</definition>
        <argsstring>(LINV2_Type *ptr, lin_trans_config_t *config)</argsstring>
        <name>lin_slave_dma_transfer</name>
        <param>
          <type><ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>lin slave dma transfer </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>lin base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_linv2_drv.h" line="365" column="6" bodyfile="drivers/src/hpm_linv2_drv.c" bodystart="366" bodyend="373" declfile="drivers/inc/hpm_linv2_drv.h" declline="365" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_LINV2_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_LINV2_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__linv2__regs_8h" kindref="compound">hpm_linv2_regs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="group__linv2__interface_1ga36eedb214280ccadb32d3d0cffdb9c7a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIN_ID_DATA_LEN_SHIFT<sp/>4U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__linv2__interface_1gad360c033970b27dc633f7063ee49dbb7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIN_ID_DATA_LEN_MASK<sp/><sp/>0x30U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__linv2__interface_1ga3cb969fcf81ed46d50c6940489b883e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIN_ID_DATA_LEN_GET(x)<sp/>(((uint8_t)(x)<sp/>&amp;<sp/>LIN_ID_DATA_LEN_MASK)<sp/>&gt;&gt;<sp/>LIN_ID_DATA_LEN_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__linv2__interface_1ga102a6541fa3e7b9cd9ce29c211186319" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32" refid="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319a0cc8305eb1108e4fa09975c8d25f8f76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319a0cc8305eb1108e4fa09975c8d25f8f76" kindref="member">id_data_length_2bytes</ref>,</highlight></codeline>
<codeline lineno="33" refid="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319ada394e93bdf4e5095888c66d78b31458" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319ada394e93bdf4e5095888c66d78b31458" kindref="member">id_data_length_2bytes_2</ref>,<sp/></highlight></codeline>
<codeline lineno="34" refid="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319a58ab463b755281d09e75243d8da4408c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319a58ab463b755281d09e75243d8da4408c" kindref="member">id_data_length_4bytes</ref>,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319aaf1f845c1b353becbaffca2986aa3e5f" kindref="member">id_data_length_8bytes</ref></highlight></codeline>
<codeline lineno="36" refid="group__linv2__interface_1gga102a6541fa3e7b9cd9ce29c211186319aaf1f845c1b353becbaffca2986aa3e5f" refkind="member"><highlight class="normal">}<sp/><ref refid="group__linv2__interface_1ga102a6541fa3e7b9cd9ce29c211186319" kindref="member">lin_id_data_length_t</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__linv2__interface_1gacf701a1518671653b6755496af29fd06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42" refid="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a543b420e12f82a95bc2254d765032254" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a543b420e12f82a95bc2254d765032254" kindref="member">bus_inactivity_time_4s</ref>,</highlight></codeline>
<codeline lineno="43" refid="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a48eb156ab317772f40b36fecb9adec90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a48eb156ab317772f40b36fecb9adec90" kindref="member">bus_inactivity_time_6s</ref>,</highlight></codeline>
<codeline lineno="44" refid="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a99cf90c6fd882f417594f640bdda654c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a99cf90c6fd882f417594f640bdda654c" kindref="member">bus_inactivity_time_8s</ref>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a1514292740a0146ade0ea995b7d795f0" kindref="member">bus_inactivity_time_10s</ref></highlight></codeline>
<codeline lineno="46" refid="group__linv2__interface_1ggacf701a1518671653b6755496af29fd06a1514292740a0146ade0ea995b7d795f0" refkind="member"><highlight class="normal">}<sp/><ref refid="group__linv2__interface_1gacf701a1518671653b6755496af29fd06" kindref="member">lin_bus_inactivity_time_t</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__linv2__interface_1ga9ea989d71b312ab373ba6d38f3d905b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52" refid="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a4548937b00144aa4344190df1d249b54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a4548937b00144aa4344190df1d249b54" kindref="member">wakeup_repeat_time_180ms</ref>,</highlight></codeline>
<codeline lineno="53" refid="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a3c83122e03f9ed9e8f9be65b746b2baf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a3c83122e03f9ed9e8f9be65b746b2baf" kindref="member">wakeup_repeat_time_200ms</ref>,</highlight></codeline>
<codeline lineno="54" refid="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7aae08223fccbe06b77185465d9cd7c0ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7aae08223fccbe06b77185465d9cd7c0ca" kindref="member">wakeup_repeat_time_220ms</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a28a605f1ddba92e88d3c86f35272e341" kindref="member">wakeup_repeat_time_240ms</ref></highlight></codeline>
<codeline lineno="56" refid="group__linv2__interface_1gga9ea989d71b312ab373ba6d38f3d905b7a28a605f1ddba92e88d3c86f35272e341" refkind="member"><highlight class="normal">}<sp/><ref refid="group__linv2__interface_1ga9ea989d71b312ab373ba6d38f3d905b7" kindref="member">lin_wakeup_repeat_time_t</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>src_freq_in_hz;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>baudrate;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/><ref refid="structlin__timing__t" kindref="compound">lin_timing_t</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*data_buff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>data_length_from_id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_length;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enhanced_checksum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transmit;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bool<sp/>start;<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="group__linv2__interface_1ga761f2e7e58a7c9101b5ced8914c0419b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__linv2__interface_1ga761f2e7e58a7c9101b5ced8914c0419b" kindref="member">lin_get_control_and_status</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__linv2__interface_1ga7787da67b80bfe04f59976a832f238f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga7787da67b80bfe04f59976a832f238f3" kindref="member">lin_reset_interrupt</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref><sp/>=<sp/>((ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref>)<sp/>&amp;<sp/>~<ref refid="hpm__linv2__regs_8h_1adc0e896dd3b4e314fda158bbcea6fed9" kindref="member">LINV2_CONTROL_STATUS_SLEEP_MASK</ref>)<sp/>|<sp/><ref refid="hpm__linv2__regs_8h_1a794aa49f7c6c42e9e2a9f76aaf3b5155" kindref="member">LINV2_CONTROL_STATUS_RESET_INT_MASK</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group__linv2__interface_1ga3d315b1a3f4b697f28e82a55488dc4a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga3d315b1a3f4b697f28e82a55488dc4a1" kindref="member">lin_reset_error</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref><sp/>=<sp/>((ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref>)<sp/>&amp;<sp/>~<ref refid="hpm__linv2__regs_8h_1adc0e896dd3b4e314fda158bbcea6fed9" kindref="member">LINV2_CONTROL_STATUS_SLEEP_MASK</ref>)<sp/>|<sp/><ref refid="hpm__linv2__regs_8h_1a5e7018b7d99e5dd89452c8910f0eefd8" kindref="member">LINV2_CONTROL_STATUS_RESET_ERROR_MASK</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="group__linv2__interface_1gac172015a3565bdb39a5b5b4258ed96a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1gac172015a3565bdb39a5b5b4258ed96a8" kindref="member">lin_wakeup</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref><sp/>=<sp/>((ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref>)<sp/>&amp;<sp/>~<ref refid="hpm__linv2__regs_8h_1adc0e896dd3b4e314fda158bbcea6fed9" kindref="member">LINV2_CONTROL_STATUS_SLEEP_MASK</ref>)<sp/>|<sp/><ref refid="hpm__linv2__regs_8h_1a339cd066bea66b4d880985ae073e410f" kindref="member">LINV2_CONTROL_STATUS_WAKEUP_REQ_MASK</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="group__linv2__interface_1gaf9c82b2f4fc37b3ac43b4d080f8cf223" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1gaf9c82b2f4fc37b3ac43b4d080f8cf223" kindref="member">lin_sleep</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref><sp/>|=<sp/><ref refid="hpm__linv2__regs_8h_1adc0e896dd3b4e314fda158bbcea6fed9" kindref="member">LINV2_CONTROL_STATUS_SLEEP_MASK</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__linv2__interface_1gaa8a8e8aaa77ffae657c1c94fc89985be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1gaa8a8e8aaa77ffae657c1c94fc89985be" kindref="member">lin_slave_stop</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref><sp/>=<sp/>((ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref>)<sp/>&amp;<sp/>~<ref refid="hpm__linv2__regs_8h_1adc0e896dd3b4e314fda158bbcea6fed9" kindref="member">LINV2_CONTROL_STATUS_SLEEP_MASK</ref>)<sp/>|<sp/><ref refid="hpm__linv2__regs_8h_1a7f36d222592c0b21be2ac7c631df25a3" kindref="member">LINV2_CONTROL_STATUS_STOP_MASK</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group__linv2__interface_1ga6c2a3fc1378d75280871062534b11887" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga6c2a3fc1378d75280871062534b11887" kindref="member">lin_slave_ack</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref><sp/>=<sp/>((ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref>)<sp/>&amp;<sp/>~<ref refid="hpm__linv2__regs_8h_1adc0e896dd3b4e314fda158bbcea6fed9" kindref="member">LINV2_CONTROL_STATUS_SLEEP_MASK</ref>)<sp/>|<sp/><ref refid="hpm__linv2__regs_8h_1a286989efb70587cb25599e340383a290" kindref="member">LINV2_CONTROL_STATUS_DATA_ACK_MASK</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="group__linv2__interface_1gac9db5280c7e2e9a987570e173ef03aad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1gac9db5280c7e2e9a987570e173ef03aad" kindref="member">lin_slave_set_bus_inactivity_time</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="group__lin__interface_1gacf701a1518671653b6755496af29fd06" kindref="member">lin_bus_inactivity_time_t</ref><sp/>time)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1af11b589a040fb9b67fb9cece50186823" kindref="member">TIMING_CONTROL</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structLINV2__Type_1af11b589a040fb9b67fb9cece50186823" kindref="member">TIMING_CONTROL</ref><sp/>&amp;<sp/>(~<ref refid="hpm__linv2__regs_8h_1a0cb628268d1e3d4e5a14255dd54905c2" kindref="member">LINV2_TIMING_CONTROL_BUS_INACTIVE_TIME_MASK</ref>))</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__linv2__regs_8h_1a20eed597e2fc3aa8d8a04ddff3f8d3ec" kindref="member">LINV2_TIMING_CONTROL_BUS_INACTIVE_TIME_SET</ref>(time);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="group__linv2__interface_1ga92c05db58555aa0ae86fbf640d83c8d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga92c05db58555aa0ae86fbf640d83c8d5" kindref="member">lin_slave_set_wakeup_repeat_time</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="group__lin__interface_1ga9ea989d71b312ab373ba6d38f3d905b7" kindref="member">lin_wakeup_repeat_time_t</ref><sp/>time)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1af11b589a040fb9b67fb9cece50186823" kindref="member">TIMING_CONTROL</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structLINV2__Type_1af11b589a040fb9b67fb9cece50186823" kindref="member">TIMING_CONTROL</ref><sp/>&amp;<sp/>(~<ref refid="hpm__linv2__regs_8h_1add5715c6ca46502ed742ad97b108fa3f" kindref="member">LINV2_TIMING_CONTROL_WUP_REPEAT_TIME_MASK</ref>))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__linv2__regs_8h_1a330580233ac0bd406bc31a29f519ef45" kindref="member">LINV2_TIMING_CONTROL_WUP_REPEAT_TIME_SET</ref>(time);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__linv2__interface_1ga6931cd17e7c49fda9989d53d64e6dabe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga6931cd17e7c49fda9989d53d64e6dabe" kindref="member">lin_set_mode</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>master)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1af11b589a040fb9b67fb9cece50186823" kindref="member">TIMING_CONTROL</ref><sp/>|=<sp/><ref refid="hpm__linv2__regs_8h_1a46c9d0e28df9c4564e4c0fa24a89c32f" kindref="member">LINV2_TIMING_CONTROL_MASTER_MODE_MASK</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1af11b589a040fb9b67fb9cece50186823" kindref="member">TIMING_CONTROL</ref><sp/>&amp;=<sp/>~<ref refid="hpm__linv2__regs_8h_1a46c9d0e28df9c4564e4c0fa24a89c32f" kindref="member">LINV2_TIMING_CONTROL_MASTER_MODE_MASK</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="group__linv2__interface_1ga3e7d889f70f5eb0d2b360af26491d132" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga3e7d889f70f5eb0d2b360af26491d132" kindref="member">lin_set_checksum_mode</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enhance_checksum)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enhance_checksum)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1a11e401888da4f6ad21f7d95f09c9e0cd" kindref="member">DATA_LEN_ID</ref><sp/>|=<sp/><ref refid="hpm__linv2__regs_8h_1a5b92b3fa79c802227cad12b871abe21a" kindref="member">LINV2_DATA_LEN_ID_ENH_CHECK_MASK</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1a11e401888da4f6ad21f7d95f09c9e0cd" kindref="member">DATA_LEN_ID</ref><sp/>&amp;=<sp/>~<ref refid="hpm__linv2__regs_8h_1a5b92b3fa79c802227cad12b871abe21a" kindref="member">LINV2_DATA_LEN_ID_ENH_CHECK_MASK</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="group__linv2__interface_1ga483917cf4b9d91679840cba21538aea0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__linv2__interface_1ga483917cf4b9d91679840cba21538aea0" kindref="member">lin_get_data_byte</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structLINV2__Type_1a7e323e9a3f05e3144e94046272eb5cc6" kindref="member">DATA_BYTE</ref>[index];</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group__linv2__interface_1gaa680fdbb1f02dde68668aa8e5eab7387" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1gaa680fdbb1f02dde68668aa8e5eab7387" kindref="member">lin_write_data_byte</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>index,<sp/>uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structLINV2__Type_1a7e323e9a3f05e3144e94046272eb5cc6" kindref="member">DATA_BYTE</ref>[index]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="group__linv2__interface_1ga351f27d665b04f57bab048572701e1d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__linv2__interface_1ga351f27d665b04f57bab048572701e1d5" kindref="member">lin_get_id</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)<ref refid="hpm__linv2__regs_8h_1a3366efda78f67375de547418048f1227" kindref="member">LINV2_DATA_LEN_ID_ID_GET</ref>(ptr-&gt;<ref refid="structLINV2__Type_1a11e401888da4f6ad21f7d95f09c9e0cd" kindref="member">DATA_LEN_ID</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="group__linv2__interface_1ga2a035cd0f56d1f0373daa26f3510c760" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__linv2__interface_1ga2a035cd0f56d1f0373daa26f3510c760" kindref="member">lin_get_checksum</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)<ref refid="hpm__linv2__regs_8h_1a7abb6ac951b78486181b1cad2d0de03a" kindref="member">LINV2_DATA_LEN_ID_CHECKSUM_GET</ref>(ptr-&gt;<ref refid="structLINV2__Type_1a11e401888da4f6ad21f7d95f09c9e0cd" kindref="member">DATA_LEN_ID</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="group__linv2__interface_1ga29ae09a34ad5d95fa891cf07f3cf8718" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__linv2__interface_1ga29ae09a34ad5d95fa891cf07f3cf8718" kindref="member">lin_is_active</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref><sp/>&amp;<sp/><ref refid="hpm__linv2__regs_8h_1aa2b0ac0bb8372e5d00a939c5baa519dc" kindref="member">LINV2_CONTROL_STATUS_LIN_ACTIVE_MASK</ref>)<sp/>==<sp/><ref refid="hpm__linv2__regs_8h_1aa2b0ac0bb8372e5d00a939c5baa519dc" kindref="member">LINV2_CONTROL_STATUS_LIN_ACTIVE_MASK</ref>)<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="group__linv2__interface_1gae416fd59f8e2bbc7a16ea0bc391fe3b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__linv2__interface_1gae416fd59f8e2bbc7a16ea0bc391fe3b7" kindref="member">lin_is_complete</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structLINV2__Type_1adfe3073ecdb36b3403c89fb084b26c06" kindref="member">CONTROL_STATUS</ref><sp/>&amp;<sp/><ref refid="hpm__linv2__regs_8h_1a7b9c7eab60db417450073154b5b8f76e" kindref="member">LINV2_CONTROL_STATUS_COMPLETE_MASK</ref>)<sp/>==<sp/><ref refid="hpm__linv2__regs_8h_1a7b9c7eab60db417450073154b5b8f76e" kindref="member">LINV2_CONTROL_STATUS_COMPLETE_MASK</ref>)<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__linv2__interface_1ga9e26e8d5dfd175eeb74ffdbc85ebc626" kindref="member">lin_master_configure_timing</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="structlin__timing__t" kindref="compound">lin_timing_t</ref><sp/>*timing);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__linv2__interface_1gaf5ff09ff09f7c81df5da4d28def52780" kindref="member">lin_slave_configure_timing</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>src_freq_in_hz);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga04b6f1b991beb3113c80e505ef80efbf" kindref="member">lin_master_transfer</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga7e7b1c960282961feeb9001461d2c70e" kindref="member">lin_slave_transfer</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">uint8_t<sp/><ref refid="group__linv2__interface_1ga74af34c200cc2d8db66d6bced36e0c83" kindref="member">lin_get_data_length</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__linv2__interface_1ga92c9a1e01ad3ec8655f84aacfa68ea24" kindref="member">lin_master_sent</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__linv2__interface_1gaa7cd44d6d3fafbd33aef2727af98b477" kindref="member">lin_master_receive</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__linv2__interface_1gad61f4b08011f8d78ffc39afeff44f755" kindref="member">lin_slave_sent</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__linv2__interface_1ga3d867566f5bf797d7707d8c1fc66f9ce" kindref="member">lin_slave_receive</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__linv2__interface_1ga4de3f507787e3c2d5205bc81b340bbb1" kindref="member">lin_slave_dma_transfer</ref>(<ref refid="structLINV2__Type" kindref="compound">LINV2_Type</ref><sp/>*ptr,<sp/><ref refid="structlin__trans__config__t" kindref="compound">lin_trans_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_LINV2_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_linv2_drv.h"/>
  </compounddef>
</doxygen>
