<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__mcan__drv_8h" kind="file" language="C++">
    <compoundname>hpm_mcan_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_mcan_regs.h</includes>
    <includes local="yes">hpm_mcan_soc.h</includes>
    <includedby refid="hpm__mcan__drv_8c" local="yes">drivers/src/hpm_mcan_drv.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_mcan_drv.h</label>
        <link refid="hpm__mcan__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>hpm_mcan_soc.h</label>
      </node>
      <node id="8">
        <label>hpm_mcan_regs.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>drivers/inc/hpm_mcan_drv.h</label>
        <link refid="hpm__mcan__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drivers/src/hpm_mcan_drv.c</label>
        <link refid="hpm__mcan__drv_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structmcan__bit__timing__param__struct" prot="public">mcan_bit_timing_param_struct</innerclass>
    <innerclass refid="structmcan__tx__message__struct" prot="public">mcan_tx_message_struct</innerclass>
    <innerclass refid="structmcan__rx__message__struct" prot="public">mcan_rx_message_struct</innerclass>
    <innerclass refid="unionmcan__tx__event__fifo__elem__struct" prot="public">mcan_tx_event_fifo_elem_struct</innerclass>
    <innerclass refid="unionmcan__filter__config__struct" prot="public">mcan_filter_config_struct</innerclass>
    <innerclass refid="unionmcan__rxfifo__config__struct" prot="public">mcan_rxfifo_config_struct</innerclass>
    <innerclass refid="structmcan__rxbuf__config__t" prot="public">mcan_rxbuf_config_t</innerclass>
    <innerclass refid="unionmcan__rx__fifo__or__buf__elem__config__struct" prot="public">mcan_rx_fifo_or_buf_elem_config_struct</innerclass>
    <innerclass refid="unionmcan__txbuf__config__struct" prot="public">mcan_txbuf_config_struct</innerclass>
    <innerclass refid="structmcan__txbuf__elem__config__struct" prot="public">mcan_txbuf_elem_config_struct</innerclass>
    <innerclass refid="unionmcan__tx__evt__fifo__config__t" prot="public">mcan_tx_evt_fifo_config_t</innerclass>
    <innerclass refid="structmcan__ram__flexible__config__struct" prot="public">mcan_ram_flexible_config_struct</innerclass>
    <innerclass refid="structmcan__ram__config__struct" prot="public">mcan_ram_config_struct</innerclass>
    <innerclass refid="structmcan__global__filter__config__struct" prot="public">mcan_global_filter_config_struct</innerclass>
    <innerclass refid="structmcan__std__id__filter__elem__struct" prot="public">mcan_std_id_filter_elem_struct</innerclass>
    <innerclass refid="structmcan__filter__elem__list__struct" prot="public">mcan_filter_elem_list_struct</innerclass>
    <innerclass refid="structmcan__all__filters__config__struct" prot="public">mcan_all_filters_config_struct</innerclass>
    <innerclass refid="structmcan__timestamp__value__struct" prot="public">mcan_timestamp_value_struct</innerclass>
    <innerclass refid="structmcan__tsu__config__struct" prot="public">mcan_tsu_config_struct</innerclass>
    <innerclass refid="structmcan__internal__timestamp__config__struct" prot="public">mcan_internal_timestamp_config_struct</innerclass>
    <innerclass refid="structmcan__timeout__config__struct" prot="public">mcan_timeout_config_struct</innerclass>
    <innerclass refid="structmcan__tdc__config__t" prot="public">mcan_tdc_config_t</innerclass>
    <innerclass refid="structmcan__config__struct" prot="public">mcan_config_struct</innerclass>
    <innerclass refid="structmcan__timeout__counter__config__struct" prot="public">mcan_timeout_counter_config_struct</innerclass>
    <innerclass refid="structmcan__error__count__struct" prot="public">mcan_error_count_struct</innerclass>
    <innerclass refid="structmcan__protocol__status" prot="public">mcan_protocol_status</innerclass>
    <innerclass refid="structmcan__high__priority__message__status__struct" prot="public">mcan_high_priority_message_status_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__mcan__interface_1ga95b84a545c63b03ac3cdb753c19fc196" prot="public" static="no">
        <name>MCAN_INT_ACCESS_TO_RESERVED_ADDR</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a3d197de997a03d213bca243c2bd64da5" kindref="member">MCAN_IR_ARA_MASK</ref></initializer>
        <briefdescription>
<para>CAN Interrupt Mask. </para>
        </briefdescription>
        <detaileddescription>
<para>Access to Reserved Address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="48" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga933c0392b456f7531af6afe49fc068ee" prot="public" static="no">
        <name>MCAN_INT_PROTOCOL_ERR_IN_DATA_PHASE</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a07e8095cf8a102256a540463e408b083" kindref="member">MCAN_IR_PED_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protocol Error Happened at Data Phase </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="49" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaf82149b4a723097eb652db6389a32c41" prot="public" static="no">
        <name>MCAN_INT_PROTOCOL_ERR_IN_ARB_PHASE</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1aafd8ccd1c58289d09930c1f6adbfc282" kindref="member">MCAN_IR_PEA_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protocol Error Happened at Arbitration Phase </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="50" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gac96a002280b6d80a73c35b6dc1f3c207" prot="public" static="no">
        <name>MCAN_INT_WATCHDOG_INT</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1afec404e15c87de530becb41ab0563241" kindref="member">MCAN_IR_WDI_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Watchdog interrupt </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="51" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga4fa7114c13e5de0ef2a93a386ed61c5c" prot="public" static="no">
        <name>MCAN_INT_BUS_OFF_STATUS</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a3900911f215dbf20442e76793f008209" kindref="member">MCAN_IR_BO_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bus-off State Change </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="53" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaa91e29a54f4b2b537e90b514968884b9" prot="public" static="no">
        <name>MCAN_INT_WARNING_STATUS</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a1e9e4c5d3a967dd0e47e41a90a5254c0" kindref="member">MCAN_IR_EW_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error Warning State Change </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="54" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga8e2cf1fbcea4cb1c726bd1e71287caab" prot="public" static="no">
        <name>MCAN_INT_ERROR_PASSIVE</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1aad48b5cb4e20bcf814f423ba73e1f941" kindref="member">MCAN_IR_EP_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error Passive State Change </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="55" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga1349063503c193d24c593318eac86f15" prot="public" static="no">
        <name>MCAN_INT_ERROR_LOGGING_OVERFLOW</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1aef807c74f758ce1a48dfefa2225e5cea" kindref="member">MCAN_IR_ELO_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error Logging Overflow </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="56" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gabfda683ac12812ec0050cd52c80c8b47" prot="public" static="no">
        <name>MCAN_INT_BIT_ERROR_UNCORRECTED</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a58d504256c02df6d9608363be6c32021" kindref="member">MCAN_IR_BEU_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit Error was not corrected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="57" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga1308c8d23df54807fbba45afbb8e0e9b" prot="public" static="no">
        <name>MCAN_INT_BIT_ERROR_CORRECTED</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a3bb6acfcaf9567802336f392e5e8efed" kindref="member">MCAN_IR_BEC_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit Error was corrected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="58" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga355255a7c0185b428ce87f00a86f4076" prot="public" static="no">
        <name>MCAN_INT_MSG_STORE_TO_RXBUF</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a84f731c762415990e18f3a81b30cec54" kindref="member">MCAN_IR_DRX_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message was stored to RX Buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="60" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga1e11b702ece930e609dbe550b3b01970" prot="public" static="no">
        <name>MCAN_INT_TIMEOUT_OCCURRED</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1ad7e8fde257696dd3267e81d8d596c8e6" kindref="member">MCAN_IR_TOO_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timeout Interrupt </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="61" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gac7c0b516609a429a5d493f454281922e" prot="public" static="no">
        <name>MCAN_INT_MSG_RAM_ACCESS_FAILURE</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a50510ed21bf04a130bc9be76dabcc391" kindref="member">MCAN_IR_MRAF_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message RAM Access Failure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="62" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga112c7816d925806ade9af437949efd3a" prot="public" static="no">
        <name>MCAN_INT_TIMESTAMP_WRAPAROUND</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a255cc687fcda31d0c986e4275a450f36" kindref="member">MCAN_IR_TSW_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp Counter Wrap Around </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="63" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga0d2b7aba4e185ba95bb9b8b83134fe2d" prot="public" static="no">
        <name>MCAN_INT_TX_EVT_FIFO_EVT_LOST</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a642b06731edc5b3baad835e55f749a95" kindref="member">MCAN_IR_TEFL_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TX Event FIFO Element Lost </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="65" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga27af6bce2fdc3a5bf04fc8ef91e4617f" prot="public" static="no">
        <name>MCAN_INT_TX_EVT_FIFO_FULL</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1afdfa6cd16e9b96d36f03227efac236f7" kindref="member">MCAN_IR_TEFF_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TX Event FIFO Full </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="66" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga79ea68468d00936ae08312ec65a84fb9" prot="public" static="no">
        <name>MCAN_INT_TX_EVT_FIFO_WMK_REACHED</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1ad63578ea89622272e03a0fbf7c555ca9" kindref="member">MCAN_IR_TEFW_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TX Event FIFO Watermark Reached </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="67" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga59fad03e3f46f09741d68b8ed4406759" prot="public" static="no">
        <name>MCAN_INT_TX_EVT_FIFO_NEW_ENTRY</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a8073e7e74c6b8be27c511d8448c354ed" kindref="member">MCAN_IR_TEFN_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TX Event FIFO New Entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="68" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga08b3478e798eb1d85930bb1565d9b7ab" prot="public" static="no">
        <name>MCAN_INT_TXFIFO_EMPTY</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a99e74c78ef53d8ab9b222d9bbee6edef" kindref="member">MCAN_IR_TFE_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TX FIFO Empty </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="70" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga72593992b97b2d00208f0e4fb7a67b44" prot="public" static="no">
        <name>MCAN_INT_TX_CANCEL_FINISHED</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a528e0c9f9d20c8893ba9a0850abd2c8a" kindref="member">MCAN_IR_TCF_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmission Cancellation Finished </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="71" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga672b9a03deb2c4c3103d5c72c92145bc" prot="public" static="no">
        <name>MCAN_INT_TX_COMPLETED</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a6ad8c09f2d474d90e85af1d14f8e7515" kindref="member">MCAN_IR_TC_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmission Completed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="72" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga50c6bb6b133169a7bc67595d3124ab1f" prot="public" static="no">
        <name>MCAN_INT_HIGH_PRIORITY_MSG</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a187b9007665e80f5b2a72ebc73e805e7" kindref="member">MCAN_IR_HPM_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>High Priority Message </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="73" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gae50cafd23722dd8a6d484d8beaff8f89" prot="public" static="no">
        <name>MCAN_INT_RXFIFO1_MSG_LOST</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1adadd8859153cfe6e0013b4bd993ef988" kindref="member">MCAN_IR_RF1L_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RX FIFO0 Message Lost </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="75" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga9d2ea3fa5d1df032d7c58607854f0c5a" prot="public" static="no">
        <name>MCAN_INT_RXFIFO1_FULL</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a872a5feabaa32ce21a5aa8d14e0c963c" kindref="member">MCAN_IR_RF1F_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RX FIFO1 Full </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="76" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gabbfa432572fd3977a5e2df40795b6ecc" prot="public" static="no">
        <name>MCAN_INT_RXFIFO1_WMK_REACHED</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1acf159c74c5b715e042a86a40fc719ed5" kindref="member">MCAN_IR_RF1W_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RX FIFO1 Watermark Reached </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="77" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gac59ca1a279089b5cce3037e82a8d5336" prot="public" static="no">
        <name>MCAN_INT_RXFIFO1_NEW_MSG</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a402fbe5b855220ade1e379096d61113d" kindref="member">MCAN_IR_RF1N_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RX FIFO1 New Message </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="78" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga78150028ebff76dcfc54b86e0bce69e4" prot="public" static="no">
        <name>MCAN_INT_RXFIFO0_MSG_LOST</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1ad763b7c38db3153f1a4dca1d60254791" kindref="member">MCAN_IR_RF0L_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RX FIFO0 Message Lost </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="80" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga9a50abf751bbf6ed5ea7c026b0b3f4d2" prot="public" static="no">
        <name>MCAN_INT_RXFIFO0_FULL</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a5963cd82f13c46a94680cc65484ee9ea" kindref="member">MCAN_IR_RF0F_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RX FIFO0 Full </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="81" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga059adfadf43b587917890841d94433fd" prot="public" static="no">
        <name>MCAN_INT_RXFIFO0_WMK_REACHED</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a039ead0598023baf5ce2dbd37b61f611" kindref="member">MCAN_IR_RF0W_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RX FIFO0 Watermark Reached </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="82" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaa18292755dea8e3800f5382dca4cf4cf" prot="public" static="no">
        <name>MCAN_INT_RXFIFO0_NEW_MSG</name>
        <initializer><ref refid="HPM6E00_2ip_2hpm__mcan__regs_8h_1a3830dacba7a26cd6ad0ebe6efd12f679" kindref="member">MCAN_IR_RF0N_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RX FIFO0 New Message </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="83" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga49d3fbb666526c5ae3d0a9dac683a20c" prot="public" static="no">
        <name>MCAN_EVENT_RECEIVE</name>
        <initializer>(<ref refid="group__mcan__interface_1gaa18292755dea8e3800f5382dca4cf4cf" kindref="member">MCAN_INT_RXFIFO0_NEW_MSG</ref> | <ref refid="group__mcan__interface_1gac59ca1a279089b5cce3037e82a8d5336" kindref="member">MCAN_INT_RXFIFO1_NEW_MSG</ref> | <ref refid="group__mcan__interface_1ga355255a7c0185b428ce87f00a86f4076" kindref="member">MCAN_INT_MSG_STORE_TO_RXBUF</ref>)</initializer>
        <briefdescription>
<para>MCAN Receive Event Flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="88" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga6a10ac6d2e6beb8a10591ee0f15cdcc8" prot="public" static="no">
        <name>MCAN_EVENT_TRANSMIT</name>
        <initializer>(<ref refid="group__mcan__interface_1ga672b9a03deb2c4c3103d5c72c92145bc" kindref="member">MCAN_INT_TX_COMPLETED</ref>)</initializer>
        <briefdescription>
<para>MCAN Transmit Event Flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="93" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga448e390802a22227edcadf6422697613" prot="public" static="no">
        <name>MCAN_EVENT_ERROR</name>
        <initializer>                        (<ref refid="group__mcan__interface_1ga4fa7114c13e5de0ef2a93a386ed61c5c" kindref="member">MCAN_INT_BUS_OFF_STATUS</ref> | <ref refid="group__mcan__interface_1gaa91e29a54f4b2b537e90b514968884b9" kindref="member">MCAN_INT_WARNING_STATUS</ref> \
                        | <ref refid="group__mcan__interface_1ga8e2cf1fbcea4cb1c726bd1e71287caab" kindref="member">MCAN_INT_ERROR_PASSIVE</ref> | <ref refid="group__mcan__interface_1gabfda683ac12812ec0050cd52c80c8b47" kindref="member">MCAN_INT_BIT_ERROR_UNCORRECTED</ref> \
                        | <ref refid="group__mcan__interface_1ga933c0392b456f7531af6afe49fc068ee" kindref="member">MCAN_INT_PROTOCOL_ERR_IN_DATA_PHASE</ref> | <ref refid="group__mcan__interface_1gaf82149b4a723097eb652db6389a32c41" kindref="member">MCAN_INT_PROTOCOL_ERR_IN_ARB_PHASE</ref>)</initializer>
        <briefdescription>
<para>MCAN Error Event Flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="97" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gad005d5796e4ff0654c2dab1d54a7c2e6" prot="public" static="no">
        <name>MCAN_TX_RETRY_COUNT_MAX</name>
        <initializer>(10000000UL)</initializer>
        <briefdescription>
<para>Maximum Transmission Retry Count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="104" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga3dea7eae649ca71c8207f911863d40ed" prot="public" static="no">
        <name>MCAN_RX_RETRY_COUNT_MAX</name>
        <initializer>(80000000UL)</initializer>
        <briefdescription>
<para>Maximum Receive Wait Retry Count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="108" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga997b2ce82a831703286127c0676b9f71" prot="public" static="no">
        <name>MCAN_RAM_WORD_SIZE</name>
        <initializer>(640U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RAM WORD Size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="137" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga35c37a139fec3ae150b1cd96d411921e" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_STD_ID_SIZE</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard Filter Element Size in Bytes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="139" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga36b395305b0b79397e84d1b6bb510453" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_EXT_ID_SIZE</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extended Filter Element SIze in Bytes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="140" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga6571b2133de4ac63c610f3bb906ddd0c" prot="public" static="no">
        <name>MCAN_STD_FILTER_ELEM_SIZE_MAX</name>
        <initializer>(128U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum Standard Filter Element Count </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="141" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaa54ab784a4ea8bd7ea19165b0a653a55" prot="public" static="no">
        <name>MCAN_EXT_FILTER_ELEM_SIZE_MAX</name>
        <initializer>(64U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum Extended Filter Element Count </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="142" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" prot="public" static="no">
        <name>MCAN_TXRX_ELEM_SIZE_CAN_MAX</name>
        <initializer>(4U * sizeof(uint32_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="144" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" prot="public" static="no">
        <name>MCAN_FILTER_SIZE_CAN_DEFAULT</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="145" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" prot="public" static="no">
        <name>MCAN_TXBUF_SIZE_CAN_DEFAULT</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="146" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga8b3995f31bda7580a3f40062daf59b4a" prot="public" static="no">
        <name>MCAN_RXFIFO_SIZE_CAN_DEFAULT</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="147" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaf6a741961533265ecdb425fd77cc9ae9" prot="public" static="no">
        <name>MCAN_RXBUF_SIZE_CAN_DEFAULT</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="148" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga67be209abcb9fa85ec59fd843e501d41" prot="public" static="no">
        <name>MCAN_TXRX_ELEM_SIZE_CANFD_MAX</name>
        <initializer>(18U * sizeof(uint32_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="150" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" prot="public" static="no">
        <name>MCAN_FILTER_SIZE_CANFD_DEFAULT</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="151" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga6565285b4c135fb12a192bcc739e058f" prot="public" static="no">
        <name>MCAN_TXBUF_SIZE_CANFD_DEFAULT</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="152" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga775bcbf0151ecdea49a0eb8f0f878501" prot="public" static="no">
        <name>MCAN_RXFIFO_SIZE_CANFD_DEFAULT</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="153" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga70b761a43c3e5044c4981c098b044b20" prot="public" static="no">
        <name>MCAN_RXBUF_SIZE_CANFD_DEFAULT</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="154" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga5046037b45ae3883a9ec5bd66cdd5178" prot="public" static="no">
        <name>MCAN_TXEVT_ELEM_SIZE</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="156" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gad10599ebb9be53be0943ec3776c15c34" prot="public" static="no">
        <name>MCAN_MESSAGE_HEADER_SIZE_IN_BYTES</name>
        <initializer>(8U)</initializer>
        <briefdescription>
<para>CAN Message Header Size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="181" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga9e665d0219cbf9ab308fcbd03bea9ff5" prot="public" static="no">
        <name>MCAN_MESSAGE_HEADER_SIZE_IN_WORDS</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="182" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga8c15fb63ba3d2d3064d20fd33843719e" prot="public" static="no">
        <name>MCAN_CAN_ID_TYPE_STANDARD</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>CAN Identifier Types. </para>
        </briefdescription>
        <detaileddescription>
<para>Standard Identifier </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="312" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gae51f96d3420870c9446758cabf9e8bee" prot="public" static="no">
        <name>MCAN_CAN_ID_TYPE_EXTENDED</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extended Identifier </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="313" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gace3d4933dbe3dfbd720578f05b1e534a" prot="public" static="no">
        <name>MCAN_DATA_FIELD_SIZE_8BYTES</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>MCAN Data Field Size Definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="349" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga37b23c93ef81ea6ca8150053fae905bb" prot="public" static="no">
        <name>MCAN_DATA_FIELD_SIZE_12BYTES</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="350" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaff4f91816c182e2b58bb31b3b0d42af9" prot="public" static="no">
        <name>MCAN_DATA_FIELD_SIZE_16BYTES</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="351" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gac53ed46f103fefe78333884e1ece53df" prot="public" static="no">
        <name>MCAN_DATA_FIELD_SIZE_20BYTES</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="352" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga63e2645c1d55fad06c8e6aaed5612426" prot="public" static="no">
        <name>MCAN_DATA_FIELD_SIZE_24BYTES</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="353" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga541112be859cf166067b6a8a2c8d056c" prot="public" static="no">
        <name>MCAN_DATA_FIELD_SIZE_32BYTES</name>
        <initializer>(5U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="354" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaae4ba919b25b76af4a17b2cdbdd4571e" prot="public" static="no">
        <name>MCAN_DATA_FIELD_SIZE_48BYTES</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="355" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaa738e5bad0344cec9fac63d943a623d9" prot="public" static="no">
        <name>MCAN_DATA_FIELD_SIZE_64BYTES</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="356" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gab242ef50a19f608dee89fed9c131eb82" prot="public" static="no">
        <name>MCAN_FIFO_OPERATION_MODE_BLOCKING</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>MCAN FIFO Operation Mode types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="361" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga4361c762d486515b3747305bbba6beb6" prot="public" static="no">
        <name>MCAN_FIFO_OPERATION_MODE_OVERWRITE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="362" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gad53838321215f998ab4117b3cd7a18be" prot="public" static="no">
        <name>MCAN_TXBUF_OPERATION_MODE_FIFO</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>MCAN TXBUF operation mode types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="380" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga95d750717d02852f461c46e7bf361622" prot="public" static="no">
        <name>MCAN_TXBUF_OPERATION_MODE_QUEUE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="381" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga51cf75d4a4d1ea24ccd25dcc7aba7fd4" prot="public" static="no">
        <name>MCAN_ACCEPT_NON_MATCHING_FRAME_OPTION_IN_RXFIFO0</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>MCAN Accept Non-Matching Frame options. </para>
        </briefdescription>
        <detaileddescription>
<para>Save non-matching frame to RXFIFO0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="480" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga65375097667774e12a1259b2cff16064" prot="public" static="no">
        <name>MCAN_ACCEPT_NON_MATCHING_FRAME_OPTION_IN_RXFIFO1</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save non-matching frame to RXFIFO1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="481" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gae5f77e599ca64adae8b62b2cdb5ef09f" prot="public" static="no">
        <name>MCAN_ACCEPT_NON_MATCHING_FRAME_OPTION_REJECT</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reject non-matching frame </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="482" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga8bb417d875b4d89a998df621362c0a42" prot="public" static="no">
        <name>MCAN_FILTER_TYPE_RANGE_FILTER</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>MCAN Filter type definitions. </para>
        </briefdescription>
        <detaileddescription>
<para>CAN Identifier Range filter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="497" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga14b07636a96d2e292e48f09bf0e1643d" prot="public" static="no">
        <name>MCAN_FILTER_TYPE_SPECIFIED_ID_FILTER</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Identifier ID filter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="498" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaa27b937448fe2ed18091fac7b4ff4ed7" prot="public" static="no">
        <name>MCAN_FILTER_TYPE_CLASSIC_FILTER</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN classic filter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="499" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gac841ca977cbae32a6c986c145094293d" prot="public" static="no">
        <name>MCAN_FILTER_TYPE_FILTER_DISABLED</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN filter disabled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="500" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga96ec06bafc9948c4c60ec51080c9ed5e" prot="public" static="no">
        <name>MCAN_FILTER_TYPE_DUAL_ID_EXT_FILTER_IGNORE_MASK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Identifier Range filter, ignoring extended ID mask </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="501" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gac9a4794c83cad7a44025991108ec5125" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_CFG_DISABLED</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>MCAN Filter Configuration Options. </para>
        </briefdescription>
        <detaileddescription>
<para>Disable Filter Element </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="506" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga37557c65749255e5998681a274326c1c" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_CFG_STORE_IN_RX_FIFO0_IF_MATCH</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store data into RXFIFO0 if matching </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="507" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga6508b92af005dbcd9b9cb7327c37aef9" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_CFG_STORE_IN_RX_FIFO1_IF_MATCH</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store data into RXFIFO1 if matching </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="508" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga46f8c21fa27c57e069395949f30786a6" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_CFG_REJECT_ID_IF_MATCH</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reject ID if matching </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="509" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaa2a247274ec658344c8f22e7d3a36656" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_CFG_SET_PRIORITY_IF_MATCH</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set Priority if matching Set Priority and store into RXFIFO0 if matching </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="510" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga9d281cdd74a812a0f5a667781668c186" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_CFG_SET_PRIORITY_AND_STORE_IN_FIFO0_IF_MATCH</name>
        <initializer>(5U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set Priority and store into RXFIFO1 if matching </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="512" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga83f9878185ee3589a9a98d14499add42" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_CFG_SET_PRIORITY_AND_STORE_IN_FIFO1_IF_MATCH</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="514" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gab4d681d2b6025820cf782870540023ab" prot="public" static="no">
        <name>MCAN_FILTER_ELEM_CFG_STORE_INTO_RX_BUFFER_OR_AS_DBG_MSG</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store into RXBUF if matching </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="515" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga50da67553c9c3322a0da467c3a22641d" prot="public" static="no">
        <name>MCAN_TIMESTAMP_SEL_MIN</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>MCAN Timestamp Select. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="617" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga2fe695863ba95530aa5c8b3ae3bbf8d8" prot="public" static="no">
        <name>MCAN_TIMESTAMP_SEL_VALUE_ALWAYS_ZERO</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp value always equal to 0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="618" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga4a9f63258d707d57539ac7fa3256cc43" prot="public" static="no">
        <name>MCAN_TIMESTAMP_SEL_VALUE_INCREMENT</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp value increments according to prescaler </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="619" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaed39acc07f4b3ee4c7004729d1c7d152" prot="public" static="no">
        <name>MCAN_TIMESTAMP_SEL_EXT_TS_VAL_USED</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Timestamp value used </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="620" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga13979fcab78c18dc9b18dc46a51cdb4f" prot="public" static="no">
        <name>MCAN_TIMESTAMP_SEL_MAX</name>
        <initializer>(<ref refid="group__mcan__interface_1gaed39acc07f4b3ee4c7004729d1c7d152" kindref="member">MCAN_TIMESTAMP_SEL_EXT_TS_VAL_USED</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="621" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gad2246d5606101f81f857301d50e3697d" prot="public" static="no">
        <name>MCAN_TIMEOUT_SEL_TYPE_CONTINUOUS_OPERATION</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>MCAN Timeout Selection Options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="707" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga7483abcd9b58162c53d1148233552aea" prot="public" static="no">
        <name>MCAN_TIMEOUT_SEL_TYPE_TIMEOUT_CTRL_BY_TX_EVT_FIFO</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="708" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga48295e6ccaf56f8e12f199a35ed7614b" prot="public" static="no">
        <name>MCAN_TIMEOUT_SEL_TYPE_TIMEOUT_CTRL_BY_RX_FIFO0</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="709" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga43fd05103118a985616be885e102e740" prot="public" static="no">
        <name>MCAN_TIMEOUT_SEL_TYPE_TIMEOUT_CTRL_BY_RX_FIFO1</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="710" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga2b6a7790d97a802c4b2911c58a5aa9c8" prot="public" static="no">
        <name>MCAN_MESSAGE_STORAGE_INDICATOR_NO_FIFO_SELECTED</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>MCAN Message Storage Indicator Types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="750" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1ga3f6ee940c4bf7e121b0ac3d9b08b6c24" prot="public" static="no">
        <name>MCAN_MESSAGE_STORAGE_INDICATOR_FIFO_MESSAGE_LOST</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="751" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaf386eb187aaea7136b8fe24b855c8d33" prot="public" static="no">
        <name>MCAN_MESSAGE_STORAGE_INDICATOR_RXFIFO0</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="752" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mcan__interface_1gaeaf7d88744475a899826d2a876432f20" prot="public" static="no">
        <name>MCAN_MESSAGE_STORAGE_INDICATOR_RXFIFO1</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="753" column="9" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="753" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__mcan__interface_1ga4b4213b1f9d54da7c7e36bde32fc7c80" prot="public" static="no" strong="no">
        <type></type>
        <name>@80</name>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a126b2e91fa25aaee1ca5dbeb1dd72297" prot="public">
          <name>status_mcan_filter_index_out_of_range</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 0 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aa34e223659b1f7b6be15e91198fe7f49" prot="public">
          <name>status_mcan_rxfifo_empty</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 1 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad1a8275384da558553e7502125d1ffd0" prot="public">
          <name>status_mcan_rxfifo_full</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 2 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a5d2c63f0459e67f4d41bb6909c8101b3" prot="public">
          <name>status_mcan_txbuf_full</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 3 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a6aaf40b543c918584b0df36484e00035" prot="public">
          <name>status_mcan_txfifo_full</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 4 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a563d6e83817fd4ee73acd8e3e23779f7" prot="public">
          <name>status_mcan_rxfifo0_busy</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 5 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad878794c49d4233ec91143df5a3edd4d" prot="public">
          <name>status_mcan_rxfifo1_busy</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 6 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a0c977d9bfceeeb9d2c65b702a384b311" prot="public">
          <name>status_mcan_txbuf_index_out_of_range</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 7 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a34ea359818d6663b0cc5dff275c49f73" prot="public">
          <name>status_mcan_rxbuf_index_out_of_range</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 8 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aac004ed1011243a53db5ffc94d355dd3" prot="public">
          <name>status_mcan_rxbuf_empty</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 9 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a5efd04a451d99de9aa20282915399dc6" prot="public">
          <name>status_mcan_tx_evt_fifo_empty</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 10 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad4408876cee3d5e932f93fe087b6675a" prot="public">
          <name>status_mcan_timestamp_not_exist</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 11 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a910feb3ca68c6381e7923559fdaf9f30" prot="public">
          <name>status_mcan_ram_out_of_range</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 12 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a1884976e743d11f0c44db1474f48bd66" prot="public">
          <name>status_mcan_timeout</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 13 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a4c7c7709402198955e7eed762db1c126" prot="public">
          <name>status_mcan_invalid_bit_timing</name>
          <initializer>= ((uint32_t)( status_group_mcan )*1000U + (uint32_t)( 14 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="27" column="1" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="27" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="group__mcan__interface_1gaf29fba150df8b7a0900ad99dfc691c84" prot="public" static="no" strong="no">
        <type></type>
        <name>mcan_last_error_code</name>
        <enumvalue id="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84ad80cc387140138bf8f12a8ff19412899" prot="public">
          <name>mcan_last_error_code_no_error</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No error happened </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a67cfe16786d9fcdd5cacfde93fdd80e5" prot="public">
          <name>mcan_last_error_code_stuff_error</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stuff Error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a8939fdcd279a0ebfe139f7d1df5b7615" prot="public">
          <name>mcan_last_error_code_format_error</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Format Error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a32ea863d8b88f2dc8bc5e76ffa1e3f93" prot="public">
          <name>mcan_last_error_code_ack_error</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge Error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84aeed10ab1b4d611849006ce7c395187c5" prot="public">
          <name>mcan_last_error_code_bit1_error</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent logic 1 but monitored value is logic 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a3eb0b8e232d3c3387469fc34ce455902" prot="public">
          <name>mcan_last_error_code_bit0_error</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sent logic 0 but monitored value is logic 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a2ed095e2da1892f0817cf75dbedc7aa8" prot="public">
          <name>mcan_last_error_code_crc_error</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CRC checksum for received message is wrong </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a9c58a9671b5c6bc7bce49a97a333b225" prot="public">
          <name>mcan_last_error_code_no_change</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error code was not changed </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MCAN Last Error Code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="113" column="1" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="113" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="group__mcan__interface_1gae5adf8a9892bbf21ccfda5bbe7845fc6" prot="public" static="no" strong="no">
        <type></type>
        <name>mcan_activity_enum</name>
        <enumvalue id="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a8dd2a6e75c83cfeaf575bfabf26b3d23" prot="public">
          <name>mcan_activity_sync</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node is synchronizing on CAN communication </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a2403e51b9fba275e0a114476683ca24e" prot="public">
          <name>mcan_activity_idle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node is neither receiver nor transmitter </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a4cc5899efd2e02270f530e1af44ae340" prot="public">
          <name>mcan_activity_receiver</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node is operating as receiver </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6abb848014ce5a07b2a3970991e5c349d0" prot="public">
          <name>mcan_activity_transmitter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node is operating as transmitter </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MCAN Communication State. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="127" column="1" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="127" bodyend="132"/>
      </memberdef>
      <memberdef kind="enum" id="group__mcan__interface_1ga16e55b7e0b6dca264533e100e1567e62" prot="public" static="no" strong="no">
        <type></type>
        <name>mcan_bit_timing_option</name>
        <enumvalue id="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a872a880dbed647ee424bbb2536e2fe78" prot="public">
          <name>mcan_bit_timing_can2_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN 2.0 bit timing option </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a3fd22011a94564e5ae16638903ecdb7f" prot="public">
          <name>mcan_bit_timing_canfd_nominal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CANFD nominal timing option </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62ad30324941b1a6a80e9247d5c5861761e" prot="public">
          <name>mcan_bit_timing_canfd_data</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CANFD data timing option </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>CAN Bit Timing Options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="172" column="1" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="enum" id="group__mcan__interface_1gaf55077f151a7b54491a518d3a7e5932e" prot="public" static="no" strong="no">
        <type></type>
        <name>mcan_node_mode_enum</name>
        <enumvalue id="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea17b2edd341a219975a6938cd19d32494" prot="public">
          <name>mcan_mode_normal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN works in normal mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea4020de624af6113b400b72b6efa16547" prot="public">
          <name>mcan_mode_loopback_internal</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN works in internal loopback mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea5b9acf45c49d4988a267500f0f04720d" prot="public">
          <name>mcan_mode_loopback_external</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN works in external loopback mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932eaf01b5ed8a81437b6fbc94714ff98a3b5" prot="public">
          <name>mcan_mode_listen_only</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN works in listen-only mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>CAN Node Mode types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="578" column="1" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="578" bodyend="583"/>
      </memberdef>
      <memberdef kind="enum" id="group__mcan__interface_1gae8f3abd4b8e9156cbf8e6e454aa825a6" prot="public" static="no" strong="no">
        <type></type>
        <name>mcan_timeout_sel_enum</name>
        <enumvalue id="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6a8906a5c3724c85571be8f74cb9e6f4c1" prot="public">
          <name>mcan_timeout_continuous_operation</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Continuously count down timeout after writing to TOCV register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6ad83aea6e713a3a74ed1a44021f9dbf1b" prot="public">
          <name>mcan_timeout_triggered_by_tx_evt_fifo</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Count down if the TX EVT FIFO is not empty </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6acdc9d9f55905941770d8867c6d8085b2" prot="public">
          <name>mcan_timeout_triggered_by_rx_fifo0</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Count down if the RX FIFO0 is not empty </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6a0f2e7cbd853485d2d72937a073753ee2" prot="public">
          <name>mcan_timeout_triggered_by_rx_fifo1</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Count down if the RX FIFO1 is not empty </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MCAN Timeout Selection Options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="634" column="1" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="634" bodyend="639"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__mcan__interface_1ga9232568012f41109b5bd87d55b8ce333" prot="public" static="no">
        <type>enum <ref refid="group__mcan__interface_1gaf29fba150df8b7a0900ad99dfc691c84" kindref="member">mcan_last_error_code</ref></type>
        <definition>typedef enum mcan_last_error_code mcan_last_err_code_t</definition>
        <argsstring></argsstring>
        <name>mcan_last_err_code_t</name>
        <briefdescription>
<para>MCAN Last Error Code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="122" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gae4d89731ae05f2ed5098ac4ac316444b" prot="public" static="no">
        <type>enum <ref refid="group__mcan__interface_1gae5adf8a9892bbf21ccfda5bbe7845fc6" kindref="member">mcan_activity_enum</ref></type>
        <definition>typedef enum mcan_activity_enum mcan_activity_state_t</definition>
        <argsstring></argsstring>
        <name>mcan_activity_state_t</name>
        <briefdescription>
<para>MCAN Communication State. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="132" column="23"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga43f12b734008c4c4fb2fa32237b3535a" prot="public" static="no">
        <type>struct <ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_struct</ref></type>
        <definition>typedef struct mcan_bit_timing_param_struct mcan_bit_timing_param_t</definition>
        <argsstring></argsstring>
        <name>mcan_bit_timing_param_t</name>
        <briefdescription>
<para>CAN Bit Timing Parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="167" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" prot="public" static="no">
        <type>enum <ref refid="group__mcan__interface_1ga16e55b7e0b6dca264533e100e1567e62" kindref="member">mcan_bit_timing_option</ref></type>
        <definition>typedef enum mcan_bit_timing_option mcan_bit_timing_option_t</definition>
        <argsstring></argsstring>
        <name>mcan_bit_timing_option_t</name>
        <briefdescription>
<para>CAN Bit Timing Options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="176" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" prot="public" static="no">
        <type>struct <ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_message_struct</ref></type>
        <definition>typedef struct mcan_tx_message_struct mcan_tx_frame_t</definition>
        <argsstring></argsstring>
        <name>mcan_tx_frame_t</name>
        <briefdescription>
<para>CAN Transmit Message Frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Users need to pay attention to the CAN Identifier settings For standard identifier, the use_ext_id should be set to 0 and the std_id should be used For extended identifier, the use_ext_id should be set to 1 and the ext_id should be used </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="219" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga161301a2b741b723085381037ce9abfb" prot="public" static="no">
        <type>struct <ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_struct</ref></type>
        <definition>typedef struct mcan_rx_message_struct mcan_rx_message_t</definition>
        <argsstring></argsstring>
        <name>mcan_rx_message_t</name>
        <briefdescription>
<para>CAN Receive Message Frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Users need to pay attention to the CAN Identifier settings For standard identifier, the use_ext_id should be set to 0 and the std_id should be used For extended identifier, the use_ext_id should be set to 1 and the ext_id should be used </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="264" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gac727e3406aaf84fc73738cca1176fd24" prot="public" static="no">
        <type>union <ref refid="unionmcan__tx__event__fifo__elem__struct" kindref="compound">mcan_tx_event_fifo_elem_struct</ref></type>
        <definition>typedef union mcan_tx_event_fifo_elem_struct mcan_tx_event_fifo_elem_t</definition>
        <argsstring></argsstring>
        <name>mcan_tx_event_fifo_elem_t</name>
        <briefdescription>
<para>TX Event Fifo Element Structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="305" column="27"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga47c28c7c1d388b6e87dea9f42a67ebec" prot="public" static="no">
        <type>union <ref refid="unionmcan__filter__config__struct" kindref="compound">mcan_filter_config_struct</ref></type>
        <definition>typedef union mcan_filter_config_struct mcan_filter_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_filter_config_t</name>
        <briefdescription>
<para>MCAN Filter Configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="324" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga85b62b21af883bc585833c2570ab9bbc" prot="public" static="no">
        <type>union <ref refid="unionmcan__rxfifo__config__struct" kindref="compound">mcan_rxfifo_config_struct</ref></type>
        <definition>typedef union mcan_rxfifo_config_struct mcan_rxfifo_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_rxfifo_config_t</name>
        <briefdescription>
<para>MCAN RXFIFO Configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="337" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gaab0d6e6d77acd2d7611d351416994a00" prot="public" static="no">
        <type>union <ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct" kindref="compound">mcan_rx_fifo_or_buf_elem_config_struct</ref></type>
        <definition>typedef union mcan_rx_fifo_or_buf_elem_config_struct mcan_rx_fifo_or_buf_elem_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_rx_fifo_or_buf_elem_config_t</name>
        <briefdescription>
<para>MCAN RXBUF or RXFIFO Element Configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="375" column="35"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga78226aa3a0bc83438fb6107baac4d8a7" prot="public" static="no">
        <type>union <ref refid="unionmcan__txbuf__config__struct" kindref="compound">mcan_txbuf_config_struct</ref></type>
        <definition>typedef union mcan_txbuf_config_struct mcan_txbuf_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_txbuf_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="394" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga5abfdf3ee25c1ecd54497dbd27fbefc4" prot="public" static="no">
        <type>struct <ref refid="structmcan__txbuf__elem__config__struct" kindref="compound">mcan_txbuf_elem_config_struct</ref></type>
        <definition>typedef struct mcan_txbuf_elem_config_struct mcan_txbuf_elem_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_txbuf_elem_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="398" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga34c9afc91a3c7bbb3811b6ae433ee011" prot="public" static="no">
        <type>struct <ref refid="structmcan__ram__flexible__config__struct" kindref="compound">mcan_ram_flexible_config_struct</ref></type>
        <definition>typedef struct mcan_ram_flexible_config_struct mcan_ram_flexible_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_ram_flexible_config_t</name>
        <briefdescription>
<para>MCAN RAM Flexible Configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This Configuration provides the full MCAN RAM configuration, this configuration is recommended only for experienced developers who is skilled at the MCAN IP </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="438" column="28"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga9d893c9314ae4143f9135a0fc8faec40" prot="public" static="no">
        <type>struct <ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_struct</ref></type>
        <definition>typedef struct mcan_ram_config_struct mcan_ram_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_ram_config_t</name>
        <briefdescription>
<para>MCAN RAM configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>: This Configuration focuses on the minimum required information for MCAN RAM configuration The Start address of each BUF/FIFO will be automatically calculated by the MCAN Driver API This RAM configuration is recommended for the most developers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="475" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga9b7426fec77d6adf21dd2458fa43ff3f" prot="public" static="no">
        <type>struct <ref refid="structmcan__global__filter__config__struct" kindref="compound">mcan_global_filter_config_struct</ref></type>
        <definition>typedef struct mcan_global_filter_config_struct mcan_global_filter_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_global_filter_config_t</name>
        <briefdescription>
<para>MCAN Global CAN configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="492" column="29"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga980dcb116ce6583e40dc0b407b72cd54" prot="public" static="no">
        <type>struct <ref refid="structmcan__std__id__filter__elem__struct" kindref="compound">mcan_std_id_filter_elem_struct</ref></type>
        <definition>typedef struct mcan_std_id_filter_elem_struct mcan_filter_elem_t</definition>
        <argsstring></argsstring>
        <name>mcan_filter_elem_t</name>
        <briefdescription>
<para>MCAN Filter Element definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="553" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gaa5505a35f1b7d9e348629e2b9f48ceb9" prot="public" static="no">
        <type>struct <ref refid="structmcan__filter__elem__list__struct" kindref="compound">mcan_filter_elem_list_struct</ref></type>
        <definition>typedef struct mcan_filter_elem_list_struct mcan_filter_elem_list_t</definition>
        <argsstring></argsstring>
        <name>mcan_filter_elem_list_t</name>
        <briefdescription>
<para>MCAN Filter Element List structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="561" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gad0a9be13b9b95e591182881365267eeb" prot="public" static="no">
        <type>struct <ref refid="structmcan__all__filters__config__struct" kindref="compound">mcan_all_filters_config_struct</ref></type>
        <definition>typedef struct mcan_all_filters_config_struct mcan_all_filters_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_all_filters_config_t</name>
        <briefdescription>
<para>MCAN Configuration for all filters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The MCAN RAM related settings are excluded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="573" column="27"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga03774f4741c4cdbb36fee752bdf5ae67" prot="public" static="no">
        <type>enum <ref refid="group__mcan__interface_1gaf55077f151a7b54491a518d3a7e5932e" kindref="member">mcan_node_mode_enum</ref></type>
        <definition>typedef enum mcan_node_mode_enum mcan_node_mode_t</definition>
        <argsstring></argsstring>
        <name>mcan_node_mode_t</name>
        <briefdescription>
<para>CAN Node Mode types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="583" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga4d945094f3ea8b3fe8df39115ac971b9" prot="public" static="no">
        <type>struct <ref refid="structmcan__timestamp__value__struct" kindref="compound">mcan_timestamp_value_struct</ref></type>
        <definition>typedef struct mcan_timestamp_value_struct mcan_timestamp_value_t</definition>
        <argsstring></argsstring>
        <name>mcan_timestamp_value_t</name>
        <briefdescription>
<para>MCAN Timestamp Value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="599" column="24"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga4a8dbf0ef0c52e686298e5c60697d350" prot="public" static="no">
        <type>struct <ref refid="structmcan__tsu__config__struct" kindref="compound">mcan_tsu_config_struct</ref></type>
        <definition>typedef struct mcan_tsu_config_struct mcan_tsu_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_tsu_config_t</name>
        <briefdescription>
<para>MCAN TSU Configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="612" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gafba16d528afcb037dc30093ef09c6993" prot="public" static="no">
        <type>struct <ref refid="structmcan__internal__timestamp__config__struct" kindref="compound">mcan_internal_timestamp_config_struct</ref></type>
        <definition>typedef struct mcan_internal_timestamp_config_struct mcan_internal_timestamp_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_internal_timestamp_config_t</name>
        <briefdescription>
<para>MCAN Internal timestamp configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="629" column="34"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga2bf11e31fefe80a5099a074bb4174959" prot="public" static="no">
        <type>enum <ref refid="group__mcan__interface_1gae8f3abd4b8e9156cbf8e6e454aa825a6" kindref="member">mcan_timeout_sel_enum</ref></type>
        <definition>typedef enum mcan_timeout_sel_enum mcan_timeout_sel_t</definition>
        <argsstring></argsstring>
        <name>mcan_timeout_sel_t</name>
        <briefdescription>
<para>MCAN Timeout Selection Options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="639" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga329a67c1bfef2b745d5991e44a435fde" prot="public" static="no">
        <type>struct <ref refid="structmcan__timeout__config__struct" kindref="compound">mcan_timeout_config_struct</ref></type>
        <definition>typedef struct mcan_timeout_config_struct mcan_timeout_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_timeout_config_t</name>
        <briefdescription>
<para>MCAN Timeout configuration structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="648" column="23"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga03b44319f71364f5ce2c3f398974ad94" prot="public" static="no">
        <type>struct <ref refid="structmcan__tdc__config__t" kindref="compound">mcan_tdc_config_t</ref></type>
        <definition>typedef struct mcan_tdc_config_t mcan_tdc_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_tdc_config_t</name>
        <briefdescription>
<para>MCAN Transmitter Delay Compensation Configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="656" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga0aaab5e5f6d04c7014fe75b0e5781064" prot="public" static="no">
        <type>struct <ref refid="structmcan__config__struct" kindref="compound">mcan_config_struct</ref></type>
        <definition>typedef struct mcan_config_struct mcan_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_config_t</name>
        <briefdescription>
<para>MCAN Configuration Structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="702" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gac6cfae7e3b03fe0d5928446da385874d" prot="public" static="no">
        <type>struct <ref refid="structmcan__timeout__counter__config__struct" kindref="compound">mcan_timeout_counter_config_struct</ref></type>
        <definition>typedef struct mcan_timeout_counter_config_struct mcan_timeout_counter_config_t</definition>
        <argsstring></argsstring>
        <name>mcan_timeout_counter_config_t</name>
        <briefdescription>
<para>MCAN Timeout Counter Configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="719" column="31"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga588f6915bc386f4e72f6598c0ffbd35e" prot="public" static="no">
        <type>struct <ref refid="structmcan__error__count__struct" kindref="compound">mcan_error_count_struct</ref></type>
        <definition>typedef struct mcan_error_count_struct mcan_error_count_t</definition>
        <argsstring></argsstring>
        <name>mcan_error_count_t</name>
        <briefdescription>
<para>MCAN Error Count Information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="729" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1gaaeb0e4456cb6de8d884b053f765d595e" prot="public" static="no">
        <type>struct <ref refid="structmcan__protocol__status" kindref="compound">mcan_protocol_status</ref></type>
        <definition>typedef struct mcan_protocol_status mcan_protocol_status_t</definition>
        <argsstring></argsstring>
        <name>mcan_protocol_status_t</name>
        <briefdescription>
<para>MCAN Protocol Status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="745" column="24"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mcan__interface_1ga9902f3917e2f822fe2ee082817be7853" prot="public" static="no">
        <type>struct <ref refid="structmcan__high__priority__message__status__struct" kindref="compound">mcan_high_priority_message_status_struct</ref></type>
        <definition>typedef struct mcan_high_priority_message_status_struct mcan_high_priority_message_status_t</definition>
        <argsstring></argsstring>
        <name>mcan_high_priority_message_status_t</name>
        <briefdescription>
<para>MCAN High Priority Message Status Information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="763" column="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mcan__interface_1gadc5522749f4f58310b10719f1aac3b4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_transmit_pause</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_transmit_pause</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Transmit Pause. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="769" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="769" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga9a99209352b0b3d90d1c4bcd9f6eec7d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_transmit_pause</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_transmit_pause</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Transmit Pause. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="778" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="778" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gabc27a4a83fc3b300f0b761748912371c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_edge_filtering</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_edge_filtering</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Edge Filtering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="787" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="787" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga3c2a95a526b88cd49f5a9a2ed832c0c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_edge_filtering</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_edge_filtering</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Edge Filtering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="796" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="796" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaab3587f3f536a0515f44f827b9ea0eab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_protocol_exception_handling</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_protocol_exception_handling</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Protocol Exception Handling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="805" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="805" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga124a6e1cd25af3e6b8e387e642bd5fc0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_protocol_exception_handling</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_protocol_exception_handling</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Protocol Exception Handling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="814" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="814" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga4d47df858ffc41d108b0b0ae351f69b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_wide_message_marker</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_wide_message_marker</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Wide Message Marker. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="823" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="823" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga34fbc8d20ac4d1a9ecac262331c06738" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_wide_message_marker</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_wide_message_marker</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Wide Message Marker. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="832" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="832" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gabac42490326c60b168df4a42b771721d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_tsu</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_tsu</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable External Timestamp Unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="841" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="841" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga23cecdb193dc4749f49e82f3cf3cba81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_tsu</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_tsu</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable External Timestamp Unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="850" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gac8d9f1cfdba479e7576f34c9204a9781" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_tsu_used</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_tsu_used</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether TSU is used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if TSU is used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if TSU is not used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="861" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="861" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaf5545f4ddc57341ba5252afc16adf032" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_64bit_tsu_timestamp_used</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_64bit_tsu_timestamp_used</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether 64-bit TSU timestamp is used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if 64-bit timestamp is used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if 32-bit timestamp is used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="872" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="872" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaa965a4936b7b5333633782f4239a37ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_bitrate_switch</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_bitrate_switch</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Bit Rate Switch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="881" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="881" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga9d1019b66d060aeccdaa1714551de0c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_bitrate_switch</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_bitrate_switch</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Bit Rate Switch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="890" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="890" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga2967b22a1d2490b75722328eefc28eea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_auto_retransmission</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_auto_retransmission</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Auto Retransmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="899" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="899" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga22cc71d5036abfb52afdbd7add79a979" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_auto_retransmission</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_auto_retransmission</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Auto Transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="908" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="908" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga4f553640888b2ac47da9837dc69aedc9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_bus_monitoring_mode</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_bus_monitoring_mode</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Bus monitoring Mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="917" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="917" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga16a75578f9b90d5ebc16e4cf5346e62f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_stop_clock</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_stop_clock</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Stop MCAN clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="926" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="926" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga10f768fae4615fb09ebed09994b70eb8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_clock</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_clock</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable MCAN clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="935" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="935" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaf873e91eadc315ac5e98c01593fc6535" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_clock_enabled</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_clock_enabled</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="940" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="940" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga6ce54e22321c1482684572e7af238dfe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_bus_monitoring_mode</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_bus_monitoring_mode</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Bus monitoring Mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="949" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="949" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga6330a40a4171098e8ff53cde3c04bc45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_clock_stopped</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_clock_stopped</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether CAN clock is stopped or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="958" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="958" bodyend="961"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaad52c959fc673443433511326b2b8058" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_restricted_operation_mode</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_restricted_operation_mode</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Restricted Operation Mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="967" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="967" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga6086b53ff85278079a597d8893379a33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_restricted_operation_mode</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_restricted_operation_mode</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Restricted Operation Mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="976" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="976" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga5bc433d62c8dc50e944d4bcff2475160" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_write_to_prot_config_registers</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_write_to_prot_config_registers</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Write Access to Protected Configuration Registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="985" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="985" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga634b8b860bf967a92445b2f7ea71d356" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_write_to_prot_config_registers</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_write_to_prot_config_registers</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Write Access to Protected Configuration Registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="994" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="994" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga4a279c19515a1fa3060824df604bddeb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t mcan_get_timestamp_counter_value</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_timestamp_counter_value</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get Timestamp Counter Value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>timestamp value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1004" column="24" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1004" bodyend="1007"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga325ecf9d01fc40fe16c6a940af55b174" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enter_init_mode</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enter_init_mode</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Switch MCAN to Initialization mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1013" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1013" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga0ca94857d4b995c4e78dec5b963cd60a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enter_normal_mode</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enter_normal_mode</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Switch MCAN to Normal mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1022" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1022" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga87bcf06476b938390e291a4d2c4b536b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t mcan_get_timeout_counter_value</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_timeout_counter_value</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get Timeout value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>timeout value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1032" column="24" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1032" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga26f6ba62263e6882cd6edddc6a80e92e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_reset_timeout_counter_value</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_reset_timeout_counter_value</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Reset Timeout counter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1042" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1042" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaf29bd2344e3e7579431f69224b11f887" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_get_error_counter</definition>
        <argsstring>(MCAN_Type *ptr, mcan_error_count_t *err_cnt)</argsstring>
        <name>mcan_get_error_counter</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga588f6915bc386f4e72f6598c0ffbd35e" kindref="member">mcan_error_count_t</ref> *</type>
          <declname>err_cnt</declname>
        </param>
        <briefdescription>
<para>Get Error Counter Information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">err_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Error Count buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1052" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1052" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga6e5aefa581d9dc193930efec620fcb01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t mcan_get_last_error_code</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_last_error_code</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get Last Error Code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Last Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1066" column="23" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1066" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaa2712fb436e88842022bbd3840f0dbd5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t mcan_get_last_data_error_code</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_last_data_error_code</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get Last Data Phase Error Code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Last Error Code in Data phase </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1076" column="23" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1076" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga1552da9d1c902ac3ae1969c9b13d709c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t mcan_get_activity</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_activity</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get CAN Activity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CAN IP activity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1086" column="23" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1086" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gac45fb2f48927b5f16accca88bcab0759" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_in_err_passive_state</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_in_err_passive_state</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether the CAN node is under error passive state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true is CAN is under error passive state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1096" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1096" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gad90900cb18ef21e601d49aece3c8eb21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_in_error_warning_state</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_in_error_warning_state</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether the CAN mode is under Warning State. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the CAN node is under Error Warning State </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1106" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1106" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gad71c809c5a0b8c8a32fda10e2b91899f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_in_busoff_state</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_in_busoff_state</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether the CAN node is under Bus-off state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the CAN node is under Bus-off state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1116" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1116" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaaf5fef110c156ab87b4fd390caf8d3ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t mcan_get_data_phase_last_error_code</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_data_phase_last_error_code</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the Last Data Phase Error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This API will be removed in later SDK release </para>
</xrefdescription></xrefsect><simplesect kind="return"><para>The last Data Phase Error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1127" column="23" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1127" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gab065e702177e597f63548738b7da2156" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_error_state_indicator_flag_set_in_last_received_canfd_msg</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_error_state_indicator_flag_set_in_last_received_canfd_msg</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check Whether the Error Status Indicator Flag is set in the last received CANFD message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the Error Status Indicator Flag is set in the last received CANFD Message </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1137" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1137" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaae6fdbf33afba93a80db0b01da198916" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_bitrate_switch_flag_set_in_last_received_canfd_msg</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_bitrate_switch_flag_set_in_last_received_canfd_msg</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether the Bitrate Switch Flag is set in the last received CANFD message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if Bit rate switch flag is set in the last received CANFD message </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1147" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1147" bodyend="1150"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga73cc210939b152ea0ab979cd2f4066b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_canfd_message_received</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_canfd_message_received</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether CANFD messages were received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if a CANFD message was received </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1157" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1157" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga992e0b4cc5946d8e06344d5fa67cf2eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_protocol_exception_event_occurred</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_protocol_exception_event_occurred</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether Protocol Exception Events were occurred. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if Protocol Exception Events were occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1167" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1167" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gab8e15422370adb67482974fc019291a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t mcan_get_transmitter_delay_compensation_value</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_transmitter_delay_compensation_value</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the Transmitter Delay Compensation Value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Transmitter Delay Compensation value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1177" column="23" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1177" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gad9db161dc974f58cbf64abe43814829a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_interrupt_flags</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_interrupt_flags</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get Interrupt Flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Interrupt Flags </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1187" column="24" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1187" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga2a7398d932d483877b7dc722f42ca054" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_clear_interrupt_flags</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_clear_interrupt_flags</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear Interrupt Flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1197" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1197" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gae3fd9674f06ba1f031b514690a60c31f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_interrupts</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_enable_interrupts</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable Interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1207" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1207" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga62c209b44935212828dc655bbce00983" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_txbuf_interrupt</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_enable_txbuf_interrupt</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable TXBUF Interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This API is deprecated, will be removed in later SDK release </para>
</xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1220" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1220" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga84d69e031203d82a1b2a65b635ce7246" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_txbuf_interrupt</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_disable_txbuf_interrupt</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable TXBUF Interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000007"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This API is deprecated, will be removed in later SDK release </para>
</xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1231" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1231" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga38c3a8ac8acebad5458fada97d626c7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_interrupts</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_disable_interrupts</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable Interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1241" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1241" bodyend="1244"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga163fd0dc5861518a6986d15b02f33dbe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_txbuf_transmission_interrupt</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_enable_txbuf_transmission_interrupt</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable TXBUF Transmission interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1251" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1251" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gacaa7a89e8f63e90bc09d1260105325ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_txbuf_transmission_interrupt</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_disable_txbuf_transmission_interrupt</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable TXBUF Transmission interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1261" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1261" bodyend="1264"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga774ee5999a30150b91fa421f1a646957" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_txbuf_cancel_finish_interrupt</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_enable_txbuf_cancel_finish_interrupt</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable TXBUF Cancellation Finish interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1271" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1271" bodyend="1274"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga4647f5a17ab621d68dec223fd58e9d4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_txbuf_cancel_finish_interrupt</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_disable_txbuf_cancel_finish_interrupt</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable TXBUF Cancellation Finish interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1281" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1281" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga26fc01c6f4d4e1d3b824b3a86204a228" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_interrupt_line_select</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask, uint8_t line_index)</argsstring>
        <name>mcan_interrupt_line_select</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line_index</declname>
        </param>
        <briefdescription>
<para>Select Interrupt Line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Line Index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1292" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1292" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gad6e0b24e44956c6428a30be89ad2a25e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_transmit_request_pending</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_is_transmit_request_pending</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Check whether a TXFIFO/TXBUF transmission request is pending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>TXBUF/TXFIFO Index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True is the specified TXFIFO/TXBUF Transmission request is pending </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1308" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1308" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga575a48ca07bcf3727e0d20812167b930" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_txfifo_full</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_is_txfifo_full</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether TXFIFO is full. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if TXFIFO is full </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1318" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1318" bodyend="1321"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga58f207d21722e47fcf3cb69b1014cdd4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_txfifo_put_index</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_txfifo_put_index</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the TXFIFO Put Index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TX FIFO Put Index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1328" column="24" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1328" bodyend="1331"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga701847488fce9bca3f06a7dab84f4cf5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_send_add_request</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_send_add_request</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Request A Transmission via specified TXBUF Index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>TXBUF index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1338" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1338" bodyend="1341"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga0cb7ab368c91f0fc810ecd3e3bb9fb77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_send_add_multiple_requests</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index_bitmask)</argsstring>
        <name>mcan_send_add_multiple_requests</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index_bitmask</declname>
        </param>
        <briefdescription>
<para>Request several transmission via specified TXBUF/FIFO Bit masks MCAN IP will transmit data in the buffer if corresponding bit in index_bitmask is asserted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index_bitmask</parametername>
</parameternamelist>
<parameterdescription>
<para>TXFIFO/BUF bit masks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1349" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1349" bodyend="1352"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga140d2dd1177e0dd914498aac97175478" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_cancel_tx_buf_send_request</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_cancel_tx_buf_send_request</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Cancel the TXBUF Send request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>TXBUF index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1359" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1359" bodyend="1362"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga18717f3b92e0f81dfca18aa8869a4203" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_transmit_occurred</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_is_transmit_occurred</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Check whether the Transmission completed via specified TXBUF/TXFIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>TXBUF Index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True is the Transmission completed via specified TXBUF </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1370" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1370" bodyend="1373"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga215634d628791ef221f6750a7018e70b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_rxbuf_data_available</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_is_rxbuf_data_available</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Check Whether there are data available in specified RXBUF. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>RXBUF index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if there are data available </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1381" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1381" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga284cd07adeb5b341451a872e217f646a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_clear_rxbuf_data_available_flag</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_clear_rxbuf_data_available_flag</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Clear RXBUF Data available Flag for specified RXBUF. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>RXBUF index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1399" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1399" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaf19a405afbe4c5295f58e9c7154ed22f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_interrupt_flag_set</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t mask)</argsstring>
        <name>mcan_is_interrupt_flag_set</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Check whether specified Interrupt is set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if corresponding bits are set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1416" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1416" bodyend="1419"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gac03cad6d1197c3d5b2520eee0a133f79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mcan_is_tsu_timestamp_available</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_is_tsu_timestamp_available</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Check whether the TSU timestamp is available. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>TSU Timestamp is available </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>TSU timestamp is unavailable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1429" column="20" bodyfile="drivers/inc/hpm_mcan_drv.h" bodystart="1429" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaa7912db5a239c1df59490045feba3319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mcan_read_32bit_tsu_timestamp</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_read_32bit_tsu_timestamp</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Read 32bit Timestamp value from TSU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timestamp value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1444" column="10" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1863" bodyend="1870" declfile="drivers/inc/hpm_mcan_drv.h" declline="1444" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaeb9af0d86351870f149ac665af7d3e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t mcan_read_64bit_tsu_timestamp</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_read_64bit_tsu_timestamp</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Read 64bit Timestamp value from TSU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timestamp value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1452" column="10" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1872" bodyend="1886" declfile="drivers/inc/hpm_mcan_drv.h" declline="1452" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gada13053691ef2263116896520fde6518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mcan_get_high_priority_message_status</definition>
        <argsstring>(MCAN_Type *ptr, mcan_high_priority_message_status_t *status)</argsstring>
        <name>mcan_get_high_priority_message_status</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga9902f3917e2f822fe2ee082817be7853" kindref="member">mcan_high_priority_message_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Get High Priority Message Status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to High Priority Message Status Buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1459" column="6" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1817" bodyend="1824" declfile="drivers/inc/hpm_mcan_drv.h" declline="1459" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gadc564b2fcb5eccf11bdaf320f00329e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mcan_get_default_config</definition>
        <argsstring>(MCAN_Type *ptr, mcan_config_t *config)</argsstring>
        <name>mcan_get_default_config</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga0aaab5e5f6d04c7014fe75b0e5781064" kindref="member">mcan_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get Default CAN configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Default CAN2.0 baudrate:500 kbps</para>
<para>&lt; Default CANFD baudrate: 2 Mbps</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1466" column="6" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="643" bodyend="695" declfile="drivers/inc/hpm_mcan_drv.h" declline="1466" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga0d17d2c373f727ac4dd4f8318a9ef1ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mcan_get_message_size_from_dlc</definition>
        <argsstring>(uint8_t dlc)</argsstring>
        <name>mcan_get_message_size_from_dlc</name>
        <param>
          <type>uint8_t</type>
          <declname>dlc</declname>
        </param>
        <briefdescription>
<para>Get message Size from Data Length Code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dlc</parametername>
</parameternamelist>
<parameterdescription>
<para>Data Length Code </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Message Size in Bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1473" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1414" bodyend="1425" declfile="drivers/inc/hpm_mcan_drv.h" declline="1473" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga9b6267f7692c9e6fb6d3ff46def5e505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mcan_get_data_field_size</definition>
        <argsstring>(uint8_t data_field_size_option)</argsstring>
        <name>mcan_get_data_field_size</name>
        <param>
          <type>uint8_t</type>
          <declname>data_field_size_option</declname>
        </param>
        <briefdescription>
<para>Get the Data field size from data field size option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data_field_size_option</parametername>
</parameternamelist>
<parameterdescription>
<para>Data size option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>data field size in bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1481" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1427" bodyend="1461" declfile="drivers/inc/hpm_mcan_drv.h" declline="1481" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga7b20defc9668892b847e4ce6d34b5378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mcan_get_default_ram_flexible_config</definition>
        <argsstring>(MCAN_Type *ptr, mcan_ram_flexible_config_t *ram_config, bool enable_canfd)</argsstring>
        <name>mcan_get_default_ram_flexible_config</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga34c9afc91a3c7bbb3811b6ae433ee011" kindref="member">mcan_ram_flexible_config_t</ref> *</type>
          <declname>ram_config</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_canfd</declname>
        </param>
        <briefdescription>
<para>Get Default Full MCAN RAM configuration If the device is configured as classic CAN node, the default CAN RAM settings are as below: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Standard Identifier Filter Elements: 32</para>
</listitem><listitem><para>Extended Identifier Filter Elements: 32</para>
</listitem><listitem><para>TXBUF Elements Info:<itemizedlist>
<listitem><para>Element Count:32</para>
</listitem><listitem><para>Dedicated TXBUF element count: 16</para>
</listitem><listitem><para>TXFIFO/QQueue element count: 16</para>
</listitem><listitem><para>Data Field Size: 8</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXFIFO0 Elements Info:<itemizedlist>
<listitem><para>Element Count :32</para>
</listitem><listitem><para>Data Field Size: 8</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXFIFO1 Elements Info:<itemizedlist>
<listitem><para>Element Count : 32</para>
</listitem><listitem><para>Data Field Size: 8</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXBUF Element Info:<itemizedlist>
<listitem><para>Element Count: 16</para>
</listitem><listitem><para>Data Field Size : 8</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>TX Event FIFO Element Count: 32</para>
</listitem></itemizedlist>
</para>
<para>If the device is configured as CANFD node, the default CAN RAM settings are as below:<itemizedlist>
<listitem><para>Standard Identifier Filter Elements: 16</para>
</listitem><listitem><para>Extended Identifier Filter Elements: 16</para>
</listitem><listitem><para>TXBUF Elements Info:<itemizedlist>
<listitem><para>Element Count:8</para>
</listitem><listitem><para>Dedicated TXBUF element count: 4</para>
</listitem><listitem><para>TXFIFO/QQueue element count: 4</para>
</listitem><listitem><para>Data Field Size: 64</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXFIFO0 Elements Info:<itemizedlist>
<listitem><para>Element Count : 8</para>
</listitem><listitem><para>Data Field Size: 64</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXFIFO1 Elements Info:<itemizedlist>
<listitem><para>Element Count : 8</para>
</listitem><listitem><para>Data Field Size: 64</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXBUF Element Info:<itemizedlist>
<listitem><para>Element Count: 4</para>
</listitem><listitem><para>Data Field Size : 64</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>TX Event FIFO Element Count: 8</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ram_config</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN RAM Configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_canfd</parametername>
</parameternamelist>
<parameterdescription>
<para>CANFD enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1535" column="6" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="553" bodyend="641" declfile="drivers/inc/hpm_mcan_drv.h" declline="1535" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga74db618200ed3aff26f33ec8a5a866fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mcan_get_default_ram_config</definition>
        <argsstring>(MCAN_Type *ptr, mcan_ram_config_t *simple_config, bool enable_canfd)</argsstring>
        <name>mcan_get_default_ram_config</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga9d893c9314ae4143f9135a0fc8faec40" kindref="member">mcan_ram_config_t</ref> *</type>
          <declname>simple_config</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_canfd</declname>
        </param>
        <briefdescription>
<para>Get Default MCAN RAM configuration If the device is configured as classic CAN node, the default CAN RAM settings are as below: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Standard Identifier Filter Elements: 32</para>
</listitem><listitem><para>Extended Identifier Filter Elements: 32</para>
</listitem><listitem><para>TXBUF Elements Info:<itemizedlist>
<listitem><para>Element Count:32</para>
</listitem><listitem><para>Dedicated TXBUF element count: 16</para>
</listitem><listitem><para>TXFIFO/QQueue element count: 16</para>
</listitem><listitem><para>Data Field Size: 8</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXFIFO0 Elements Info:<itemizedlist>
<listitem><para>Element Count :32</para>
</listitem><listitem><para>Data Field Size: 8</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXFIFO1 Elements Info:<itemizedlist>
<listitem><para>Element Count : 32</para>
</listitem><listitem><para>Data Field Size: 8</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXBUF Element Info:<itemizedlist>
<listitem><para>Element Count: 16</para>
</listitem><listitem><para>Data Field Size : 8</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>TX Event FIFO Element Count: 32</para>
</listitem></itemizedlist>
</para>
<para>If the device is configured as CANFD node, the default CAN RAM settings are as below:<itemizedlist>
<listitem><para>Standard Identifier Filter Elements: 16</para>
</listitem><listitem><para>Extended Identifier Filter Elements: 16</para>
</listitem><listitem><para>TXBUF Elements Info:<itemizedlist>
<listitem><para>Element Count:8</para>
</listitem><listitem><para>Dedicated TXBUF element count: 4</para>
</listitem><listitem><para>TXFIFO/QQueue element count: 4</para>
</listitem><listitem><para>Data Field Size: 64</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXFIFO0 Elements Info:<itemizedlist>
<listitem><para>Element Count : 8</para>
</listitem><listitem><para>Data Field Size: 64</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXFIFO1 Elements Info:<itemizedlist>
<listitem><para>Element Count : 8</para>
</listitem><listitem><para>Data Field Size: 64</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>RXBUF Element Info:<itemizedlist>
<listitem><para>Element Count: 4</para>
</listitem><listitem><para>Data Field Size : 64</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>TX Event FIFO Element Count: 8</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">simple_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Simple CAN RAM Configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_canfd</parametername>
</parameternamelist>
<parameterdescription>
<para>CANFD enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1589" column="6" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="480" bodyend="551" declfile="drivers/inc/hpm_mcan_drv.h" declline="1589" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gabfdfeceaa07dd86c05aaf08ecd4f5d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_init</definition>
        <argsstring>(MCAN_Type *ptr, mcan_config_t *config, uint32_t src_clk_freq)</argsstring>
        <name>mcan_init</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga0aaab5e5f6d04c7014fe75b0e5781064" kindref="member">mcan_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <briefdescription>
<para>Initialize CAN controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN clock frequency </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if operation is successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameters are invalid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1599" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1040" bodyend="1263" declfile="drivers/inc/hpm_mcan_drv.h" declline="1599" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaec2dd32a680959baaa299a6e2b192aa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mcan_deinit</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_deinit</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>De-Initialize CAN controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1606" column="6" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1265" bodyend="1299" declfile="drivers/inc/hpm_mcan_drv.h" declline="1606" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaa34c1ee772743eac0a49d4f06a35ac7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_config_ram_with_flexible_config</definition>
        <argsstring>(MCAN_Type *ptr, mcan_ram_flexible_config_t *config)</argsstring>
        <name>mcan_config_ram_with_flexible_config</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga34c9afc91a3c7bbb3811b6ae433ee011" kindref="member">mcan_ram_flexible_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure MCAN RAM will Full RAM configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN RAM Full Configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1614" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="843" bodyend="919" declfile="drivers/inc/hpm_mcan_drv.h" declline="1614" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gab8ad6b212bae07e5d39f91ea951afe1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_config_ram</definition>
        <argsstring>(MCAN_Type *ptr, mcan_ram_config_t *config)</argsstring>
        <name>mcan_config_ram</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga9d893c9314ae4143f9135a0fc8faec40" kindref="member">mcan_ram_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure MCAN RAM will Simplified RAM configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN RAM configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1622" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="706" bodyend="841" declfile="drivers/inc/hpm_mcan_drv.h" declline="1622" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gafe271d717a5c5dd76933b5a978b64501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_config_all_filters</definition>
        <argsstring>(MCAN_Type *ptr, mcan_all_filters_config_t *config)</argsstring>
        <name>mcan_config_all_filters</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gad0a9be13b9b95e591182881365267eeb" kindref="member">mcan_all_filters_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure All CAN filters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>All CAN Filter configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1630" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="921" bodyend="981" declfile="drivers/inc/hpm_mcan_drv.h" declline="1630" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gad9322d36f5000f99ccfd471bb782732d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_config_transmitter_delay_compensation</definition>
        <argsstring>(MCAN_Type *ptr, mcan_tdc_config_t *config)</argsstring>
        <name>mcan_config_transmitter_delay_compensation</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structmcan__tdc__config__t" kindref="compound">mcan_tdc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure Transmitter Delay Compensation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Transmitter Delay compensation configure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1638" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1847" bodyend="1861" declfile="drivers/inc/hpm_mcan_drv.h" declline="1638" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga42b95618ae33789d7ba7259ce687cede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_set_global_filter_config</definition>
        <argsstring>(MCAN_Type *ptr, mcan_global_filter_config_t *filter_config)</argsstring>
        <name>mcan_set_global_filter_config</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga9b7426fec77d6adf21dd2458fa43ff3f" kindref="member">mcan_global_filter_config_t</ref> *</type>
          <declname>filter_config</declname>
        </param>
        <briefdescription>
<para>Configure Global Filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filter_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Global Filter Configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1646" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1826" bodyend="1845" declfile="drivers/inc/hpm_mcan_drv.h" declline="1646" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga1de58381c613c978338219f3a2418dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_set_filter_element</definition>
        <argsstring>(MCAN_Type *ptr, const mcan_filter_elem_t *filter_elem, uint32_t index)</argsstring>
        <name>mcan_set_filter_element</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="group__mcan__interface_1ga980dcb116ce6583e40dc0b407b72cd54" kindref="member">mcan_filter_elem_t</ref> *</type>
          <declname>filter_elem</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set CAN filter element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filter_elem</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN filter element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN Filter element index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1655" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1301" bodyend="1358" declfile="drivers/inc/hpm_mcan_drv.h" declline="1655" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaa00d784c51619ed23c18c481cd02d832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_write_txbuf</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index, mcan_tx_frame_t *tx_frame)</argsstring>
        <name>mcan_write_txbuf</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" kindref="member">mcan_tx_frame_t</ref> *</type>
          <declname>tx_frame</declname>
        </param>
        <briefdescription>
<para>Write Frame to CAN TX Buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>TX Buffer Index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>TX frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1664" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1463" bodyend="1497" declfile="drivers/inc/hpm_mcan_drv.h" declline="1664" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga34ad967d2654ed7e8ae292f0ede0f366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_write_txfifo</definition>
        <argsstring>(MCAN_Type *ptr, mcan_tx_frame_t *tx_frame)</argsstring>
        <name>mcan_write_txfifo</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" kindref="member">mcan_tx_frame_t</ref> *</type>
          <declname>tx_frame</declname>
        </param>
        <briefdescription>
<para>Write Frame CAN to TXFIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>TX frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1672" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1499" bodyend="1526" declfile="drivers/inc/hpm_mcan_drv.h" declline="1672" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga733d69672dc906bb842443e000cd4d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_read_rxbuf</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index, mcan_rx_message_t *rx_frame)</argsstring>
        <name>mcan_read_rxbuf</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga161301a2b741b723085381037ce9abfb" kindref="member">mcan_rx_message_t</ref> *</type>
          <declname>rx_frame</declname>
        </param>
        <briefdescription>
<para>Read message from CAN RXBUF. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of RXBUF </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold RX frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1681" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1528" bodyend="1556" declfile="drivers/inc/hpm_mcan_drv.h" declline="1681" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga6b399ea25c0f023763d9e68b96c321ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_read_rxfifo</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t fifo_index, mcan_rx_message_t *rx_frame)</argsstring>
        <name>mcan_read_rxfifo</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fifo_index</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga161301a2b741b723085381037ce9abfb" kindref="member">mcan_rx_message_t</ref> *</type>
          <declname>rx_frame</declname>
        </param>
        <briefdescription>
<para>Read message from CAN RXBUF. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fifo_index</parametername>
</parameternamelist>
<parameterdescription>
<para>RXFIFO index, 0 - RXFO0, 1 - RXFIFO1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold RX frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1690" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1558" bodyend="1621" declfile="drivers/inc/hpm_mcan_drv.h" declline="1690" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaabf29bb4d2f272dfdf47b5b17db55260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_read_tx_evt_fifo</definition>
        <argsstring>(MCAN_Type *ptr, mcan_tx_event_fifo_elem_t *tx_evt)</argsstring>
        <name>mcan_read_tx_evt_fifo</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gac727e3406aaf84fc73738cca1176fd24" kindref="member">mcan_tx_event_fifo_elem_t</ref> *</type>
          <declname>tx_evt</declname>
        </param>
        <briefdescription>
<para>Read TX Event from CAN TX EVENT FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">tx_evt</parametername>
</parameternamelist>
<parameterdescription>
<para>TX Event Buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_mcan_tx_evt_fifo_empty</parametername>
</parameternamelist>
<parameterdescription>
<para>if there are no TX events available </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameters are invalid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1700" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1623" bodyend="1656" declfile="drivers/inc/hpm_mcan_drv.h" declline="1700" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga42c8096c180aaabb0297ea064cc8c759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_transmit_blocking</definition>
        <argsstring>(MCAN_Type *ptr, mcan_tx_frame_t *tx_frame)</argsstring>
        <name>mcan_transmit_blocking</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" kindref="member">mcan_tx_frame_t</ref> *</type>
          <declname>tx_frame</declname>
        </param>
        <briefdescription>
<para>Transmit CAN message in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN Transmit Message buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1708" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1686" bodyend="1710" declfile="drivers/inc/hpm_mcan_drv.h" declline="1708" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga7a6b624afafa50747d7379ab61a3709f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_request_and_fill_txfifo</definition>
        <argsstring>(MCAN_Type *ptr, mcan_tx_frame_t *tx_frame, uint32_t *fifo_index)</argsstring>
        <name>mcan_request_and_fill_txfifo</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" kindref="member">mcan_tx_frame_t</ref> *</type>
          <declname>tx_frame</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>fifo_index</declname>
        </param>
        <briefdescription>
<para>Request TXFIFO and fill data into TXFIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This API can be used to prepare the data for several CAN frames prior to transmission. After this operation, software can call <computeroutput>mcan_send_add_request(ptr, *fifo_index)</computeroutput> API to trigger a transmission or call <computeroutput>mcan_send_add_requests(ptr, fifo_index_masks)</computeroutput> to trigger several transmissions </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN Transmit Message buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">fifo_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the element in FIFO assigned to the tx_frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1720" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1712" bodyend="1734" declfile="drivers/inc/hpm_mcan_drv.h" declline="1720" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gae2e8f0a4ae18e98f0179c8549734723a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_transmit_via_txfifo_nonblocking</definition>
        <argsstring>(MCAN_Type *ptr, mcan_tx_frame_t *tx_frame, uint32_t *fifo_index)</argsstring>
        <name>mcan_transmit_via_txfifo_nonblocking</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" kindref="member">mcan_tx_frame_t</ref> *</type>
          <declname>tx_frame</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>fifo_index</declname>
        </param>
        <briefdescription>
<para>Transmit CAN message via TX FIFO in non-blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN Transmit Message buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">fifo_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the element in FIFO assigned to the tx_frame</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1730" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1736" bodyend="1764" declfile="drivers/inc/hpm_mcan_drv.h" declline="1730" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga62b0b399e3dbe5bf1d4f267a4b812c71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_transmit_via_txbuf_nonblocking</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index, mcan_tx_frame_t *tx_frame)</argsstring>
        <name>mcan_transmit_via_txbuf_nonblocking</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" kindref="member">mcan_tx_frame_t</ref> *</type>
          <declname>tx_frame</declname>
        </param>
        <briefdescription>
<para>Transmit CAN message via TX in non-blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of TX Buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN Transmit Message buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1739" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1658" bodyend="1684" declfile="drivers/inc/hpm_mcan_drv.h" declline="1739" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga565cf484bf1e734d74bb080a6ab0bff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_receive_from_buf_blocking</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index, mcan_rx_message_t *rx_frame)</argsstring>
        <name>mcan_receive_from_buf_blocking</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga161301a2b741b723085381037ce9abfb" kindref="member">mcan_rx_message_t</ref> *</type>
          <declname>rx_frame</declname>
        </param>
        <briefdescription>
<para>Receive CAN Frame from RXBUF in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>RXBUF index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold Received Frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1748" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1766" bodyend="1789" declfile="drivers/inc/hpm_mcan_drv.h" declline="1748" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga32469e034fd973f008c57da0157b2775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_receive_from_fifo_blocking</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t fifo_index, mcan_rx_message_t *rx_frame)</argsstring>
        <name>mcan_receive_from_fifo_blocking</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fifo_index</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga161301a2b741b723085381037ce9abfb" kindref="member">mcan_rx_message_t</ref> *</type>
          <declname>rx_frame</declname>
        </param>
        <briefdescription>
<para>Receive CAN Frame from RXFIFO in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fifo_index</parametername>
</parameternamelist>
<parameterdescription>
<para>RXFIFO index, 0 - RXFIFO0, 1 - RXFIFO1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rx_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold Received Frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no errors reported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1757" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1791" bodyend="1815" declfile="drivers/inc/hpm_mcan_drv.h" declline="1757" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga205f6812136a27ccd7b770e4a8f10238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_get_timestamp_from_tx_event</definition>
        <argsstring>(MCAN_Type *ptr, const mcan_tx_event_fifo_elem_t *tx_evt, mcan_timestamp_value_t *timestamp)</argsstring>
        <name>mcan_get_timestamp_from_tx_event</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="group__mcan__interface_1gac727e3406aaf84fc73738cca1176fd24" kindref="member">mcan_tx_event_fifo_elem_t</ref> *</type>
          <declname>tx_evt</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga4d945094f3ea8b3fe8df39115ac971b9" kindref="member">mcan_timestamp_value_t</ref> *</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Get Timestamp from MCAN TX Event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_evt</parametername>
</parameternamelist>
<parameterdescription>
<para>TX Event Element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameters are invalid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_mcan_timestamp_not_exist</parametername>
</parameternamelist>
<parameterdescription>
<para>if no timestamp information is available </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1768" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1888" bodyend="1921" declfile="drivers/inc/hpm_mcan_drv.h" declline="1768" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1gaae71f784ff4cc139ad5822f3ccc4d8d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_get_timestamp_from_received_message</definition>
        <argsstring>(MCAN_Type *ptr, const mcan_rx_message_t *rx_msg, mcan_timestamp_value_t *timestamp)</argsstring>
        <name>mcan_get_timestamp_from_received_message</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="group__mcan__interface_1ga161301a2b741b723085381037ce9abfb" kindref="member">mcan_rx_message_t</ref> *</type>
          <declname>rx_msg</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga4d945094f3ea8b3fe8df39115ac971b9" kindref="member">mcan_timestamp_value_t</ref> *</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Get Timestamp from MCAN RX frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rx_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Received message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameters are invalid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_mcan_timestamp_not_exist</parametername>
</parameternamelist>
<parameterdescription>
<para>if no timestamp information is available </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1781" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1923" bodyend="1955" declfile="drivers/inc/hpm_mcan_drv.h" declline="1781" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga22454dabbe3fec1d195954afa5e48b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_parse_protocol_status</definition>
        <argsstring>(uint32_t psr, mcan_protocol_status_t *protocol_status)</argsstring>
        <name>mcan_parse_protocol_status</name>
        <param>
          <type>uint32_t</type>
          <declname>psr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gaaeb0e4456cb6de8d884b053f765d595e" kindref="member">mcan_protocol_status_t</ref> *</type>
          <declname>protocol_status</declname>
        </param>
        <briefdescription>
<para>Parse the Protocol Status register value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">psr</parametername>
</parameternamelist>
<parameterdescription>
<para>Protocol Status Register Value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">protocol_status</parametername>
</parameternamelist>
<parameterdescription>
<para>Translated Protocol Status</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameters are invalid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1793" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1957" bodyend="1994" declfile="drivers/inc/hpm_mcan_drv.h" declline="1793" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mcan__interface_1ga66b35d60c257a5170fa3e50aa5105165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t mcan_get_protocol_status</definition>
        <argsstring>(MCAN_Type *ptr, mcan_protocol_status_t *protocol_status)</argsstring>
        <name>mcan_get_protocol_status</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gaaeb0e4456cb6de8d884b053f765d595e" kindref="member">mcan_protocol_status_t</ref> *</type>
          <declname>protocol_status</declname>
        </param>
        <briefdescription>
<para>Get MCAN Protocol Status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">protocol_status</parametername>
</parameternamelist>
<parameterdescription>
<para>Translated Protocol status</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameters are invalid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_mcan_drv.h" line="1803" column="12" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1996" bodyend="2007" declfile="drivers/inc/hpm_mcan_drv.h" declline="1803" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023-2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_MCAN_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCAN_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_mcan_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_mcan_soc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a126b2e91fa25aaee1ca5dbeb1dd72297" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a126b2e91fa25aaee1ca5dbeb1dd72297" kindref="member">status_mcan_filter_index_out_of_range</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>0),</highlight></codeline>
<codeline lineno="29" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aa34e223659b1f7b6be15e91198fe7f49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aa34e223659b1f7b6be15e91198fe7f49" kindref="member">status_mcan_rxfifo_empty</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>1),</highlight></codeline>
<codeline lineno="30" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad1a8275384da558553e7502125d1ffd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad1a8275384da558553e7502125d1ffd0" kindref="member">status_mcan_rxfifo_full</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>2),</highlight></codeline>
<codeline lineno="31" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a5d2c63f0459e67f4d41bb6909c8101b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a5d2c63f0459e67f4d41bb6909c8101b3" kindref="member">status_mcan_txbuf_full</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>3),</highlight></codeline>
<codeline lineno="32" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a6aaf40b543c918584b0df36484e00035" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a6aaf40b543c918584b0df36484e00035" kindref="member">status_mcan_txfifo_full</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>4),</highlight></codeline>
<codeline lineno="33" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a563d6e83817fd4ee73acd8e3e23779f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a563d6e83817fd4ee73acd8e3e23779f7" kindref="member">status_mcan_rxfifo0_busy</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>5),</highlight></codeline>
<codeline lineno="34" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad878794c49d4233ec91143df5a3edd4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad878794c49d4233ec91143df5a3edd4d" kindref="member">status_mcan_rxfifo1_busy</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>6),</highlight></codeline>
<codeline lineno="35" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a0c977d9bfceeeb9d2c65b702a384b311" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a0c977d9bfceeeb9d2c65b702a384b311" kindref="member">status_mcan_txbuf_index_out_of_range</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>7),</highlight></codeline>
<codeline lineno="36" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a34ea359818d6663b0cc5dff275c49f73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a34ea359818d6663b0cc5dff275c49f73" kindref="member">status_mcan_rxbuf_index_out_of_range</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>8),</highlight></codeline>
<codeline lineno="37" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aac004ed1011243a53db5ffc94d355dd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aac004ed1011243a53db5ffc94d355dd3" kindref="member">status_mcan_rxbuf_empty</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>9),</highlight></codeline>
<codeline lineno="38" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a5efd04a451d99de9aa20282915399dc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a5efd04a451d99de9aa20282915399dc6" kindref="member">status_mcan_tx_evt_fifo_empty</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>10),</highlight></codeline>
<codeline lineno="39" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad4408876cee3d5e932f93fe087b6675a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad4408876cee3d5e932f93fe087b6675a" kindref="member">status_mcan_timestamp_not_exist</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>11),</highlight></codeline>
<codeline lineno="40" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a910feb3ca68c6381e7923559fdaf9f30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a910feb3ca68c6381e7923559fdaf9f30" kindref="member">status_mcan_ram_out_of_range</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>12),</highlight></codeline>
<codeline lineno="41" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a1884976e743d11f0c44db1474f48bd66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a1884976e743d11f0c44db1474f48bd66" kindref="member">status_mcan_timeout</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>13),</highlight></codeline>
<codeline lineno="42" refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a4c7c7709402198955e7eed762db1c126" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a4c7c7709402198955e7eed762db1c126" kindref="member">status_mcan_invalid_bit_timing</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8699b69bc9d12c28d4388c5f27e3b495" kindref="member">status_group_mcan</ref>,<sp/>14),</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__mcan__interface_1ga95b84a545c63b03ac3cdb753c19fc196" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_ACCESS_TO_RESERVED_ADDR<sp/><sp/><sp/><sp/>MCAN_IR_ARA_MASK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__mcan__interface_1ga933c0392b456f7531af6afe49fc068ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_PROTOCOL_ERR_IN_DATA_PHASE<sp/>MCAN_IR_PED_MASK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__mcan__interface_1gaf82149b4a723097eb652db6389a32c41" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_PROTOCOL_ERR_IN_ARB_PHASE<sp/><sp/>MCAN_IR_PEA_MASK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__mcan__interface_1gac96a002280b6d80a73c35b6dc1f3c207" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_WATCHDOG_INT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_WDI_MASK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__mcan__interface_1ga4fa7114c13e5de0ef2a93a386ed61c5c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_BUS_OFF_STATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_BO_MASK<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__mcan__interface_1gaa91e29a54f4b2b537e90b514968884b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_WARNING_STATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_EW_MASK<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group__mcan__interface_1ga8e2cf1fbcea4cb1c726bd1e71287caab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_ERROR_PASSIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_EP_MASK<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__mcan__interface_1ga1349063503c193d24c593318eac86f15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_ERROR_LOGGING_OVERFLOW<sp/><sp/><sp/><sp/><sp/>MCAN_IR_ELO_MASK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__mcan__interface_1gabfda683ac12812ec0050cd52c80c8b47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_BIT_ERROR_UNCORRECTED<sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_BEU_MASK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__mcan__interface_1ga1308c8d23df54807fbba45afbb8e0e9b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_BIT_ERROR_CORRECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_BEC_MASK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__mcan__interface_1ga355255a7c0185b428ce87f00a86f4076" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_MSG_STORE_TO_RXBUF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_DRX_MASK<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__mcan__interface_1ga1e11b702ece930e609dbe550b3b01970" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TIMEOUT_OCCURRED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_TOO_MASK<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__mcan__interface_1gac7c0b516609a429a5d493f454281922e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_MSG_RAM_ACCESS_FAILURE<sp/><sp/><sp/><sp/><sp/>MCAN_IR_MRAF_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__mcan__interface_1ga112c7816d925806ade9af437949efd3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TIMESTAMP_WRAPAROUND<sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_TSW_MASK<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__mcan__interface_1ga0d2b7aba4e185ba95bb9b8b83134fe2d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TX_EVT_FIFO_EVT_LOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_TEFL_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__mcan__interface_1ga27af6bce2fdc3a5bf04fc8ef91e4617f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TX_EVT_FIFO_FULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_TEFF_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__mcan__interface_1ga79ea68468d00936ae08312ec65a84fb9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TX_EVT_FIFO_WMK_REACHED<sp/><sp/><sp/><sp/>MCAN_IR_TEFW_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__mcan__interface_1ga59fad03e3f46f09741d68b8ed4406759" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TX_EVT_FIFO_NEW_ENTRY<sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_TEFN_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group__mcan__interface_1ga08b3478e798eb1d85930bb1565d9b7ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TXFIFO_EMPTY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_TFE_MASK<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__mcan__interface_1ga72593992b97b2d00208f0e4fb7a67b44" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TX_CANCEL_FINISHED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_TCF_MASK<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__mcan__interface_1ga672b9a03deb2c4c3103d5c72c92145bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_TX_COMPLETED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_TC_MASK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="group__mcan__interface_1ga50c6bb6b133169a7bc67595d3124ab1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_HIGH_PRIORITY_MSG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_HPM_MASK<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__mcan__interface_1gae50cafd23722dd8a6d484d8beaff8f89" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_RXFIFO1_MSG_LOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_RF1L_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__mcan__interface_1ga9d2ea3fa5d1df032d7c58607854f0c5a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_RXFIFO1_FULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_RF1F_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="group__mcan__interface_1gabbfa432572fd3977a5e2df40795b6ecc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_RXFIFO1_WMK_REACHED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_RF1W_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group__mcan__interface_1gac59ca1a279089b5cce3037e82a8d5336" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_RXFIFO1_NEW_MSG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_RF1N_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group__mcan__interface_1ga78150028ebff76dcfc54b86e0bce69e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_RXFIFO0_MSG_LOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_RF0L_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__mcan__interface_1ga9a50abf751bbf6ed5ea7c026b0b3f4d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_RXFIFO0_FULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_RF0F_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__mcan__interface_1ga059adfadf43b587917890841d94433fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_RXFIFO0_WMK_REACHED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_RF0W_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="group__mcan__interface_1gaa18292755dea8e3800f5382dca4cf4cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_RXFIFO0_NEW_MSG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCAN_IR_RF0N_MASK<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__mcan__interface_1ga49d3fbb666526c5ae3d0a9dac683a20c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_EVENT_RECEIVE<sp/>(MCAN_INT_RXFIFO0_NEW_MSG<sp/>|<sp/>MCAN_INT_RXFIFO1_NEW_MSG<sp/>|<sp/>MCAN_INT_MSG_STORE_TO_RXBUF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__mcan__interface_1ga6a10ac6d2e6beb8a10591ee0f15cdcc8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_EVENT_TRANSMIT<sp/>(MCAN_INT_TX_COMPLETED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__mcan__interface_1ga448e390802a22227edcadf6422697613" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_EVENT_ERROR<sp/>(MCAN_INT_BUS_OFF_STATUS<sp/>|<sp/>MCAN_INT_WARNING_STATUS<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>MCAN_INT_ERROR_PASSIVE<sp/>|<sp/>MCAN_INT_BIT_ERROR_UNCORRECTED<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>MCAN_INT_PROTOCOL_ERR_IN_DATA_PHASE<sp/>|<sp/>MCAN_INT_PROTOCOL_ERR_IN_ARB_PHASE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group__mcan__interface_1gad005d5796e4ff0654c2dab1d54a7c2e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TX_RETRY_COUNT_MAX<sp/>(10000000UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group__mcan__interface_1ga3dea7eae649ca71c8207f911863d40ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RX_RETRY_COUNT_MAX<sp/>(80000000UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="group__mcan__interface_1gaf29fba150df8b7a0900ad99dfc691c84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaf29fba150df8b7a0900ad99dfc691c84" kindref="member">mcan_last_error_code</ref><sp/>{</highlight></codeline>
<codeline lineno="114" refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84ad80cc387140138bf8f12a8ff19412899" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84ad80cc387140138bf8f12a8ff19412899" kindref="member">mcan_last_error_code_no_error</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a67cfe16786d9fcdd5cacfde93fdd80e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a67cfe16786d9fcdd5cacfde93fdd80e5" kindref="member">mcan_last_error_code_stuff_error</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a8939fdcd279a0ebfe139f7d1df5b7615" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a8939fdcd279a0ebfe139f7d1df5b7615" kindref="member">mcan_last_error_code_format_error</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a32ea863d8b88f2dc8bc5e76ffa1e3f93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a32ea863d8b88f2dc8bc5e76ffa1e3f93" kindref="member">mcan_last_error_code_ack_error</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84aeed10ab1b4d611849006ce7c395187c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84aeed10ab1b4d611849006ce7c395187c5" kindref="member">mcan_last_error_code_bit1_error</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a3eb0b8e232d3c3387469fc34ce455902" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a3eb0b8e232d3c3387469fc34ce455902" kindref="member">mcan_last_error_code_bit0_error</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a2ed095e2da1892f0817cf75dbedc7aa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a2ed095e2da1892f0817cf75dbedc7aa8" kindref="member">mcan_last_error_code_crc_error</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a9c58a9671b5c6bc7bce49a97a333b225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf29fba150df8b7a0900ad99dfc691c84a9c58a9671b5c6bc7bce49a97a333b225" kindref="member">mcan_last_error_code_no_change</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="group__mcan__interface_1ga9232568012f41109b5bd87d55b8ce333" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga9232568012f41109b5bd87d55b8ce333" kindref="member">mcan_last_err_code_t</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__mcan__interface_1gae5adf8a9892bbf21ccfda5bbe7845fc6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gae5adf8a9892bbf21ccfda5bbe7845fc6" kindref="member">mcan_activity_enum</ref><sp/>{</highlight></codeline>
<codeline lineno="128" refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a8dd2a6e75c83cfeaf575bfabf26b3d23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a8dd2a6e75c83cfeaf575bfabf26b3d23" kindref="member">mcan_activity_sync</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a2403e51b9fba275e0a114476683ca24e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a2403e51b9fba275e0a114476683ca24e" kindref="member">mcan_activity_idle</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a4cc5899efd2e02270f530e1af44ae340" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a4cc5899efd2e02270f530e1af44ae340" kindref="member">mcan_activity_receiver</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6abb848014ce5a07b2a3970991e5c349d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6abb848014ce5a07b2a3970991e5c349d0" kindref="member">mcan_activity_transmitter</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="group__mcan__interface_1gae4d89731ae05f2ed5098ac4ac316444b" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gae4d89731ae05f2ed5098ac4ac316444b" kindref="member">mcan_activity_state_t</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Default<sp/>CAN<sp/>RAM<sp/>definitions</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="group__mcan__interface_1ga997b2ce82a831703286127c0676b9f71" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RAM_WORD_SIZE<sp/><sp/>(640U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CAN<sp/>Filter<sp/>Element<sp/>Size<sp/>Definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="group__mcan__interface_1ga35c37a139fec3ae150b1cd96d411921e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_STD_ID_SIZE<sp/>(4U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="group__mcan__interface_1ga36b395305b0b79397e84d1b6bb510453" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_EXT_ID_SIZE<sp/>(8U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="group__mcan__interface_1ga6571b2133de4ac63c610f3bb906ddd0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_STD_FILTER_ELEM_SIZE_MAX<sp/>(128U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group__mcan__interface_1gaa54ab784a4ea8bd7ea19165b0a653a55" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_EXT_FILTER_ELEM_SIZE_MAX<sp/><sp/>(64U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MCAN<sp/>Default<sp/>Field<sp/>Size<sp/>Definitions<sp/>for<sp/>CAN2.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXRX_ELEM_SIZE_CAN_MAX<sp/>(4U<sp/>*<sp/>sizeof(uint32_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_SIZE_CAN_DEFAULT<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXBUF_SIZE_CAN_DEFAULT<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="group__mcan__interface_1ga8b3995f31bda7580a3f40062daf59b4a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RXFIFO_SIZE_CAN_DEFAULT<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="group__mcan__interface_1gaf6a741961533265ecdb425fd77cc9ae9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RXBUF_SIZE_CAN_DEFAULT<sp/>(16U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MCAN<sp/>Default<sp/>Field<sp/>Size<sp/>Definitions<sp/>for<sp/>CANFD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="group__mcan__interface_1ga67be209abcb9fa85ec59fd843e501d41" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXRX_ELEM_SIZE_CANFD_MAX<sp/>(18U<sp/>*<sp/>sizeof(uint32_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_SIZE_CANFD_DEFAULT<sp/>(16U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="group__mcan__interface_1ga6565285b4c135fb12a192bcc739e058f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXBUF_SIZE_CANFD_DEFAULT<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="group__mcan__interface_1ga775bcbf0151ecdea49a0eb8f0f878501" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RXFIFO_SIZE_CANFD_DEFAULT<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="group__mcan__interface_1ga70b761a43c3e5044c4981c098b044b20" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RXBUF_SIZE_CANFD_DEFAULT<sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="group__mcan__interface_1ga5046037b45ae3883a9ec5bd66cdd5178" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXEVT_ELEM_SIZE<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="structmcan__bit__timing__param__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="162" refid="structmcan__bit__timing__param__struct_1aff56539f1e9438e4de26014aea6fa785" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__bit__timing__param__struct_1aff56539f1e9438e4de26014aea6fa785" kindref="member">prescaler</ref>;<sp/></highlight></codeline>
<codeline lineno="163" refid="structmcan__bit__timing__param__struct_1ad1eaf2adf7ce1cebb83d4e9c0abd7cf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__bit__timing__param__struct_1ad1eaf2adf7ce1cebb83d4e9c0abd7cf4" kindref="member">num_seg1</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="164" refid="structmcan__bit__timing__param__struct_1a2d31072584d960c536adcf7cc1c6661f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__bit__timing__param__struct_1a2d31072584d960c536adcf7cc1c6661f" kindref="member">num_seg2</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="165" refid="structmcan__bit__timing__param__struct_1ad1452bcdb5e343c5f46148c5690afb4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__bit__timing__param__struct_1ad1452bcdb5e343c5f46148c5690afb4b" kindref="member">num_sjw</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166" refid="structmcan__bit__timing__param__struct_1af92ee5ec94fb20b986c61451fd0bf26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__param__struct_1af92ee5ec94fb20b986c61451fd0bf26b" kindref="member">enable_tdc</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167" refid="group__mcan__interface_1ga43f12b734008c4c4fb2fa32237b3535a" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga43f12b734008c4c4fb2fa32237b3535a" kindref="member">mcan_bit_timing_param_t</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="group__mcan__interface_1ga16e55b7e0b6dca264533e100e1567e62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga16e55b7e0b6dca264533e100e1567e62" kindref="member">mcan_bit_timing_option</ref><sp/>{</highlight></codeline>
<codeline lineno="173" refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a872a880dbed647ee424bbb2536e2fe78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a872a880dbed647ee424bbb2536e2fe78" kindref="member">mcan_bit_timing_can2_0</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174" refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a3fd22011a94564e5ae16638903ecdb7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a3fd22011a94564e5ae16638903ecdb7f" kindref="member">mcan_bit_timing_canfd_nominal</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175" refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62ad30324941b1a6a80e9247d5c5861761e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62ad30324941b1a6a80e9247d5c5861761e" kindref="member">mcan_bit_timing_canfd_data</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__mcan__interface_1gad10599ebb9be53be0943ec3776c15c34" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MESSAGE_HEADER_SIZE_IN_BYTES<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="group__mcan__interface_1ga9e665d0219cbf9ab308fcbd03bea9ff5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MESSAGE_HEADER_SIZE_IN_WORDS<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structmcan__tx__message__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_message_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194" refid="structmcan__tx__message__struct_1aea7c06a4a664457ddc5a97c057ca2303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1aea7c06a4a664457ddc5a97c057ca2303" kindref="member">ext_id</ref>:<sp/>29;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="structmcan__tx__message__struct_1a09bed7ba06931ec0fca18c568544e85c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a09bed7ba06931ec0fca18c568544e85c" kindref="member">rtr</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196" refid="structmcan__tx__message__struct_1a73dbc7d3a50e477f15e4b1a2cdd92350" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a73dbc7d3a50e477f15e4b1a2cdd92350" kindref="member">use_ext_id</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197" refid="structmcan__tx__message__struct_1a90caff0e4e5deff300b0e259a7b9ab1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a90caff0e4e5deff300b0e259a7b9ab1f" kindref="member">error_state_indicator</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>18;</highlight></codeline>
<codeline lineno="201" refid="structmcan__tx__message__struct_1a5bebeb624086f102302638d11a659500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a5bebeb624086f102302638d11a659500" kindref="member">std_id</ref>:<sp/>11;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="207" refid="structmcan__tx__message__struct_1a9b1c5ab992c7c6dc7c15af3e3d029956" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a9b1c5ab992c7c6dc7c15af3e3d029956" kindref="member">message_marker_h</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208" refid="structmcan__tx__message__struct_1a072f90f61ac83f85b108d7d02c403b4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a072f90f61ac83f85b108d7d02c403b4a" kindref="member">dlc</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209" refid="structmcan__tx__message__struct_1ab012454432caf6d2b468720d6a59f7b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1ab012454432caf6d2b468720d6a59f7b9" kindref="member">bitrate_switch</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="structmcan__tx__message__struct_1a761ead434e990a6119ba58a9254a8371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a761ead434e990a6119ba58a9254a8371" kindref="member">canfd_frame</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211" refid="structmcan__tx__message__struct_1a7d17828fb502c17d8cb9efbee2c440cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a7d17828fb502c17d8cb9efbee2c440cd" kindref="member">timestamp_capture_enable</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212" refid="structmcan__tx__message__struct_1a311cb6394d9d113bfcda904791a6291f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1a311cb6394d9d113bfcda904791a6291f" kindref="member">event_fifo_control</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213" refid="structmcan__tx__message__struct_1aaccb735434a2d572659300948dd7bed7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1aaccb735434a2d572659300948dd7bed7" kindref="member">message_marker_l</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216" refid="structmcan__tx__message__struct_1aa469dadb5cd72362b7ec055b5f24f1ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__tx__message__struct_1aa469dadb5cd72362b7ec055b5f24f1ff" kindref="member">data_8</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217" refid="structmcan__tx__message__struct_1ade8140a5ad4d6dc0bd0f23fb0983dc0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__tx__message__struct_1ade8140a5ad4d6dc0bd0f23fb0983dc0a" kindref="member">data_32</ref>[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="219" refid="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gac68c4001d232b5c8968857b401bb3656" kindref="member">mcan_tx_frame_t</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structmcan__rx__message__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231" refid="structmcan__rx__message__struct_1a45d484850446f74ab5b7077181c78d50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__rx__message__struct_1a45d484850446f74ab5b7077181c78d50" kindref="member">ext_id</ref>:<sp/>29;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232" refid="structmcan__rx__message__struct_1aca2174cd552a29e2278524ae568f5b6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__rx__message__struct_1aca2174cd552a29e2278524ae568f5b6e" kindref="member">rtr</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233" refid="structmcan__rx__message__struct_1ad27b1317ab4937d1fdc8c303467eff24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__rx__message__struct_1ad27b1317ab4937d1fdc8c303467eff24" kindref="member">use_ext_id</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234" refid="structmcan__rx__message__struct_1afcb3334c969ce7223bb626f69e8a8065" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__rx__message__struct_1afcb3334c969ce7223bb626f69e8a8065" kindref="member">error_state_indicator</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>18;</highlight></codeline>
<codeline lineno="238" refid="structmcan__rx__message__struct_1a8d8ddfbf1f28ce63d052450bf5eec6c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__rx__message__struct_1a8d8ddfbf1f28ce63d052450bf5eec6c2" kindref="member">std_id</ref>:<sp/>11;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244" refid="structmcan__rx__message__struct_1aed11c64264461cb01d5ee19a474474bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__rx__message__struct_1aed11c64264461cb01d5ee19a474474bd" kindref="member">rx_timestamp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246" refid="structmcan__rx__message__struct_1a5daa74395150cfc960feb8ddc11a6cb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__rx__message__struct_1a5daa74395150cfc960feb8ddc11a6cb9" kindref="member">rx_timestamp_pointer</ref>:<sp/>4;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="structmcan__rx__message__struct_1aafece64f91a4cc06b6e3661b8e8d9284" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__rx__message__struct_1aafece64f91a4cc06b6e3661b8e8d9284" kindref="member">rx_timestamp_captured</ref>:<sp/>1;<sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>:<sp/>11;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253" refid="structmcan__rx__message__struct_1adc8976664ea996174ae76a3758c05c3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__rx__message__struct_1adc8976664ea996174ae76a3758c05c3f" kindref="member">dlc</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254" refid="structmcan__rx__message__struct_1a449e710a53a507174056b286f23d2296" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__rx__message__struct_1a449e710a53a507174056b286f23d2296" kindref="member">bitrate_switch</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255" refid="structmcan__rx__message__struct_1a56dd844f6f3653b494c0d8cdf8903109" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__rx__message__struct_1a56dd844f6f3653b494c0d8cdf8903109" kindref="member">canfd_frame</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="257" refid="structmcan__rx__message__struct_1a8f5a4467dcec7e31709e5c961be5ef3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__rx__message__struct_1a8f5a4467dcec7e31709e5c961be5ef3c" kindref="member">filter_index</ref>:<sp/>7;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258" refid="structmcan__rx__message__struct_1a1c360b560f6776f03da59127998370a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__rx__message__struct_1a1c360b560f6776f03da59127998370a5" kindref="member">accepted_non_matching_frame</ref>:<sp/>1;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261" refid="structmcan__rx__message__struct_1a5251bea782969f9f71d585ea447f36ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__rx__message__struct_1a5251bea782969f9f71d585ea447f36ca" kindref="member">data_8</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262" refid="structmcan__rx__message__struct_1a2e429495bc75eca551e46771098a8a77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__rx__message__struct_1a2e429495bc75eca551e46771098a8a77" kindref="member">data_32</ref>[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="264" refid="group__mcan__interface_1ga161301a2b741b723085381037ce9abfb" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga161301a2b741b723085381037ce9abfb" kindref="member">mcan_rx_message_t</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="unionmcan__tx__event__fifo__elem__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionmcan__tx__event__fifo__elem__struct" kindref="compound">mcan_tx_event_fifo_elem_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="274" refid="unionmcan__tx__event__fifo__elem__struct_1a987d261bf24485822723a4a849a5f508" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a987d261bf24485822723a4a849a5f508" kindref="member">ext_id</ref>:<sp/>29;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275" refid="unionmcan__tx__event__fifo__elem__struct_1a992c17fe3a60f75d64e889fe475690d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a992c17fe3a60f75d64e889fe475690d5" kindref="member">rtr</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276" refid="unionmcan__tx__event__fifo__elem__struct_1a9e9ff1d32425708321cc56ce034924bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a9e9ff1d32425708321cc56ce034924bf" kindref="member">extend_id</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277" refid="unionmcan__tx__event__fifo__elem__struct_1a1d3b8cd92264be2b4d56a4d512c6adc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a1d3b8cd92264be2b4d56a4d512c6adc3" kindref="member">error_state_indicator</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>18;</highlight></codeline>
<codeline lineno="281" refid="unionmcan__tx__event__fifo__elem__struct_1ac3ef0d6b44d5e0bb4bd2fc6e45ff775d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1ac3ef0d6b44d5e0bb4bd2fc6e45ff775d" kindref="member">std_id</ref>:<sp/>11;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>16-bit<sp/>of<sp/>the<sp/>2nd<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="288" refid="unionmcan__tx__event__fifo__elem__struct_1a0159fa2b1073c30d67af7399886f37ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a0159fa2b1073c30d67af7399886f37ac" kindref="member">tx_timestamp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290" refid="unionmcan__tx__event__fifo__elem__struct_1a5828ff8d505d7a5a80784d84c7ee2cb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a5828ff8d505d7a5a80784d84c7ee2cb1" kindref="member">tx_timestamp_pointer</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291" refid="unionmcan__tx__event__fifo__elem__struct_1a4633ff16689c7c0676c7b05678bfd875" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a4633ff16689c7c0676c7b05678bfd875" kindref="member">tx_timestamp_captured</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>:<sp/>11;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>high-half<sp/>16-bit<sp/>of<sp/>the<sp/>2nd<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297" refid="unionmcan__tx__event__fifo__elem__struct_1a9dcb882e81303c3dc9dcfafa51ae8e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a9dcb882e81303c3dc9dcfafa51ae8e44" kindref="member">dlc</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298" refid="unionmcan__tx__event__fifo__elem__struct_1a9dc61dd2f7dd80dba41521b201876939" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a9dc61dd2f7dd80dba41521b201876939" kindref="member">bitrate_switch</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299" refid="unionmcan__tx__event__fifo__elem__struct_1a2b0bc9c7d221cd28a403256aa0e97be0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a2b0bc9c7d221cd28a403256aa0e97be0" kindref="member">canfd_frame</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300" refid="unionmcan__tx__event__fifo__elem__struct_1a86c23845ffceda715a45e2725370de04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a86c23845ffceda715a45e2725370de04" kindref="member">event_type</ref>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301" refid="unionmcan__tx__event__fifo__elem__struct_1a29e1b7894297c47da2a5a4e0abfee9ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1a29e1b7894297c47da2a5a4e0abfee9ea" kindref="member">message_marker</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="304" refid="unionmcan__tx__event__fifo__elem__struct_1ab256d653ecb7dca4779375723466624e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct_1ab256d653ecb7dca4779375723466624e" kindref="member">words</ref>[2];</highlight></codeline>
<codeline lineno="305" refid="group__mcan__interface_1gac727e3406aaf84fc73738cca1176fd24" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gac727e3406aaf84fc73738cca1176fd24" kindref="member">mcan_tx_event_fifo_elem_t</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="group__mcan__interface_1ga8c15fb63ba3d2d3064d20fd33843719e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_CAN_ID_TYPE_STANDARD<sp/>(0U)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="group__mcan__interface_1gae51f96d3420870c9446758cabf9e8bee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_CAN_ID_TYPE_EXTENDED<sp/>(1U)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="unionmcan__filter__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionmcan__filter__config__struct" kindref="compound">mcan_filter_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="320" refid="unionmcan__filter__config__struct_1af800b30c296bf84feec000d183b4f5c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__filter__config__struct_1af800b30c296bf84feec000d183b4f5c0" kindref="member">list_start_addr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321" refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="323" refid="unionmcan__filter__config__struct_1a98b6364a0bcfb2f7c65457ac4c3bebe1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__filter__config__struct_1a98b6364a0bcfb2f7c65457ac4c3bebe1" kindref="member">reg_val</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324" refid="group__mcan__interface_1ga47c28c7c1d388b6e87dea9f42a67ebec" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga47c28c7c1d388b6e87dea9f42a67ebec" kindref="member">mcan_filter_config_t</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="unionmcan__rxfifo__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionmcan__rxfifo__config__struct" kindref="compound">mcan_rxfifo_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="331" refid="unionmcan__rxfifo__config__struct_1a0d0ee795e21d63b0a36aa3117e49f59c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rxfifo__config__struct_1a0d0ee795e21d63b0a36aa3117e49f59c" kindref="member">start_addr</ref>:<sp/>16;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332" refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" kindref="member">fifo_size</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333" refid="unionmcan__rxfifo__config__struct_1a02dfd75487f77fa06df87f9391858696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rxfifo__config__struct_1a02dfd75487f77fa06df87f9391858696" kindref="member">watermark</ref>:<sp/>7;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334" refid="unionmcan__rxfifo__config__struct_1a17fca9e02ec26169bc9697bdcad1e89e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rxfifo__config__struct_1a17fca9e02ec26169bc9697bdcad1e89e" kindref="member">operation_mode</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="336" refid="unionmcan__rxfifo__config__struct_1ac0bb77c07cc3e624911c5787b1c49d01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rxfifo__config__struct_1ac0bb77c07cc3e624911c5787b1c49d01" kindref="member">reg_val</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337" refid="group__mcan__interface_1ga85b62b21af883bc585833c2570ab9bbc" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga85b62b21af883bc585833c2570ab9bbc" kindref="member">mcan_rxfifo_config_t</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="structmcan__rxbuf__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="343" refid="structmcan__rxbuf__config__t_1a44f0655beccc1579903802d4a1445da2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__rxbuf__config__t_1a44f0655beccc1579903802d4a1445da2" kindref="member">start_addr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal">}<sp/><ref refid="structmcan__rxbuf__config__t" kindref="compound">mcan_rxbuf_config_t</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="group__mcan__interface_1gace3d4933dbe3dfbd720578f05b1e534a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_DATA_FIELD_SIZE_8BYTES<sp/><sp/><sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="group__mcan__interface_1ga37b23c93ef81ea6ca8150053fae905bb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_DATA_FIELD_SIZE_12BYTES<sp/><sp/><sp/><sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__mcan__interface_1gaff4f91816c182e2b58bb31b3b0d42af9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_DATA_FIELD_SIZE_16BYTES<sp/><sp/><sp/><sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group__mcan__interface_1gac53ed46f103fefe78333884e1ece53df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_DATA_FIELD_SIZE_20BYTES<sp/><sp/><sp/><sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="group__mcan__interface_1ga63e2645c1d55fad06c8e6aaed5612426" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_DATA_FIELD_SIZE_24BYTES<sp/><sp/><sp/><sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="group__mcan__interface_1ga541112be859cf166067b6a8a2c8d056c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_DATA_FIELD_SIZE_32BYTES<sp/><sp/><sp/><sp/>(5U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="group__mcan__interface_1gaae4ba919b25b76af4a17b2cdbdd4571e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_DATA_FIELD_SIZE_48BYTES<sp/><sp/><sp/><sp/>(6U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="group__mcan__interface_1gaa738e5bad0344cec9fac63d943a623d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_DATA_FIELD_SIZE_64BYTES<sp/><sp/><sp/><sp/>(7U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="group__mcan__interface_1gab242ef50a19f608dee89fed9c131eb82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FIFO_OPERATION_MODE_BLOCKING<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="group__mcan__interface_1ga4361c762d486515b3747305bbba6beb6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FIFO_OPERATION_MODE_OVERWRITE<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="unionmcan__rx__fifo__or__buf__elem__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct" kindref="compound">mcan_rx_fifo_or_buf_elem_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="369" refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a51698b8c50f537cd44dff2478bd14933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a51698b8c50f537cd44dff2478bd14933" kindref="member">fifo0_data_field_size</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370" refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1acec766ec696a9d6ec7dfb383ff9759df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1acec766ec696a9d6ec7dfb383ff9759df" kindref="member">fifo1_data_field_size</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371" refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a26bec1cd13e9ba313453469696877fcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a26bec1cd13e9ba313453469696877fcf" kindref="member">buf_data_field_size</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>20;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="374" refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a2c71d7e2e782003ff1041298d9e2eb73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a2c71d7e2e782003ff1041298d9e2eb73" kindref="member">reg_val</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375" refid="group__mcan__interface_1gaab0d6e6d77acd2d7611d351416994a00" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gaab0d6e6d77acd2d7611d351416994a00" kindref="member">mcan_rx_fifo_or_buf_elem_config_t</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="group__mcan__interface_1gad53838321215f998ab4117b3cd7a18be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXBUF_OPERATION_MODE_FIFO<sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="group__mcan__interface_1ga95d750717d02852f461c46e7bf361622" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXBUF_OPERATION_MODE_QUEUE<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="unionmcan__txbuf__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionmcan__txbuf__config__struct" kindref="compound">mcan_txbuf_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="386" refid="unionmcan__txbuf__config__struct_1aaeb15cb3c24dcd8f226bba5056e7136a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__txbuf__config__struct_1aaeb15cb3c24dcd8f226bba5056e7136a" kindref="member">start_addr</ref>:<sp/>16;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387" refid="unionmcan__txbuf__config__struct_1a6df7ec33890f89f4785f84f1565f2c67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__txbuf__config__struct_1a6df7ec33890f89f4785f84f1565f2c67" kindref="member">dedicated_tx_buf_size</ref>:<sp/>6;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="389" refid="unionmcan__txbuf__config__struct_1a0069780afd802f5051892d6ee51bafb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__txbuf__config__struct_1a0069780afd802f5051892d6ee51bafb8" kindref="member">fifo_queue_size</ref>:<sp/>6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390" refid="unionmcan__txbuf__config__struct_1a5759bf151bcb244976eeae36a75034ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__txbuf__config__struct_1a5759bf151bcb244976eeae36a75034ba" kindref="member">tx_fifo_queue_mode</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="393" refid="unionmcan__txbuf__config__struct_1a462a73fd8373ee39d9480bc286e8f917" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__txbuf__config__struct_1a462a73fd8373ee39d9480bc286e8f917" kindref="member">reg_val</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394" refid="group__mcan__interface_1ga78226aa3a0bc83438fb6107baac4d8a7" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga78226aa3a0bc83438fb6107baac4d8a7" kindref="member">mcan_txbuf_config_t</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="structmcan__txbuf__elem__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__txbuf__elem__config__struct" kindref="compound">mcan_txbuf_elem_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="397" refid="structmcan__txbuf__elem__config__struct_1a8ca16d799722c7f160619f5023e71ed1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__txbuf__elem__config__struct_1a8ca16d799722c7f160619f5023e71ed1" kindref="member">data_field_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398" refid="group__mcan__interface_1ga5abfdf3ee25c1ecd54497dbd27fbefc4" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga5abfdf3ee25c1ecd54497dbd27fbefc4" kindref="member">mcan_txbuf_elem_config_t</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="unionmcan__tx__evt__fifo__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="405" refid="unionmcan__tx__evt__fifo__config__t_1ac30484de7311be6b51551c94fb8b0b60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="unionmcan__tx__evt__fifo__config__t_1ac30484de7311be6b51551c94fb8b0b60" kindref="member">start_addr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="406" refid="unionmcan__tx__evt__fifo__config__t_1ab7c81cba431e7a7bf1f1eb4a2846e9f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="unionmcan__tx__evt__fifo__config__t_1ab7c81cba431e7a7bf1f1eb4a2846e9f6" kindref="member">fifo_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407" refid="unionmcan__tx__evt__fifo__config__t_1ac9045787656b907a05674047d51ea70e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="unionmcan__tx__evt__fifo__config__t_1ac9045787656b907a05674047d51ea70e" kindref="member">fifo_watermark</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="409" refid="unionmcan__tx__evt__fifo__config__t_1aaf8c2c7c151be68e5940a00ab15eeece" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="unionmcan__tx__evt__fifo__config__t_1aaf8c2c7c151be68e5940a00ab15eeece" kindref="member">reg_val</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal">}<sp/><ref refid="unionmcan__tx__evt__fifo__config__t" kindref="compound">mcan_tx_evt_fifo_config_t</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="structmcan__ram__flexible__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__ram__flexible__config__struct" kindref="compound">mcan_ram_flexible_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="419" refid="structmcan__ram__flexible__config__struct_1a8e944f811537804e9eb44a19fd8d6afa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__flexible__config__struct_1a8e944f811537804e9eb44a19fd8d6afa" kindref="member">enable_std_filter</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420" refid="structmcan__ram__flexible__config__struct_1a3528ad98699a02494326d3c18c585d2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__flexible__config__struct_1a3528ad98699a02494326d3c18c585d2e" kindref="member">enable_ext_filter</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421" refid="structmcan__ram__flexible__config__struct_1adaaeb5a31cc176a94fbebad3fc57e069" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__flexible__config__struct_1adaaeb5a31cc176a94fbebad3fc57e069" kindref="member">enable_rxfifo0</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422" refid="structmcan__ram__flexible__config__struct_1aeeecde928e842d4c436fb4eb2b12fee6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__flexible__config__struct_1aeeecde928e842d4c436fb4eb2b12fee6" kindref="member">enable_rxfifo1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423" refid="structmcan__ram__flexible__config__struct_1a1b5e088482285241548d4187956a4e8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__flexible__config__struct_1a1b5e088482285241548d4187956a4e8a" kindref="member">enable_rxbuf</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424" refid="structmcan__ram__flexible__config__struct_1a1a9adbf71432b665745474c04354aeb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__flexible__config__struct_1a1a9adbf71432b665745474c04354aeb5" kindref="member">enable_txbuf</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425" refid="structmcan__ram__flexible__config__struct_1a0e5d67e63cd97b6bcb26f033b158c0c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__flexible__config__struct_1a0e5d67e63cd97b6bcb26f033b158c0c8" kindref="member">enable_tx_evt_fifo</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427" refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionmcan__filter__config__struct" kindref="compound">mcan_filter_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" kindref="member">std_filter_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428" refid="structmcan__ram__flexible__config__struct_1acddc92a506ba0337241363e4b164ce91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionmcan__filter__config__struct" kindref="compound">mcan_filter_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1acddc92a506ba0337241363e4b164ce91" kindref="member">ext_filter_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430" refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionmcan__txbuf__config__struct" kindref="compound">mcan_txbuf_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431" refid="structmcan__ram__flexible__config__struct_1a3ee180edde6972e11b83a5c3c0c334f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__txbuf__elem__config__struct" kindref="compound">mcan_txbuf_elem_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1a3ee180edde6972e11b83a5c3c0c334f3" kindref="member">txbuf_elem_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432" refid="structmcan__ram__flexible__config__struct_1a908d62e3d6116e99632fe7d91d601258" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionmcan__tx__evt__fifo__config__t" kindref="compound">mcan_tx_evt_fifo_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1a908d62e3d6116e99632fe7d91d601258" kindref="member">tx_evt_fifo_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434" refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionmcan__rxfifo__config__struct" kindref="compound">mcan_rxfifo_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435" refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionmcan__rxfifo__config__struct" kindref="compound">mcan_rxfifo_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436" refid="structmcan__ram__flexible__config__struct_1a0cd47ebf5b28d0797ab5e744a55a72bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__rxbuf__config__t" kindref="compound">mcan_rxbuf_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1a0cd47ebf5b28d0797ab5e744a55a72bb" kindref="member">rxbuf_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437" refid="structmcan__ram__flexible__config__struct_1ae36edcfa8592d830d152d888490f270e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct" kindref="compound">mcan_rx_fifo_or_buf_elem_config_t</ref><sp/><ref refid="structmcan__ram__flexible__config__struct_1ae36edcfa8592d830d152d888490f270e" kindref="member">rx_elem_config</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438" refid="group__mcan__interface_1ga34c9afc91a3c7bbb3811b6ae433ee011" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga34c9afc91a3c7bbb3811b6ae433ee011" kindref="member">mcan_ram_flexible_config_t</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="structmcan__ram__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="448" refid="structmcan__ram__config__struct_1a2db993b8cd7c36c592ea79d912474beb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__config__struct_1a2db993b8cd7c36c592ea79d912474beb" kindref="member">enable_std_filter</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449" refid="structmcan__ram__config__struct_1a1a8754285aaa5704c355b70f6cc55ebc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1a1a8754285aaa5704c355b70f6cc55ebc" kindref="member">std_filter_elem_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451" refid="structmcan__ram__config__struct_1ab882c0053db6a0e74f4c6e675ad1b727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__config__struct_1ab882c0053db6a0e74f4c6e675ad1b727" kindref="member">enable_ext_filter</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452" refid="structmcan__ram__config__struct_1a4dfb5ba95abe3a463e2b489c963826f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1a4dfb5ba95abe3a463e2b489c963826f3" kindref="member">ext_filter_elem_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="455" refid="structmcan__ram__config__struct_1ae860950b53ebc77727916ff44fa73df6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__ram__config__struct_1ae860950b53ebc77727916ff44fa73df6" kindref="member">enable</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456" refid="structmcan__ram__config__struct_1a92d6aa6c0a29a174399a0dc5e87cb9b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__ram__config__struct_1a92d6aa6c0a29a174399a0dc5e87cb9b0" kindref="member">elem_count</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="457" refid="structmcan__ram__config__struct_1a024e8b2ac12e6fd9475e23f6c715f51e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__ram__config__struct_1a024e8b2ac12e6fd9475e23f6c715f51e" kindref="member">watermark</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="458" refid="structmcan__ram__config__struct_1a87de9a2700e740f80c542f8f187315d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__ram__config__struct_1a87de9a2700e740f80c542f8f187315d9" kindref="member">operation_mode</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459" refid="structmcan__ram__config__struct_1a16c4b1e23a1cf66c85cc1255809dfb53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__ram__config__struct_1a16c4b1e23a1cf66c85cc1255809dfb53" kindref="member">data_field_size</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460" refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[2];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="structmcan__ram__config__struct_1abc3249ae3465ecfbdb64d4fb336a78ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__config__struct_1abc3249ae3465ecfbdb64d4fb336a78ac" kindref="member">enable_rxbuf</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463" refid="structmcan__ram__config__struct_1a27c387c78dd882718e70d12689ebfa50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1a27c387c78dd882718e70d12689ebfa50" kindref="member">rxbuf_elem_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464" refid="structmcan__ram__config__struct_1af321237fe68d3931da1d30813c051ec7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__ram__config__struct_1af321237fe68d3931da1d30813c051ec7" kindref="member">rxbuf_data_field_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466" refid="structmcan__ram__config__struct_1a2b8a44e572f2720f547f1d074ee82df9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__config__struct_1a2b8a44e572f2720f547f1d074ee82df9" kindref="member">enable_txbuf</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467" refid="structmcan__ram__config__struct_1a03d6ee54f64c45787492db131ef2c834" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1a03d6ee54f64c45787492db131ef2c834" kindref="member">txbuf_data_field_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468" refid="structmcan__ram__config__struct_1a329f3ec712a83358c310412d36d41625" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1a329f3ec712a83358c310412d36d41625" kindref="member">txbuf_dedicated_txbuf_elem_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469" refid="structmcan__ram__config__struct_1af2c838de931810046cb20c5b9ae131c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1af2c838de931810046cb20c5b9ae131c2" kindref="member">txbuf_fifo_or_queue_elem_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470" refid="structmcan__ram__config__struct_1a714ed84fcfe72da0b3c3e66da1bc3aab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1a714ed84fcfe72da0b3c3e66da1bc3aab" kindref="member">txfifo_or_txqueue_mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472" refid="structmcan__ram__config__struct_1a5cd46c9bb1dee840f76e6d207cf4124b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__ram__config__struct_1a5cd46c9bb1dee840f76e6d207cf4124b" kindref="member">enable_tx_evt_fifo</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473" refid="structmcan__ram__config__struct_1ac62af07197df64eeb3af99063b6b898d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1ac62af07197df64eeb3af99063b6b898d" kindref="member">tx_evt_fifo_elem_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474" refid="structmcan__ram__config__struct_1a86bf16c31f58dffa8be1db6507c6b083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__ram__config__struct_1a86bf16c31f58dffa8be1db6507c6b083" kindref="member">tx_evt_fifo_watermark</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475" refid="group__mcan__interface_1ga9d893c9314ae4143f9135a0fc8faec40" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga9d893c9314ae4143f9135a0fc8faec40" kindref="member">mcan_ram_config_t</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="group__mcan__interface_1ga51cf75d4a4d1ea24ccd25dcc7aba7fd4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_ACCEPT_NON_MATCHING_FRAME_OPTION_IN_RXFIFO0<sp/>(0U)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="group__mcan__interface_1ga65375097667774e12a1259b2cff16064" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_ACCEPT_NON_MATCHING_FRAME_OPTION_IN_RXFIFO1<sp/>(1U)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="group__mcan__interface_1gae5f77e599ca64adae8b62b2cdb5ef09f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_ACCEPT_NON_MATCHING_FRAME_OPTION_REJECT<sp/>(2U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="structmcan__global__filter__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__global__filter__config__struct" kindref="compound">mcan_global_filter_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="488" refid="structmcan__global__filter__config__struct_1ad11daaec2c85e481f4217026dbe6a0aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__global__filter__config__struct_1ad11daaec2c85e481f4217026dbe6a0aa" kindref="member">accept_non_matching_std_frame_option</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489" refid="structmcan__global__filter__config__struct_1ab1f22218f9c731b12d917be6ef90dfee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__global__filter__config__struct_1ab1f22218f9c731b12d917be6ef90dfee" kindref="member">accept_non_matching_ext_frame_option</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490" refid="structmcan__global__filter__config__struct_1a58d303c0277e5fbfe3764f91e2987794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__global__filter__config__struct_1a58d303c0277e5fbfe3764f91e2987794" kindref="member">reject_remote_std_frame</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491" refid="structmcan__global__filter__config__struct_1a5e5543ef45c2ba0bdff968c6048c3324" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__global__filter__config__struct_1a5e5543ef45c2ba0bdff968c6048c3324" kindref="member">reject_remote_ext_frame</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492" refid="group__mcan__interface_1ga9b7426fec77d6adf21dd2458fa43ff3f" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga9b7426fec77d6adf21dd2458fa43ff3f" kindref="member">mcan_global_filter_config_t</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="group__mcan__interface_1ga8bb417d875b4d89a998df621362c0a42" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_TYPE_RANGE_FILTER<sp/>(0U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="group__mcan__interface_1ga14b07636a96d2e292e48f09bf0e1643d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_TYPE_SPECIFIED_ID_FILTER<sp/>(1U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="group__mcan__interface_1gaa27b937448fe2ed18091fac7b4ff4ed7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_TYPE_CLASSIC_FILTER<sp/>(2U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="group__mcan__interface_1gac841ca977cbae32a6c986c145094293d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_TYPE_FILTER_DISABLED<sp/>(3U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="group__mcan__interface_1ga96ec06bafc9948c4c60ec51080c9ed5e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_TYPE_DUAL_ID_EXT_FILTER_IGNORE_MASK<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="group__mcan__interface_1gac9a4794c83cad7a44025991108ec5125" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_CFG_DISABLED<sp/>(0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="group__mcan__interface_1ga37557c65749255e5998681a274326c1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_CFG_STORE_IN_RX_FIFO0_IF_MATCH<sp/>(1U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="group__mcan__interface_1ga6508b92af005dbcd9b9cb7327c37aef9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_CFG_STORE_IN_RX_FIFO1_IF_MATCH<sp/>(2U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="group__mcan__interface_1ga46f8c21fa27c57e069395949f30786a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_CFG_REJECT_ID_IF_MATCH<sp/>(3U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_CFG_SET_PRIORITY_IF_MATCH<sp/>(4U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_CFG_SET_PRIORITY_AND_STORE_IN_FIFO0_IF_MATCH<sp/>(5U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="group__mcan__interface_1ga83f9878185ee3589a9a98d14499add42" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_CFG_SET_PRIORITY_AND_STORE_IN_FIFO1_IF_MATCH<sp/>(6U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="group__mcan__interface_1gab4d681d2b6025820cf782870540023ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_FILTER_ELEM_CFG_STORE_INTO_RX_BUFFER_OR_AS_DBG_MSG<sp/>(7U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="structmcan__std__id__filter__elem__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__std__id__filter__elem__struct" kindref="compound">mcan_std_id_filter_elem_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="521" refid="structmcan__std__id__filter__elem__struct_1a1c6d26b947f305258cde72d473935468" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a1c6d26b947f305258cde72d473935468" kindref="member">filter_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="522" refid="structmcan__std__id__filter__elem__struct_1ae791285afe78c5258b86b584a37abf7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1ae791285afe78c5258b86b584a37abf7a" kindref="member">filter_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523" refid="structmcan__std__id__filter__elem__struct_1a1631f6f090569d39ba14a2b16381a12a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a1631f6f090569d39ba14a2b16381a12a" kindref="member">can_id_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524" refid="structmcan__std__id__filter__elem__struct_1a4713f6267c14c01f124fcdac22794b54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a4713f6267c14c01f124fcdac22794b54" kindref="member">sync_message</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>definition<sp/>takes<sp/>effect<sp/>if<sp/>the<sp/>filter<sp/>type<sp/>is<sp/>range<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="528" refid="structmcan__std__id__filter__elem__struct_1a1d2dcb96658ca43e7847e6e063efc77b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a1d2dcb96658ca43e7847e6e063efc77b" kindref="member">start_id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529" refid="structmcan__std__id__filter__elem__struct_1ab93f71c0e4291f49de098a99bc86a812" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1ab93f71c0e4291f49de098a99bc86a812" kindref="member">end_id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>definition<sp/>takes<sp/>effect<sp/>if<sp/>the<sp/>filter<sp/>type<sp/>is<sp/>dual<sp/>id<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="533" refid="structmcan__std__id__filter__elem__struct_1ada997ff601b95dcda5258c62807398d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1ada997ff601b95dcda5258c62807398d7" kindref="member">id1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534" refid="structmcan__std__id__filter__elem__struct_1a98e726d4bd2ed1416ed200d8ebb8ad19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a98e726d4bd2ed1416ed200d8ebb8ad19" kindref="member">id2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>definition<sp/>takes<sp/>effect<sp/>if<sp/>the<sp/>filter<sp/>type<sp/>is<sp/>classic<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="538" refid="structmcan__std__id__filter__elem__struct_1a4ac4fe01ec159d341d11c3958dd40776" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a4ac4fe01ec159d341d11c3958dd40776" kindref="member">filter_id</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539" refid="structmcan__std__id__filter__elem__struct_1a57f338531d2117254da36f029643830a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a57f338531d2117254da36f029643830a" kindref="member">filter_mask</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>definition<sp/>takes<sp/>effect<sp/>if<sp/>the<sp/>filter<sp/>configuration<sp/>is<sp/>&quot;store<sp/>into<sp/>RX<sp/>Buffer<sp/>or<sp/>as<sp/>debug<sp/>message&quot;</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>In<sp/>this<sp/>definition,<sp/>only<sp/>the<sp/>exact<sp/>ID<sp/>matching<sp/>mode<sp/>is<sp/>activated</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="546" refid="structmcan__std__id__filter__elem__struct_1af693fc342bca45814f7e1b5ea595e9cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1af693fc342bca45814f7e1b5ea595e9cd" kindref="member">match_id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="547" refid="structmcan__std__id__filter__elem__struct_1a08275339e4fd97c13cfd4f67b9e06e9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a08275339e4fd97c13cfd4f67b9e06e9e" kindref="member">offset</ref>:<sp/>6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548" refid="structmcan__std__id__filter__elem__struct_1a798fb9fc6c5a69b1bdcb4d488fb2391f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a798fb9fc6c5a69b1bdcb4d488fb2391f" kindref="member">filter_event</ref>:<sp/>3;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="549" refid="structmcan__std__id__filter__elem__struct_1a3cb768320c6c99c67dafeaf71991c9aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__std__id__filter__elem__struct_1a3cb768320c6c99c67dafeaf71991c9aa" kindref="member">store_location</ref>:<sp/>2;<sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>21;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="553" refid="group__mcan__interface_1ga980dcb116ce6583e40dc0b407b72cd54" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga980dcb116ce6583e40dc0b407b72cd54" kindref="member">mcan_filter_elem_t</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="structmcan__filter__elem__list__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__filter__elem__list__struct" kindref="compound">mcan_filter_elem_list_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="559" refid="structmcan__filter__elem__list__struct_1ab8a3414679fb63d24093c9e507265e48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__filter__elem__list__struct_1ab8a3414679fb63d24093c9e507265e48" kindref="member">mcan_filter_elem_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560" refid="structmcan__filter__elem__list__struct_1a306fd656d8cb5b7ddb79d1f903cc9852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__std__id__filter__elem__struct" kindref="compound">mcan_filter_elem_t</ref><sp/>*<ref refid="structmcan__filter__elem__list__struct_1a306fd656d8cb5b7ddb79d1f903cc9852" kindref="member">filter_elem_list</ref>;<sp/></highlight></codeline>
<codeline lineno="561" refid="group__mcan__interface_1gaa5505a35f1b7d9e348629e2b9f48ceb9" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gaa5505a35f1b7d9e348629e2b9f48ceb9" kindref="member">mcan_filter_elem_list_t</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="structmcan__all__filters__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__all__filters__config__struct" kindref="compound">mcan_all_filters_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="569" refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__global__filter__config__struct" kindref="compound">mcan_global_filter_config_t</ref><sp/><ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570" refid="structmcan__all__filters__config__struct_1acd37a5772a3955749c07a769b17fbfdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__all__filters__config__struct_1acd37a5772a3955749c07a769b17fbfdd" kindref="member">ext_id_mask</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="571" refid="structmcan__all__filters__config__struct_1a0177293747474d962e88ef1175af4439" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__filter__elem__list__struct" kindref="compound">mcan_filter_elem_list_t</ref><sp/><ref refid="structmcan__all__filters__config__struct_1a0177293747474d962e88ef1175af4439" kindref="member">std_id_filter_list</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572" refid="structmcan__all__filters__config__struct_1a84ea0e9f7a12194c90effb457acbff1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__filter__elem__list__struct" kindref="compound">mcan_filter_elem_list_t</ref><sp/><ref refid="structmcan__all__filters__config__struct_1a84ea0e9f7a12194c90effb457acbff1f" kindref="member">ext_id_filter_list</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="573" refid="group__mcan__interface_1gad0a9be13b9b95e591182881365267eeb" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gad0a9be13b9b95e591182881365267eeb" kindref="member">mcan_all_filters_config_t</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="group__mcan__interface_1gaf55077f151a7b54491a518d3a7e5932e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaf55077f151a7b54491a518d3a7e5932e" kindref="member">mcan_node_mode_enum</ref><sp/>{</highlight></codeline>
<codeline lineno="579" refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea17b2edd341a219975a6938cd19d32494" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea17b2edd341a219975a6938cd19d32494" kindref="member">mcan_mode_normal</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580" refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea4020de624af6113b400b72b6efa16547" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea4020de624af6113b400b72b6efa16547" kindref="member">mcan_mode_loopback_internal</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="581" refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea5b9acf45c49d4988a267500f0f04720d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea5b9acf45c49d4988a267500f0f04720d" kindref="member">mcan_mode_loopback_external</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582" refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932eaf01b5ed8a81437b6fbc94714ff98a3b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932eaf01b5ed8a81437b6fbc94714ff98a3b5" kindref="member">mcan_mode_listen_only</ref><sp/>=<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="583" refid="group__mcan__interface_1ga03774f4741c4cdbb36fee752bdf5ae67" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga03774f4741c4cdbb36fee752bdf5ae67" kindref="member">mcan_node_mode_t</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="structmcan__timestamp__value__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__timestamp__value__struct" kindref="compound">mcan_timestamp_value_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="589" refid="structmcan__timestamp__value__struct_1afef280304c6f7a2a0a2574cead3d4bca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__timestamp__value__struct_1afef280304c6f7a2a0a2574cead3d4bca" kindref="member">is_16bit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="590" refid="structmcan__timestamp__value__struct_1aa9819288b85e5525eb29f2e01245f6cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__timestamp__value__struct_1aa9819288b85e5525eb29f2e01245f6cc" kindref="member">is_32bit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591" refid="structmcan__timestamp__value__struct_1abe0a61546e6bfbce16f27566fbff85f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__timestamp__value__struct_1abe0a61546e6bfbce16f27566fbff85f9" kindref="member">is_64bit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592" refid="structmcan__timestamp__value__struct_1a99cc971e7a953819c05318947f63e378" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__timestamp__value__struct_1a99cc971e7a953819c05318947f63e378" kindref="member">is_empty</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="594" refid="structmcan__timestamp__value__struct_1a315c85d12c72edd65ec700093394c235" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__timestamp__value__struct_1a315c85d12c72edd65ec700093394c235" kindref="member">ts_16bit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595" refid="structmcan__timestamp__value__struct_1a6202f50764fe72d496dd8755b2684e5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__timestamp__value__struct_1a6202f50764fe72d496dd8755b2684e5f" kindref="member">ts_32bit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="596" refid="structmcan__timestamp__value__struct_1a5bbb717c7995e4decf24b715e85afcd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structmcan__timestamp__value__struct_1a5bbb717c7995e4decf24b715e85afcd7" kindref="member">ts_64bit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="597" refid="structmcan__timestamp__value__struct_1afb0f9dc88ada9e786c7cacf936a5134a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__timestamp__value__struct_1afb0f9dc88ada9e786c7cacf936a5134a" kindref="member">words</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="599" refid="group__mcan__interface_1ga4d945094f3ea8b3fe8df39115ac971b9" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga4d945094f3ea8b3fe8df39115ac971b9" kindref="member">mcan_timestamp_value_t</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="structmcan__tsu__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__tsu__config__struct" kindref="compound">mcan_tsu_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="605" refid="structmcan__tsu__config__struct_1af376a2bcf5ad78e9bfde210818852be8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__tsu__config__struct_1af376a2bcf5ad78e9bfde210818852be8" kindref="member">prescaler</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="606" refid="structmcan__tsu__config__struct_1a994bfe747f8b6c8a243df6c723473d57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__tsu__config__struct_1a994bfe747f8b6c8a243df6c723473d57" kindref="member">capture_on_sof</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607" refid="structmcan__tsu__config__struct_1a48b279a028ceb3bf575b12d12f4cca4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__tsu__config__struct_1a48b279a028ceb3bf575b12d12f4cca4a" kindref="member">use_ext_timebase</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="608" refid="structmcan__tsu__config__struct_1a58a0fe547dbb28f1d1e8f160cc152078" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__tsu__config__struct_1a58a0fe547dbb28f1d1e8f160cc152078" kindref="member">ext_timebase_src</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609" refid="structmcan__tsu__config__struct_1a88fed68cdf6e28be07823c88a2b8acdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__tsu__config__struct_1a88fed68cdf6e28be07823c88a2b8acdc" kindref="member">tbsel_option</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="610" refid="structmcan__tsu__config__struct_1a9c75c6c99a7d2d16ac9c5c94e90d41a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__tsu__config__struct_1a9c75c6c99a7d2d16ac9c5c94e90d41a9" kindref="member">enable_tsu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="611" refid="structmcan__tsu__config__struct_1a954c127d22f73085fbe86fbd566111b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__tsu__config__struct_1a954c127d22f73085fbe86fbd566111b8" kindref="member">enable_64bit_timestamp</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612" refid="group__mcan__interface_1ga4a8dbf0ef0c52e686298e5c60697d350" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga4a8dbf0ef0c52e686298e5c60697d350" kindref="member">mcan_tsu_config_t</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="group__mcan__interface_1ga50da67553c9c3322a0da467c3a22641d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMESTAMP_SEL_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="group__mcan__interface_1ga2fe695863ba95530aa5c8b3ae3bbf8d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMESTAMP_SEL_VALUE_ALWAYS_ZERO<sp/>(0U)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="group__mcan__interface_1ga4a9f63258d707d57539ac7fa3256cc43" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMESTAMP_SEL_VALUE_INCREMENT<sp/><sp/><sp/>(1U)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="group__mcan__interface_1gaed39acc07f4b3ee4c7004729d1c7d152" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMESTAMP_SEL_EXT_TS_VAL_USED<sp/><sp/><sp/>(2U)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="group__mcan__interface_1ga13979fcab78c18dc9b18dc46a51cdb4f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMESTAMP_SEL_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_TIMESTAMP_SEL_EXT_TS_VAL_USED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="structmcan__internal__timestamp__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__internal__timestamp__config__struct" kindref="compound">mcan_internal_timestamp_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="627" refid="structmcan__internal__timestamp__config__struct_1a351c53597bcebf31f6029c8b54bc0069" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__internal__timestamp__config__struct_1a351c53597bcebf31f6029c8b54bc0069" kindref="member">counter_prescaler</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="628" refid="structmcan__internal__timestamp__config__struct_1a06f927502ef9e08c72b717fd607a79f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__internal__timestamp__config__struct_1a06f927502ef9e08c72b717fd607a79f1" kindref="member">timestamp_selection</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="629" refid="group__mcan__interface_1gafba16d528afcb037dc30093ef09c6993" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gafba16d528afcb037dc30093ef09c6993" kindref="member">mcan_internal_timestamp_config_t</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="group__mcan__interface_1gae8f3abd4b8e9156cbf8e6e454aa825a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gae8f3abd4b8e9156cbf8e6e454aa825a6" kindref="member">mcan_timeout_sel_enum</ref><sp/>{</highlight></codeline>
<codeline lineno="635" refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6a8906a5c3724c85571be8f74cb9e6f4c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6a8906a5c3724c85571be8f74cb9e6f4c1" kindref="member">mcan_timeout_continuous_operation</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="636" refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6ad83aea6e713a3a74ed1a44021f9dbf1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6ad83aea6e713a3a74ed1a44021f9dbf1b" kindref="member">mcan_timeout_triggered_by_tx_evt_fifo</ref><sp/>=<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="637" refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6acdc9d9f55905941770d8867c6d8085b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6acdc9d9f55905941770d8867c6d8085b2" kindref="member">mcan_timeout_triggered_by_rx_fifo0</ref><sp/><sp/><sp/><sp/>=<sp/>2,<sp/><sp/></highlight></codeline>
<codeline lineno="638" refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6a0f2e7cbd853485d2d72937a073753ee2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6a0f2e7cbd853485d2d72937a073753ee2" kindref="member">mcan_timeout_triggered_by_rx_fifo1</ref><sp/><sp/><sp/><sp/>=<sp/>3,<sp/><sp/></highlight></codeline>
<codeline lineno="639" refid="group__mcan__interface_1ga2bf11e31fefe80a5099a074bb4174959" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga2bf11e31fefe80a5099a074bb4174959" kindref="member">mcan_timeout_sel_t</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="structmcan__timeout__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__timeout__config__struct" kindref="compound">mcan_timeout_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="645" refid="structmcan__timeout__config__struct_1ab70d2d61eb344bb4bf7e3fb8ecb16f8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__timeout__config__struct_1ab70d2d61eb344bb4bf7e3fb8ecb16f8e" kindref="member">enable_timeout_counter</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="646" refid="structmcan__timeout__config__struct_1afc419244b9d064a010f13ccfe8b6715e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga2bf11e31fefe80a5099a074bb4174959" kindref="member">mcan_timeout_sel_t</ref><sp/><ref refid="structmcan__timeout__config__struct_1afc419244b9d064a010f13ccfe8b6715e" kindref="member">timeout_sel</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="647" refid="structmcan__timeout__config__struct_1a534237042df3b9eab3f649777b74d799" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__timeout__config__struct_1a534237042df3b9eab3f649777b74d799" kindref="member">timeout_period</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="648" refid="group__mcan__interface_1ga329a67c1bfef2b745d5991e44a435fde" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga329a67c1bfef2b745d5991e44a435fde" kindref="member">mcan_timeout_config_t</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="structmcan__tdc__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__tdc__config__t" kindref="compound">mcan_tdc_config_t</ref><sp/>{</highlight></codeline>
<codeline lineno="654" refid="structmcan__tdc__config__t_1a840b20697c1e253a22eb71ed6c23d9b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__tdc__config__t_1a840b20697c1e253a22eb71ed6c23d9b2" kindref="member">ssp_offset</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="655" refid="structmcan__tdc__config__t_1a4299fb266fe825910e48515905373858" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__tdc__config__t_1a4299fb266fe825910e48515905373858" kindref="member">filter_window_length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="656" refid="group__mcan__interface_1ga03b44319f71364f5ce2c3f398974ad94" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga03b44319f71364f5ce2c3f398974ad94" kindref="member">mcan_tdc_config_t</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="structmcan__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__config__struct" kindref="compound">mcan_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>struct<sp/>takes<sp/>effect<sp/>if<sp/>&quot;use_lowlevel_timing_setting<sp/>=<sp/>false&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="666" refid="structmcan__config__struct_1a2c2e6d4cace535e28cb434fc85c590dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__config__struct_1a2c2e6d4cace535e28cb434fc85c590dc" kindref="member">baudrate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="667" refid="structmcan__config__struct_1a00ad47a139f4d095b42379f3582a0273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__config__struct_1a00ad47a139f4d095b42379f3582a0273" kindref="member">baudrate_fd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="668" refid="structmcan__config__struct_1ab202fab33e68db4729686b2c2b8fae40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__config__struct_1ab202fab33e68db4729686b2c2b8fae40" kindref="member">can20_samplepoint_min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="669" refid="structmcan__config__struct_1a9087351cb9a2ce9a8d73a0841509333c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__config__struct_1a9087351cb9a2ce9a8d73a0841509333c" kindref="member">can20_samplepoint_max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="670" refid="structmcan__config__struct_1aed53af67443e0e04a8d5a0b5a321c2a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__config__struct_1aed53af67443e0e04a8d5a0b5a321c2a0" kindref="member">canfd_samplepoint_min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671" refid="structmcan__config__struct_1ab1b2fcc99d240d6d605bae65a5ea2b67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__config__struct_1ab1b2fcc99d240d6d605bae65a5ea2b67" kindref="member">canfd_samplepoint_max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>struct<sp/>takes<sp/>effect<sp/>if<sp/>&quot;use_lowlevel_timing_setting<sp/>=<sp/>true&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="675" refid="structmcan__config__struct_1a3d2a1efe18907aabb1da3979519431cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/><ref refid="structmcan__config__struct_1a3d2a1efe18907aabb1da3979519431cd" kindref="member">can_timing</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676" refid="structmcan__config__struct_1a452ffa673da6e95aa1158419282e6fc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/><ref refid="structmcan__config__struct_1a452ffa673da6e95aa1158419282e6fc1" kindref="member">canfd_timing</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="679" refid="structmcan__config__struct_1ae8f37b2ad4d57c0d21d24b36b8eefc92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1ae8f37b2ad4d57c0d21d24b36b8eefc92" kindref="member">use_lowlevel_timing_setting</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="680" refid="structmcan__config__struct_1abefde0b18ab688a345702b0d21e689a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga03774f4741c4cdbb36fee752bdf5ae67" kindref="member">mcan_node_mode_t</ref><sp/><ref refid="structmcan__config__struct_1abefde0b18ab688a345702b0d21e689a7" kindref="member">mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="681" refid="structmcan__config__struct_1a2d45408c6eee4a952c31d154797c9b1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1a2d45408c6eee4a952c31d154797c9b1e" kindref="member">enable_non_iso_mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="682" refid="structmcan__config__struct_1af3b754b114bc151eb8141e5403ad62fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1af3b754b114bc151eb8141e5403ad62fa" kindref="member">enable_transmit_pause</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="683" refid="structmcan__config__struct_1ac65911843274788dad0af70288b22430" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1ac65911843274788dad0af70288b22430" kindref="member">enable_edge_filtering</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="684" refid="structmcan__config__struct_1ad46cfc929a18252b6997ca96a4720df7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1ad46cfc929a18252b6997ca96a4720df7" kindref="member">disable_protocol_exception_handling</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="685" refid="structmcan__config__struct_1a053c3a92fc5b024774a8c3d2e5f5f525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1a053c3a92fc5b024774a8c3d2e5f5f525" kindref="member">enable_wide_message_marker</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="686" refid="structmcan__config__struct_1af74457b06327fc03ec22a6b1754111f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1af74457b06327fc03ec22a6b1754111f2" kindref="member">use_timestamping_unit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="687" refid="structmcan__config__struct_1a0008f6c80f12cc7e2c2cdcf69c55d120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1a0008f6c80f12cc7e2c2cdcf69c55d120" kindref="member">enable_canfd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="688" refid="structmcan__config__struct_1a4ecbc06003e6e2518508cebc7bd4097f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1a4ecbc06003e6e2518508cebc7bd4097f" kindref="member">enable_tdc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="689" refid="structmcan__config__struct_1aaad7bcd6d2ba4e41b23bcd92904cc83e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1aaad7bcd6d2ba4e41b23bcd92904cc83e" kindref="member">enable_restricted_operation_mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="690" refid="structmcan__config__struct_1a72fb70555e55a6a470371d09dee8826f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__config__struct_1a72fb70555e55a6a470371d09dee8826f" kindref="member">disable_auto_retransmission</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="691" refid="structmcan__config__struct_1a9fc99752d901f05d34a7ee1d560e0c2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__tdc__config__t" kindref="compound">mcan_tdc_config_t</ref><sp/><ref refid="structmcan__config__struct_1a9fc99752d901f05d34a7ee1d560e0c2e" kindref="member">tdc_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="692" refid="structmcan__config__struct_1a2c5f9976969eefea00bc0efca24a8767" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__internal__timestamp__config__struct" kindref="compound">mcan_internal_timestamp_config_t</ref><sp/><ref refid="structmcan__config__struct_1a2c5f9976969eefea00bc0efca24a8767" kindref="member">timestamp_cfg</ref>;<sp/></highlight></codeline>
<codeline lineno="693" refid="structmcan__config__struct_1a03b30735f04507262407d2efe9e542d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__tsu__config__struct" kindref="compound">mcan_tsu_config_t</ref><sp/><ref refid="structmcan__config__struct_1a03b30735f04507262407d2efe9e542d6" kindref="member">tsu_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="694" refid="structmcan__config__struct_1a247db2e48995db6455b8a2390ecfd07a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_t</ref><sp/><ref refid="structmcan__config__struct_1a247db2e48995db6455b8a2390ecfd07a" kindref="member">ram_config</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="695" refid="structmcan__config__struct_1afd7f4cad27ad7ab5eeee0a3a56629c22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__all__filters__config__struct" kindref="compound">mcan_all_filters_config_t</ref><sp/><ref refid="structmcan__config__struct_1afd7f4cad27ad7ab5eeee0a3a56629c22" kindref="member">all_filters_config</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="697" refid="structmcan__config__struct_1a3eb5a4d7ed612d547ebb8ed73619e3c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__timeout__config__struct" kindref="compound">mcan_timeout_config_t</ref><sp/><ref refid="structmcan__config__struct_1a3eb5a4d7ed612d547ebb8ed73619e3c3" kindref="member">timeout_cfg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="699" refid="structmcan__config__struct_1a936b7f1689819aee441e08e4f7f0ee63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__config__struct_1a936b7f1689819aee441e08e4f7f0ee63" kindref="member">interrupt_mask</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="700" refid="structmcan__config__struct_1a8305bec95251b4eb8673dca9f169deff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__config__struct_1a8305bec95251b4eb8673dca9f169deff" kindref="member">txbuf_trans_interrupt_mask</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="701" refid="structmcan__config__struct_1a2737d7ff0e82011f8b29b7dfc3477a9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcan__config__struct_1a2737d7ff0e82011f8b29b7dfc3477a9b" kindref="member">txbuf_cancel_finish_interrupt_mask</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="702" refid="group__mcan__interface_1ga0aaab5e5f6d04c7014fe75b0e5781064" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga0aaab5e5f6d04c7014fe75b0e5781064" kindref="member">mcan_config_t</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="707" refid="group__mcan__interface_1gad2246d5606101f81f857301d50e3697d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMEOUT_SEL_TYPE_CONTINUOUS_OPERATION<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="group__mcan__interface_1ga7483abcd9b58162c53d1148233552aea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMEOUT_SEL_TYPE_TIMEOUT_CTRL_BY_TX_EVT_FIFO<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709" refid="group__mcan__interface_1ga48295e6ccaf56f8e12f199a35ed7614b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMEOUT_SEL_TYPE_TIMEOUT_CTRL_BY_RX_FIFO0<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710" refid="group__mcan__interface_1ga43fd05103118a985616be885e102e740" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMEOUT_SEL_TYPE_TIMEOUT_CTRL_BY_RX_FIFO1<sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="structmcan__timeout__counter__config__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__timeout__counter__config__struct" kindref="compound">mcan_timeout_counter_config_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="716" refid="structmcan__timeout__counter__config__struct_1a14535d499dac32d6b3353cf0b3f7e6f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__timeout__counter__config__struct_1a14535d499dac32d6b3353cf0b3f7e6f9" kindref="member">enable_timeout_counter</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="717" refid="structmcan__timeout__counter__config__struct_1ae4d358bcf47ec5877162814a4d991d7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__timeout__counter__config__struct_1ae4d358bcf47ec5877162814a4d991d7c" kindref="member">timeout_selection</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="718" refid="structmcan__timeout__counter__config__struct_1a4825d117fb7206a91657d781b29d1137" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__timeout__counter__config__struct_1a4825d117fb7206a91657d781b29d1137" kindref="member">timeout_period</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="719" refid="group__mcan__interface_1gac6cfae7e3b03fe0d5928446da385874d" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gac6cfae7e3b03fe0d5928446da385874d" kindref="member">mcan_timeout_counter_config_t</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="structmcan__error__count__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__error__count__struct" kindref="compound">mcan_error_count_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="725" refid="structmcan__error__count__struct_1a4c1a56b44db6182bdfdc3d2cee902c69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__error__count__struct_1a4c1a56b44db6182bdfdc3d2cee902c69" kindref="member">transmit_error_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="726" refid="structmcan__error__count__struct_1a7f53111e05de5e21c0953cd097ab0ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__error__count__struct_1a7f53111e05de5e21c0953cd097ab0ed3" kindref="member">receive_error_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="727" refid="structmcan__error__count__struct_1a375eebdc23cd757ce1400eadfdadeb1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__error__count__struct_1a375eebdc23cd757ce1400eadfdadeb1d" kindref="member">receive_error_passive</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="728" refid="structmcan__error__count__struct_1a750997a872f487956feb80c33e49c5c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__error__count__struct_1a750997a872f487956feb80c33e49c5c4" kindref="member">can_error_logging_count</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="729" refid="group__mcan__interface_1ga588f6915bc386f4e72f6598c0ffbd35e" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga588f6915bc386f4e72f6598c0ffbd35e" kindref="member">mcan_error_count_t</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="structmcan__protocol__status" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__protocol__status" kindref="compound">mcan_protocol_status</ref><sp/>{</highlight></codeline>
<codeline lineno="735" refid="structmcan__protocol__status_1aa7de7b8c557b554019538a92662a7573" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__protocol__status_1aa7de7b8c557b554019538a92662a7573" kindref="member">tdc_val</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736" refid="structmcan__protocol__status_1a21206f9bbd6630fff645123e2dca0592" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gae4d89731ae05f2ed5098ac4ac316444b" kindref="member">mcan_activity_state_t</ref><sp/><ref refid="structmcan__protocol__status_1a21206f9bbd6630fff645123e2dca0592" kindref="member">activity</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="737" refid="structmcan__protocol__status_1ab5b29cd3148e7f51b46e2295502ccfa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga9232568012f41109b5bd87d55b8ce333" kindref="member">mcan_last_err_code_t</ref><sp/><ref refid="structmcan__protocol__status_1ab5b29cd3148e7f51b46e2295502ccfa3" kindref="member">last_error_code</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="738" refid="structmcan__protocol__status_1aa980667023922e90227ed74caf3824d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__protocol__status_1aa980667023922e90227ed74caf3824d0" kindref="member">protocol_exception_evt_occurred</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="739" refid="structmcan__protocol__status_1a2e78633ba6d12b45145dcc8ab4656ba0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__protocol__status_1a2e78633ba6d12b45145dcc8ab4656ba0" kindref="member">canfd_msg_received</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="740" refid="structmcan__protocol__status_1ab1e7c90b4ecf6d30961177d2607baaa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__protocol__status_1ab1e7c90b4ecf6d30961177d2607baaa8" kindref="member">brs_flag_set_in_last_rcv_canfd_msg</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="741" refid="structmcan__protocol__status_1a92d253a83d38c423d090c94e3054879d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__protocol__status_1a92d253a83d38c423d090c94e3054879d" kindref="member">esi_flag_set_in_last_rcv_canfd_msg</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="742" refid="structmcan__protocol__status_1a2c540ad70e01fd24242b1eb68d26b4f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__protocol__status_1a2c540ad70e01fd24242b1eb68d26b4f2" kindref="member">in_bus_off_state</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="743" refid="structmcan__protocol__status_1a8a78f6f665d05056c40d3012947e61b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__protocol__status_1a8a78f6f665d05056c40d3012947e61b1" kindref="member">in_warning_state</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="744" refid="structmcan__protocol__status_1a78b05bdbad890247af0160f8c289902e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcan__protocol__status_1a78b05bdbad890247af0160f8c289902e" kindref="member">in_error_passive_state</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="745" refid="group__mcan__interface_1gaaeb0e4456cb6de8d884b053f765d595e" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1gaaeb0e4456cb6de8d884b053f765d595e" kindref="member">mcan_protocol_status_t</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="group__mcan__interface_1ga2b6a7790d97a802c4b2911c58a5aa9c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MESSAGE_STORAGE_INDICATOR_NO_FIFO_SELECTED<sp/><sp/><sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="group__mcan__interface_1ga3f6ee940c4bf7e121b0ac3d9b08b6c24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MESSAGE_STORAGE_INDICATOR_FIFO_MESSAGE_LOST<sp/><sp/><sp/><sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="group__mcan__interface_1gaf386eb187aaea7136b8fe24b855c8d33" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MESSAGE_STORAGE_INDICATOR_RXFIFO0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="group__mcan__interface_1gaeaf7d88744475a899826d2a876432f20" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MESSAGE_STORAGE_INDICATOR_RXFIFO1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="structmcan__high__priority__message__status__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__high__priority__message__status__struct" kindref="compound">mcan_high_priority_message_status_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="759" refid="structmcan__high__priority__message__status__struct_1a20eba4ee5eb7dbf4f5c904eecf5452bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__high__priority__message__status__struct_1a20eba4ee5eb7dbf4f5c904eecf5452bc" kindref="member">filter_list_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="760" refid="structmcan__high__priority__message__status__struct_1a004eae29204ce2b828025d2d32423997" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__high__priority__message__status__struct_1a004eae29204ce2b828025d2d32423997" kindref="member">filter_index</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="761" refid="structmcan__high__priority__message__status__struct_1af25e96662b9c40702e0563eef65dc270" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__high__priority__message__status__struct_1af25e96662b9c40702e0563eef65dc270" kindref="member">message_storage_indicator</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="762" refid="structmcan__high__priority__message__status__struct_1a01313e98a7bcdb5bc1f851e20ff78fa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__high__priority__message__status__struct_1a01313e98a7bcdb5bc1f851e20ff78fa1" kindref="member">buffer_index</ref>;</highlight></codeline>
<codeline lineno="763" refid="group__mcan__interface_1ga9902f3917e2f822fe2ee082817be7853" refkind="member"><highlight class="normal">}<sp/><ref refid="group__mcan__interface_1ga9902f3917e2f822fe2ee082817be7853" kindref="member">mcan_high_priority_message_status_t</ref>;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="group__mcan__interface_1gadc5522749f4f58310b10719f1aac3b4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gadc5522749f4f58310b10719f1aac3b4d" kindref="member">mcan_enable_transmit_pause</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a8edd064bba5e6da11f466c255a36641c" kindref="member">MCAN_CCCR_TXP_MASK</ref>;</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="group__mcan__interface_1ga9a99209352b0b3d90d1c4bcd9f6eec7d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga9a99209352b0b3d90d1c4bcd9f6eec7d" kindref="member">mcan_disable_transmit_pause</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a8edd064bba5e6da11f466c255a36641c" kindref="member">MCAN_CCCR_TXP_MASK</ref>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="group__mcan__interface_1gabc27a4a83fc3b300f0b761748912371c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gabc27a4a83fc3b300f0b761748912371c" kindref="member">mcan_enable_edge_filtering</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ad71963c566871490c2439a9f0d1a4d69" kindref="member">MCAN_CCCR_EFBI_MASK</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="group__mcan__interface_1ga3c2a95a526b88cd49f5a9a2ed832c0c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga3c2a95a526b88cd49f5a9a2ed832c0c7" kindref="member">mcan_disable_edge_filtering</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ad71963c566871490c2439a9f0d1a4d69" kindref="member">MCAN_CCCR_EFBI_MASK</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="group__mcan__interface_1gaab3587f3f536a0515f44f827b9ea0eab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaab3587f3f536a0515f44f827b9ea0eab" kindref="member">mcan_enable_protocol_exception_handling</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ace113a0e6c40d71818334c5903ddfbf4" kindref="member">MCAN_CCCR_PXHD_MASK</ref>;</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="group__mcan__interface_1ga124a6e1cd25af3e6b8e387e642bd5fc0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga124a6e1cd25af3e6b8e387e642bd5fc0" kindref="member">mcan_disable_protocol_exception_handling</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ace113a0e6c40d71818334c5903ddfbf4" kindref="member">MCAN_CCCR_PXHD_MASK</ref>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="823" refid="group__mcan__interface_1ga4d47df858ffc41d108b0b0ae351f69b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga4d47df858ffc41d108b0b0ae351f69b6" kindref="member">mcan_enable_wide_message_marker</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a473bd737e56ae40d0f36655e7e1e0455" kindref="member">MCAN_CCCR_WMM_MASK</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="832" refid="group__mcan__interface_1ga34fbc8d20ac4d1a9ecac262331c06738" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga34fbc8d20ac4d1a9ecac262331c06738" kindref="member">mcan_disable_wide_message_marker</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a473bd737e56ae40d0f36655e7e1e0455" kindref="member">MCAN_CCCR_WMM_MASK</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="group__mcan__interface_1gabac42490326c60b168df4a42b771721d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gabac42490326c60b168df4a42b771721d" kindref="member">mcan_enable_tsu</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a0a757018495b07b06af77a0736315f2c" kindref="member">MCAN_CCCR_UTSU_MASK</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="group__mcan__interface_1ga23cecdb193dc4749f49e82f3cf3cba81" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga23cecdb193dc4749f49e82f3cf3cba81" kindref="member">mcan_disable_tsu</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a0a757018495b07b06af77a0736315f2c" kindref="member">MCAN_CCCR_UTSU_MASK</ref>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="group__mcan__interface_1gac8d9f1cfdba479e7576f34c9204a9781" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gac8d9f1cfdba479e7576f34c9204a9781" kindref="member">mcan_is_tsu_used</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a0a757018495b07b06af77a0736315f2c" kindref="member">MCAN_CCCR_UTSU_MASK</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="group__mcan__interface_1gaf5545f4ddc57341ba5252afc16adf032" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaf5545f4ddc57341ba5252afc16adf032" kindref="member">mcan_is_64bit_tsu_timestamp_used</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a7f3cc4b797c3ef198baa2ddf7f0c4085" kindref="member">TSCFG</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a6cadd05059091e6e92321af663ffac8a" kindref="member">MCAN_TSCFG_EN64_MASK</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="group__mcan__interface_1gaa965a4936b7b5333633782f4239a37ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaa965a4936b7b5333633782f4239a37ce" kindref="member">mcan_enable_bitrate_switch</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a82a1fe2e3985b9c79444b126aacfaffb" kindref="member">MCAN_CCCR_BRSE_MASK</ref>;</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="890" refid="group__mcan__interface_1ga9d1019b66d060aeccdaa1714551de0c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga9d1019b66d060aeccdaa1714551de0c5" kindref="member">mcan_disable_bitrate_switch</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a82a1fe2e3985b9c79444b126aacfaffb" kindref="member">MCAN_CCCR_BRSE_MASK</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="group__mcan__interface_1ga2967b22a1d2490b75722328eefc28eea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga2967b22a1d2490b75722328eefc28eea" kindref="member">mcan_enable_auto_retransmission</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a3b2753c8a97b0b3db222d93ba54d9878" kindref="member">MCAN_CCCR_DAR_MASK</ref>;</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="908" refid="group__mcan__interface_1ga22cc71d5036abfb52afdbd7add79a979" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga22cc71d5036abfb52afdbd7add79a979" kindref="member">mcan_disable_auto_retransmission</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a3b2753c8a97b0b3db222d93ba54d9878" kindref="member">MCAN_CCCR_DAR_MASK</ref>;</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="917" refid="group__mcan__interface_1ga4f553640888b2ac47da9837dc69aedc9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga4f553640888b2ac47da9837dc69aedc9" kindref="member">mcan_enable_bus_monitoring_mode</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af6633cf42e6274840ee2abe1a7bbc681" kindref="member">MCAN_CCCR_MON_MASK</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="926" refid="group__mcan__interface_1ga16a75578f9b90d5ebc16e4cf5346e62f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga16a75578f9b90d5ebc16e4cf5346e62f" kindref="member">mcan_stop_clock</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1abfdc706850cb91f40929ab048ab96c98" kindref="member">MCAN_CCCR_CSR_MASK</ref>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="935" refid="group__mcan__interface_1ga10f768fae4615fb09ebed09994b70eb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga10f768fae4615fb09ebed09994b70eb8" kindref="member">mcan_enable_clock</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1abfdc706850cb91f40929ab048ab96c98" kindref="member">MCAN_CCCR_CSR_MASK</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940" refid="group__mcan__interface_1gaf873e91eadc315ac5e98c01593fc6535" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaf873e91eadc315ac5e98c01593fc6535" kindref="member">mcan_is_clock_enabled</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1abfdc706850cb91f40929ab048ab96c98" kindref="member">MCAN_CCCR_CSR_MASK</ref>)<sp/>==<sp/>0UL);</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="949" refid="group__mcan__interface_1ga6ce54e22321c1482684572e7af238dfe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga6ce54e22321c1482684572e7af238dfe" kindref="member">mcan_disable_bus_monitoring_mode</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="950"><highlight class="normal">{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af6633cf42e6274840ee2abe1a7bbc681" kindref="member">MCAN_CCCR_MON_MASK</ref>;</highlight></codeline>
<codeline lineno="952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="group__mcan__interface_1ga6330a40a4171098e8ff53cde3c04bc45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga6330a40a4171098e8ff53cde3c04bc45" kindref="member">mcan_is_clock_stopped</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ae7b0e022d974646c8285d9fe545f0731" kindref="member">MCAN_CCCR_CSA_MASK</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="group__mcan__interface_1gaad52c959fc673443433511326b2b8058" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaad52c959fc673443433511326b2b8058" kindref="member">mcan_enable_restricted_operation_mode</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa254bf638b25cd87ddcd831bd2df7338" kindref="member">MCAN_CCCR_ASM_MASK</ref>;</highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="group__mcan__interface_1ga6086b53ff85278079a597d8893379a33" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga6086b53ff85278079a597d8893379a33" kindref="member">mcan_disable_restricted_operation_mode</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa254bf638b25cd87ddcd831bd2df7338" kindref="member">MCAN_CCCR_ASM_MASK</ref>;</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="985" refid="group__mcan__interface_1ga5bc433d62c8dc50e944d4bcff2475160" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga5bc433d62c8dc50e944d4bcff2475160" kindref="member">mcan_enable_write_to_prot_config_registers</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a5e4a9f93b78310e75e3d3f46e26ffd2a" kindref="member">MCAN_CCCR_CCE_MASK</ref>;</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="994" refid="group__mcan__interface_1ga634b8b860bf967a92445b2f7ea71d356" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga634b8b860bf967a92445b2f7ea71d356" kindref="member">mcan_disable_write_to_prot_config_registers</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a5e4a9f93b78310e75e3d3f46e26ffd2a" kindref="member">MCAN_CCCR_CCE_MASK</ref>;</highlight></codeline>
<codeline lineno="997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004" refid="group__mcan__interface_1ga4a279c19515a1fa3060824df604bddeb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__mcan__interface_1ga4a279c19515a1fa3060824df604bddeb" kindref="member">mcan_get_timestamp_counter_value</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a5bf8ec86244478ae6c73706fca854de6" kindref="member">TSCV</ref>;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013" refid="group__mcan__interface_1ga325ecf9d01fc40fe16c6a940af55b174" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga325ecf9d01fc40fe16c6a940af55b174" kindref="member">mcan_enter_init_mode</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a1d0d1569f8dd443546ec8c6954ac38ff" kindref="member">MCAN_CCCR_INIT_MASK</ref>;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022" refid="group__mcan__interface_1ga0ca94857d4b995c4e78dec5b963cd60a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga0ca94857d4b995c4e78dec5b963cd60a" kindref="member">mcan_enter_normal_mode</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a1d0d1569f8dd443546ec8c6954ac38ff" kindref="member">MCAN_CCCR_INIT_MASK</ref>;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032" refid="group__mcan__interface_1ga87bcf06476b938390e291a4d2c4b536b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__mcan__interface_1ga87bcf06476b938390e291a4d2c4b536b" kindref="member">mcan_get_timeout_counter_value</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a37fe7d61e687c10bf88af9f120079ad1" kindref="member">TOCV</ref>;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042" refid="group__mcan__interface_1ga26f6ba62263e6882cd6edddc6a80e92e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga26f6ba62263e6882cd6edddc6a80e92e" kindref="member">mcan_reset_timeout_counter_value</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>&amp;ptr-&gt;<ref refid="structMCAN__Type_1a37fe7d61e687c10bf88af9f120079ad1" kindref="member">TOCV</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052" refid="group__mcan__interface_1gaf29bd2344e3e7579431f69224b11f887" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaf29bd2344e3e7579431f69224b11f887" kindref="member">mcan_get_error_counter</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__error__count__struct" kindref="compound">mcan_error_count_t</ref><sp/>*err_cnt)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ecr<sp/>=<sp/>ptr-&gt;<ref refid="structMCAN__Type_1a6123313259c399727c5297a2eb5561fd" kindref="member">ECR</ref>;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>err_cnt-&gt;<ref refid="structmcan__error__count__struct_1a4c1a56b44db6182bdfdc3d2cee902c69" kindref="member">transmit_error_count</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aaeebe54b439ff540f1cf5158790b2077" kindref="member">MCAN_ECR_TEC_GET</ref>(ecr);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>err_cnt-&gt;<ref refid="structmcan__error__count__struct_1a7f53111e05de5e21c0953cd097ab0ed3" kindref="member">receive_error_count</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a8c05581d7f258cbcf95abca8c14df3cf" kindref="member">MCAN_ECR_REC_GET</ref>(ecr);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>err_cnt-&gt;<ref refid="structmcan__error__count__struct_1a375eebdc23cd757ce1400eadfdadeb1d" kindref="member">receive_error_passive</ref><sp/>=<sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aaf28cf5c0c42ede8dc3fac0f8ff5367c" kindref="member">MCAN_ECR_RP_GET</ref>(ecr)<sp/>==<sp/>1U);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>err_cnt-&gt;<ref refid="structmcan__error__count__struct_1a750997a872f487956feb80c33e49c5c4" kindref="member">can_error_logging_count</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af2f4bb3e6fed3732c46172f000ac0d96" kindref="member">MCAN_ECR_CEL_GET</ref>(ecr);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066" refid="group__mcan__interface_1ga6e5aefa581d9dc193930efec620fcb01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__mcan__interface_1ga6e5aefa581d9dc193930efec620fcb01" kindref="member">mcan_get_last_error_code</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a97c8e14d6029619956004a6a5f3e16a3" kindref="member">MCAN_PSR_LEC_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076" refid="group__mcan__interface_1gaa2712fb436e88842022bbd3840f0dbd5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__mcan__interface_1gaa2712fb436e88842022bbd3840f0dbd5" kindref="member">mcan_get_last_data_error_code</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab188fce09c14a1d6d79e6dd8667a359c" kindref="member">MCAN_PSR_DLEC_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086" refid="group__mcan__interface_1ga1552da9d1c902ac3ae1969c9b13d709c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__mcan__interface_1ga1552da9d1c902ac3ae1969c9b13d709c" kindref="member">mcan_get_activity</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aaba1803d7dbdbf0c713b2dfc26c54664" kindref="member">MCAN_PSR_ACT_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096" refid="group__mcan__interface_1gac45fb2f48927b5f16accca88bcab0759" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gac45fb2f48927b5f16accca88bcab0759" kindref="member">mcan_is_in_err_passive_state</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a6c76a134b3ffc1d23a3d89adaf1c9228" kindref="member">MCAN_PSR_EP_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>)<sp/>==<sp/>1U);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106" refid="group__mcan__interface_1gad90900cb18ef21e601d49aece3c8eb21" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gad90900cb18ef21e601d49aece3c8eb21" kindref="member">mcan_is_in_error_warning_state</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa5b87698b2d440abfa446d7a14a7c446" kindref="member">MCAN_PSR_EW_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>)<sp/>==<sp/>1U);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116" refid="group__mcan__interface_1gad71c809c5a0b8c8a32fda10e2b91899f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gad71c809c5a0b8c8a32fda10e2b91899f" kindref="member">mcan_is_in_busoff_state</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a849ea04223890d146a8e273ee7dda741" kindref="member">MCAN_PSR_BO_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>)<sp/>==<sp/>1U);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127" refid="group__mcan__interface_1gaaf5fef110c156ab87b4fd390caf8d3ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__mcan__interface_1gaaf5fef110c156ab87b4fd390caf8d3ae" kindref="member">mcan_get_data_phase_last_error_code</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab188fce09c14a1d6d79e6dd8667a359c" kindref="member">MCAN_PSR_DLEC_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137" refid="group__mcan__interface_1gab065e702177e597f63548738b7da2156" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gab065e702177e597f63548738b7da2156" kindref="member">mcan_is_error_state_indicator_flag_set_in_last_received_canfd_msg</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a66dd7e96dff754ef66716eecea53631a" kindref="member">MCAN_PSR_RESI_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>)<sp/>==<sp/>1U);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147" refid="group__mcan__interface_1gaae6fdbf33afba93a80db0b01da198916" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaae6fdbf33afba93a80db0b01da198916" kindref="member">mcan_is_bitrate_switch_flag_set_in_last_received_canfd_msg</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1afa9733fca22b9d74223f50f481055a64" kindref="member">MCAN_PSR_RBRS_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>)<sp/>==<sp/>1U);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157" refid="group__mcan__interface_1ga73cc210939b152ea0ab979cd2f4066b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga73cc210939b152ea0ab979cd2f4066b6" kindref="member">mcan_is_canfd_message_received</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a7899aedccf315a2670ca75222bea39a7" kindref="member">MCAN_PSR_RFDF_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>)<sp/>==<sp/>1U);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167" refid="group__mcan__interface_1ga992e0b4cc5946d8e06344d5fa67cf2eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga992e0b4cc5946d8e06344d5fa67cf2eb" kindref="member">mcan_is_protocol_exception_event_occurred</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab0fa4d34c9bed08e1b515e337e1c9f56" kindref="member">MCAN_PSR_PXE_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>)<sp/>==<sp/>1U);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177" refid="group__mcan__interface_1gab8e15422370adb67482974fc019291a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__mcan__interface_1gab8e15422370adb67482974fc019291a6" kindref="member">mcan_get_transmitter_delay_compensation_value</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a2c08d4b6119aa5188fd68da952f27238" kindref="member">MCAN_PSR_TDCV_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187" refid="group__mcan__interface_1gad9db161dc974f58cbf64abe43814829a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__mcan__interface_1gad9db161dc974f58cbf64abe43814829a" kindref="member">mcan_get_interrupt_flags</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a10f96a318842554cd3aecef6b515996b" kindref="member">IR</ref>;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197" refid="group__mcan__interface_1ga2a7398d932d483877b7dc722f42ca054" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga2a7398d932d483877b7dc722f42ca054" kindref="member">mcan_clear_interrupt_flags</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a10f96a318842554cd3aecef6b515996b" kindref="member">IR</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207" refid="group__mcan__interface_1gae3fd9674f06ba1f031b514690a60c31f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gae3fd9674f06ba1f031b514690a60c31f" kindref="member">mcan_enable_interrupts</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1abb585d680f6e95ef73486ec6a7a8f2b7" kindref="member">ILS</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a5cb716f3d074dd9767b8aa0d86c1d695" kindref="member">IE</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a8d1257138c39b1e03d5cb0d1a09c95f5" kindref="member">ILE</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="group__mcan__interface_1ga62c209b44935212828dc655bbce00983" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga62c209b44935212828dc655bbce00983" kindref="member">mcan_enable_txbuf_interrupt</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a07e6c654d523d5bd8fa43f60336028ea" kindref="member">TXBTIE</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231" refid="group__mcan__interface_1ga84d69e031203d82a1b2a65b635ce7246" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga84d69e031203d82a1b2a65b635ce7246" kindref="member">mcan_disable_txbuf_interrupt</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a07e6c654d523d5bd8fa43f60336028ea" kindref="member">TXBTIE</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241" refid="group__mcan__interface_1ga38c3a8ac8acebad5458fada97d626c7a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga38c3a8ac8acebad5458fada97d626c7a" kindref="member">mcan_disable_interrupts</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a5cb716f3d074dd9767b8aa0d86c1d695" kindref="member">IE</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251" refid="group__mcan__interface_1ga163fd0dc5861518a6986d15b02f33dbe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga163fd0dc5861518a6986d15b02f33dbe" kindref="member">mcan_enable_txbuf_transmission_interrupt</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a07e6c654d523d5bd8fa43f60336028ea" kindref="member">TXBTIE</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261" refid="group__mcan__interface_1gacaa7a89e8f63e90bc09d1260105325ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gacaa7a89e8f63e90bc09d1260105325ec" kindref="member">mcan_disable_txbuf_transmission_interrupt</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a07e6c654d523d5bd8fa43f60336028ea" kindref="member">TXBTIE</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271" refid="group__mcan__interface_1ga774ee5999a30150b91fa421f1a646957" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga774ee5999a30150b91fa421f1a646957" kindref="member">mcan_enable_txbuf_cancel_finish_interrupt</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a7e284287b66eb85f0d35cb4065f8dbef" kindref="member">TXBCIE</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281" refid="group__mcan__interface_1ga4647f5a17ab621d68dec223fd58e9d4a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga4647f5a17ab621d68dec223fd58e9d4a" kindref="member">mcan_disable_txbuf_cancel_finish_interrupt</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a7e284287b66eb85f0d35cb4065f8dbef" kindref="member">TXBCIE</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292" refid="group__mcan__interface_1ga26fc01c6f4d4e1d3b824b3a86204a228" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga26fc01c6f4d4e1d3b824b3a86204a228" kindref="member">mcan_interrupt_line_select</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask,<sp/>uint8_t<sp/>line_index)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_index<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1abb585d680f6e95ef73486ec6a7a8f2b7" kindref="member">ILS</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1abb585d680f6e95ef73486ec6a7a8f2b7" kindref="member">ILS</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a8d1257138c39b1e03d5cb0d1a09c95f5" kindref="member">ILE</ref><sp/>=<sp/>(1UL<sp/>&lt;&lt;<sp/>line_index);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308" refid="group__mcan__interface_1gad6e0b24e44956c6428a30be89ad2a25e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gad6e0b24e44956c6428a30be89ad2a25e" kindref="member">mcan_is_transmit_request_pending</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1afd6dab70054985a3b880f1b2319b465c" kindref="member">TXBRP</ref><sp/>&amp;<sp/>((1UL<sp/>&lt;&lt;<sp/>index)))<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318" refid="group__mcan__interface_1ga575a48ca07bcf3727e0d20812167b930" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga575a48ca07bcf3727e0d20812167b930" kindref="member">mcan_is_txfifo_full</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a8c8c8ed50ee45d24fc6612245f80364d" kindref="member">TXFQS</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa8edb040b129ab181d13b56f20d90692" kindref="member">MCAN_TXFQS_TFQF_MASK</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328" refid="group__mcan__interface_1ga58f207d21722e47fcf3cb69b1014cdd4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__mcan__interface_1ga58f207d21722e47fcf3cb69b1014cdd4" kindref="member">mcan_get_txfifo_put_index</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a80b268cdd5669602aa7b9d0ac2970674" kindref="member">MCAN_TXFQS_TFQPI_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a8c8c8ed50ee45d24fc6612245f80364d" kindref="member">TXFQS</ref>);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338" refid="group__mcan__interface_1ga701847488fce9bca3f06a7dab84f4cf5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga701847488fce9bca3f06a7dab84f4cf5" kindref="member">mcan_send_add_request</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a90246ba9f268ad1c2bffd63c466d6809" kindref="member">TXBAR</ref><sp/>=<sp/>(1UL<sp/>&lt;&lt;<sp/>index);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349" refid="group__mcan__interface_1ga0cb7ab368c91f0fc810ecd3e3bb9fb77" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga0cb7ab368c91f0fc810ecd3e3bb9fb77" kindref="member">mcan_send_add_multiple_requests</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index_bitmask)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a90246ba9f268ad1c2bffd63c466d6809" kindref="member">TXBAR</ref><sp/>=<sp/>index_bitmask;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359" refid="group__mcan__interface_1ga140d2dd1177e0dd914498aac97175478" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga140d2dd1177e0dd914498aac97175478" kindref="member">mcan_cancel_tx_buf_send_request</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a4b3c3b5a3c7422277b83bf23c950c182" kindref="member">TXBCR</ref><sp/>=<sp/>(1UL<sp/>&lt;&lt;<sp/>index);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370" refid="group__mcan__interface_1ga18717f3b92e0f81dfca18aa8869a4203" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga18717f3b92e0f81dfca18aa8869a4203" kindref="member">mcan_is_transmit_occurred</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a75e2197f2d5bac5d3fed24308effd697" kindref="member">TXBTO</ref><sp/>&amp;<sp/>(1UL<sp/>&lt;&lt;<sp/>index))<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381" refid="group__mcan__interface_1ga215634d628791ef221f6750a7018e70b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga215634d628791ef221f6750a7018e70b" kindref="member">mcan_is_rxbuf_data_available</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>32U)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(ptr-&gt;<ref refid="structMCAN__Type_1af7c76f1e4a3e8f2727be429baebacfe6" kindref="member">NDAT1</ref><sp/>&amp;<sp/>(1UL<sp/>&lt;&lt;<sp/>index))<sp/>!=<sp/>0U;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>64U)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(ptr-&gt;<ref refid="structMCAN__Type_1adf3c299ede0774120fe3d79194a8953a" kindref="member">NDAT2</ref><sp/>&amp;<sp/>(1UL<sp/>&lt;&lt;<sp/>(index<sp/>-<sp/>32U)))<sp/>!=<sp/>0U;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399" refid="group__mcan__interface_1ga284cd07adeb5b341451a872e217f646a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga284cd07adeb5b341451a872e217f646a" kindref="member">mcan_clear_rxbuf_data_available_flag</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>32U)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1af7c76f1e4a3e8f2727be429baebacfe6" kindref="member">NDAT1</ref><sp/>=<sp/>(1UL<sp/>&lt;&lt;<sp/>index);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>64U)<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1adf3c299ede0774120fe3d79194a8953a" kindref="member">NDAT2</ref><sp/>=<sp/>(1UL<sp/>&lt;&lt;<sp/>(index<sp/>-<sp/>32U));</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416" refid="group__mcan__interface_1gaf19a405afbe4c5295f58e9c7154ed22f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaf19a405afbe4c5295f58e9c7154ed22f" kindref="member">mcan_is_interrupt_flag_set</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a10f96a318842554cd3aecef6b515996b" kindref="member">IR</ref><sp/>&amp;<sp/>mask)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429" refid="group__mcan__interface_1gac03cad6d1197c3d5b2520eee0a133f79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gac03cad6d1197c3d5b2520eee0a133f79" kindref="member">mcan_is_tsu_timestamp_available</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_available<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/><ref refid="group__common__interface_1ga25f003de16c08a4888b69f619d70f427" kindref="member">ARRAY_SIZE</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a91fed3f21b465cf3120417fe1a69a598" kindref="member">TS_SEL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_available<sp/>=<sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a19c713cdf6e7329d8938c2b7f2c8b732" kindref="member">TSS1</ref><sp/>&amp;<sp/>(1UL<sp/>&lt;&lt;<sp/>index))<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_available;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal">uint32_t<sp/><ref refid="group__mcan__interface_1gaa7912db5a239c1df59490045feba3319" kindref="member">mcan_read_32bit_tsu_timestamp</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal">uint64_t<sp/><ref refid="group__mcan__interface_1gaeb9af0d86351870f149ac665af7d3e97" kindref="member">mcan_read_64bit_tsu_timestamp</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gada13053691ef2263116896520fde6518" kindref="member">mcan_get_high_priority_message_status</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__high__priority__message__status__struct" kindref="compound">mcan_high_priority_message_status_t</ref><sp/>*status);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gadc564b2fcb5eccf11bdaf320f00329e1" kindref="member">mcan_get_default_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__config__struct" kindref="compound">mcan_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal">uint8_t<sp/><ref refid="group__mcan__interface_1ga0d17d2c373f727ac4dd4f8318a9ef1ac" kindref="member">mcan_get_message_size_from_dlc</ref>(uint8_t<sp/>dlc);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal">uint8_t<sp/><ref refid="group__mcan__interface_1ga9b6267f7692c9e6fb6d3ff46def5e505" kindref="member">mcan_get_data_field_size</ref>(uint8_t<sp/>data_field_size_option);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga7b20defc9668892b847e4ce6d34b5378" kindref="member">mcan_get_default_ram_flexible_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__ram__flexible__config__struct" kindref="compound">mcan_ram_flexible_config_t</ref><sp/>*ram_config,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_canfd);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga74db618200ed3aff26f33ec8a5a866fd" kindref="member">mcan_get_default_ram_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_t</ref><sp/>*simple_config,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_canfd);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gabfdfeceaa07dd86c05aaf08ecd4f5d53" kindref="member">mcan_init</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__config__struct" kindref="compound">mcan_config_t</ref><sp/>*config,<sp/>uint32_t<sp/>src_clk_freq);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaec2dd32a680959baaa299a6e2b192aa6" kindref="member">mcan_deinit</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gaa34c1ee772743eac0a49d4f06a35ac7c" kindref="member">mcan_config_ram_with_flexible_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__ram__flexible__config__struct" kindref="compound">mcan_ram_flexible_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gab8ad6b212bae07e5d39f91ea951afe1d" kindref="member">mcan_config_ram</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gafe271d717a5c5dd76933b5a978b64501" kindref="member">mcan_config_all_filters</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__all__filters__config__struct" kindref="compound">mcan_all_filters_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gad9322d36f5000f99ccfd471bb782732d" kindref="member">mcan_config_transmitter_delay_compensation</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tdc__config__t" kindref="compound">mcan_tdc_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga42b95618ae33789d7ba7259ce687cede" kindref="member">mcan_set_global_filter_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__global__filter__config__struct" kindref="compound">mcan_global_filter_config_t</ref><sp/>*filter_config);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga1de58381c613c978338219f3a2418dd9" kindref="member">mcan_set_filter_element</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__std__id__filter__elem__struct" kindref="compound">mcan_filter_elem_t</ref><sp/>*filter_elem,<sp/>uint32_t<sp/>index);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gaa00d784c51619ed23c18c481cd02d832" kindref="member">mcan_write_txbuf</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga34ad967d2654ed7e8ae292f0ede0f366" kindref="member">mcan_write_txfifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga733d69672dc906bb842443e000cd4d0c" kindref="member">mcan_read_rxbuf</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_frame);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga6b399ea25c0f023763d9e68b96c321ec" kindref="member">mcan_read_rxfifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>fifo_index,<sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_frame);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gaabf29bb4d2f272dfdf47b5b17db55260" kindref="member">mcan_read_tx_evt_fifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct" kindref="compound">mcan_tx_event_fifo_elem_t</ref><sp/>*tx_evt);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga42c8096c180aaabb0297ea064cc8c759" kindref="member">mcan_transmit_blocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga7a6b624afafa50747d7379ab61a3709f" kindref="member">mcan_request_and_fill_txfifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame,<sp/>uint32_t<sp/>*fifo_index);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gae2e8f0a4ae18e98f0179c8549734723a" kindref="member">mcan_transmit_via_txfifo_nonblocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame,<sp/>uint32_t<sp/>*fifo_index);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga62b0b399e3dbe5bf1d4f267a4b812c71" kindref="member">mcan_transmit_via_txbuf_nonblocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga565cf484bf1e734d74bb080a6ab0bff3" kindref="member">mcan_receive_from_buf_blocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_frame);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga32469e034fd973f008c57da0157b2775" kindref="member">mcan_receive_from_fifo_blocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>fifo_index,<sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_frame);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga205f6812136a27ccd7b770e4a8f10238" kindref="member">mcan_get_timestamp_from_tx_event</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionmcan__tx__event__fifo__elem__struct" kindref="compound">mcan_tx_event_fifo_elem_t</ref><sp/>*tx_evt,</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__timestamp__value__struct" kindref="compound">mcan_timestamp_value_t</ref><sp/>*timestamp);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gaae71f784ff4cc139ad5822f3ccc4d8d2" kindref="member">mcan_get_timestamp_from_received_message</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_msg,</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__timestamp__value__struct" kindref="compound">mcan_timestamp_value_t</ref><sp/>*timestamp);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga22454dabbe3fec1d195954afa5e48b7e" kindref="member">mcan_parse_protocol_status</ref>(uint32_t<sp/>psr,<sp/><ref refid="structmcan__protocol__status" kindref="compound">mcan_protocol_status_t</ref><sp/>*protocol_status);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga66b35d60c257a5170fa3e50aa5105165" kindref="member">mcan_get_protocol_status</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__protocol__status" kindref="compound">mcan_protocol_status_t</ref><sp/>*protocol_status);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_MCAN_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_mcan_drv.h"/>
  </compounddef>
</doxygen>
