<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__motor__math_8c" kind="file" language="C++">
    <compoundname>hpm_motor_math.c</compoundname>
    <includes refid="hpm__motor__math_8h" local="yes">hpm_motor_math.h</includes>
    <includes refid="hpm__math_8h" local="yes">hpm_math.h</includes>
    <incdepgraph>
      <node id="11">
        <label>riscv_dsp_distance_math.h</label>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl/common/hpm_motor_math.c</label>
        <link refid="hpm__motor__math_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>riscv_dsp_sort_math.h</label>
      </node>
      <node id="27">
        <label>riscv_nn_softmax.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>riscv_dsp_matrix_math.h</label>
      </node>
      <node id="26">
        <label>riscv_nn_pooling.h</label>
      </node>
      <node id="22">
        <label>riscv_nn_basic.h</label>
      </node>
      <node id="14">
        <label>riscv_dsp_svm_math.h</label>
      </node>
      <node id="21">
        <label>riscv_nn_activation.h</label>
      </node>
      <node id="18">
        <label>riscv_math_types.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>hpm_motor_math.h</label>
        <link refid="hpm__motor__math_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>riscv_nn_convolution.h</label>
      </node>
      <node id="25">
        <label>riscv_nn_fully_connected.h</label>
      </node>
      <node id="19">
        <label>string.h</label>
      </node>
      <node id="28">
        <label>riscv_nn_util.h</label>
      </node>
      <node id="15">
        <label>riscv_dsp_transform_math.h</label>
      </node>
      <node id="5">
        <label>hpm_math.h</label>
        <link refid="hpm__math_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>riscv_dsp_utils_math.h</label>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="9">
        <label>riscv_dsp_complex_math.h</label>
      </node>
      <node id="23">
        <label>riscv_nn_concatenation.h</label>
      </node>
      <node id="7">
        <label>riscv_dsp_statistics_math.h</label>
      </node>
      <node id="12">
        <label>riscv_dsp_filtering_math.h</label>
      </node>
      <node id="8">
        <label>riscv_dsp_basic_math.h</label>
      </node>
      <node id="20">
        <label>riscv_simd_convert.h</label>
      </node>
      <node id="10">
        <label>riscv_dsp_controller_math.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mcl__math__interface_1ga5561c5c067aa7cdc478e5a7da8410485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
        <definition>HPM_MOTOR_MATH_TYPE hpm_dsp_hw_f32_q</definition>
        <argsstring>(float from_f32)</argsstring>
        <name>hpm_dsp_hw_f32_q</name>
        <param>
          <type>float</type>
          <declname>from_f32</declname>
        </param>
        <briefdescription>
<para>Floating point to Q format conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">from_f32</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl/common/hpm_motor_math.c" line="13" column="21" bodyfile="middleware/hpm_mcl/common/hpm_motor_math.c" bodystart="13" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="group__mcl__math__interface_1ga4ea3020e13bf0936aaec780c56ee87a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float hpm_dsp_hw_q_f32</definition>
        <argsstring>(HPM_MOTOR_MATH_TYPE from_mdf)</argsstring>
        <name>hpm_dsp_hw_q_f32</name>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>from_mdf</declname>
        </param>
        <briefdescription>
<para>Q format to floating point conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">from_mdf</parametername>
</parameternamelist>
<parameterdescription>
<para>Q format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl/common/hpm_motor_math.c" line="25" column="7" bodyfile="middleware/hpm_mcl/common/hpm_motor_math.c" bodystart="25" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="group__mcl__math__interface_1ga642527e3f0767e56116fd7e1a7feb822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
        <definition>HPM_MOTOR_MATH_TYPE hpm_dsp_hw_mul_q</definition>
        <argsstring>(HPM_MOTOR_MATH_TYPE x, HPM_MOTOR_MATH_TYPE y)</argsstring>
        <name>hpm_dsp_hw_mul_q</name>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Q-format multiplication. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>x*y </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl/common/hpm_motor_math.c" line="37" column="21" bodyfile="middleware/hpm_mcl/common/hpm_motor_math.c" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="group__mcl__math__interface_1ga7b813a5ef5080c9f4f40ddf6f9a47e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
        <definition>HPM_MOTOR_MATH_TYPE hpm_dsp_hw_div_q</definition>
        <argsstring>(HPM_MOTOR_MATH_TYPE x, HPM_MOTOR_MATH_TYPE y)</argsstring>
        <name>hpm_dsp_hw_div_q</name>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Q-format division. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>x/y </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl/common/hpm_motor_math.c" line="48" column="21" bodyfile="middleware/hpm_mcl/common/hpm_motor_math.c" bodystart="48" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__mcl__math__interface_1gaa7df607df65ff667e03f64814bda79e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
        <definition>HPM_MOTOR_MATH_TYPE hpm_dsp_hw_atan_q</definition>
        <argsstring>(HPM_MOTOR_MATH_TYPE x)</argsstring>
        <name>hpm_dsp_hw_atan_q</name>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Q-format atan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>atan(x) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl/common/hpm_motor_math.c" line="59" column="21" bodyfile="middleware/hpm_mcl/common/hpm_motor_math.c" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group__mcl__math__interface_1gabcc051f8d30d8f1bee40e94c849cbe25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
        <definition>HPM_MOTOR_MATH_TYPE hpm_dsp_hw_atan2_q</definition>
        <argsstring>(HPM_MOTOR_MATH_TYPE x, HPM_MOTOR_MATH_TYPE y)</argsstring>
        <name>hpm_dsp_hw_atan2_q</name>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Q-format atan2. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>atan(x, y) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl/common/hpm_motor_math.c" line="68" column="21" bodyfile="middleware/hpm_mcl/common/hpm_motor_math.c" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__mcl__math__interface_1ga2852824a4c39ffa3815c67124c9d2a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
        <definition>HPM_MOTOR_MATH_TYPE hpm_dsp_hw_abs_q</definition>
        <argsstring>(HPM_MOTOR_MATH_TYPE x)</argsstring>
        <name>hpm_dsp_hw_abs_q</name>
        <param>
          <type><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Q-format absolute. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>|data| </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl/common/hpm_motor_math.c" line="77" column="21" bodyfile="middleware/hpm_mcl/common/hpm_motor_math.c" bodystart="77" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__motor__math_8h" kindref="compound">hpm_motor_math.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HPM_MOTOR_MATH_MOD<sp/>==<sp/>HPM_MOTOR_MATH_MOD_Q_HW)<sp/>||<sp/>(HPM_MOTOR_MATH_MOD<sp/>==<sp/>HPM_MOTOR_MATH_MOD_DSP_FP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__math_8h" kindref="compound">hpm_math.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_MOTOR_MATH_MOD<sp/>==<sp/>HPM_MOTOR_MATH_MOD_Q_HW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1ga5561c5c067aa7cdc478e5a7da8410485" kindref="member">hpm_dsp_hw_f32_q</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>from_f32)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>m_val;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>from_f321<sp/>=<sp/>from_f32;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group__utils_1gaaa78e6411115c7842b2df043321e424a" kindref="member">hpm_dsp_convert_f32_q15</ref>(&amp;from_f321,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__utils_1ga4387b63088cf9467c4e0c91896cafb27" kindref="member">hpm_dsp_convert_f32_q31</ref>(&amp;from_f321,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__mcl__math__interface_1ga4ea3020e13bf0936aaec780c56ee87a6" kindref="member">hpm_dsp_hw_q_f32</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>from_mdf)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>from_q1<sp/>=<sp/>from_mdf;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__utils_1gad35ebf4471d2f19b92c396fe1f69d395" kindref="member">hpm_dsp_convert_q15_f32</ref>(&amp;from_q1,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__utils_1ga349c51d4a58ab780a0f6f5a678e9c4a5" kindref="member">hpm_dsp_convert_q31_f32</ref>(&amp;from_q1,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1ga642527e3f0767e56116fd7e1a7feb822" kindref="member">hpm_dsp_hw_mul_q</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x,<sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>y)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>m_val;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__basic_1ga2d9efb20de5fa3cc3d0dd706de462a34" kindref="member">hpm_dsp_mul_q15</ref>(&amp;x,<sp/>&amp;y,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__basic_1ga43e73c7f252f3bd29b4cf853768b971f" kindref="member">hpm_dsp_mul_q31</ref>(&amp;x,<sp/>&amp;y,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1ga7b813a5ef5080c9f4f40ddf6f9a47e3d" kindref="member">hpm_dsp_hw_div_q</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x,<sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>y)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>m_val;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>m_val<sp/>=<sp/>((((int)x)&lt;&lt;15)/y);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__basic_1ga43e73c7f252f3bd29b4cf853768b971f" kindref="member">hpm_dsp_mul_q31</ref>(&amp;x,<sp/>&amp;y,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1gaa7df607df65ff667e03f64814bda79e1" kindref="member">hpm_dsp_hw_atan_q</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga393a80de559a7d1ee610ce5e04eb24af" kindref="member">hpm_dsp_atan_q15</ref>(x);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gac23fd38f9e6a406dbb8ac3fc479e3245" kindref="member">hpm_dsp_atan_q31</ref>(x);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1gabcc051f8d30d8f1bee40e94c849cbe25" kindref="member">hpm_dsp_hw_atan2_q</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x,<sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>y)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga908c1dc32ff4e098feb32fb3408d14b8" kindref="member">hpm_dsp_atan2_q15</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga51b478a0a928d8f7afd96f26e88e9479" kindref="member">hpm_dsp_atan2_q31</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1ga2852824a4c39ffa3815c67124c9d2a67" kindref="member">hpm_dsp_hw_abs_q</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>m_val;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__basic_1gaf4095fdc0e1f33668179cb64bd8a464e" kindref="member">hpm_dsp_abs_q15</ref>(&amp;x,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(HPM_QMATH_N<sp/>==<sp/>HPM_QMATH_MOD_Q31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__basic_1gadff053ed8cf76d03cbe619a706bb66d4" kindref="member">hpm_dsp_abs_q31</ref>(&amp;x,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>HPM_MOTOR_MATH_MOD<sp/>==<sp/>HPM_MOTOR_MATH_MOD_DSP_FP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1ga9aa5cc6962dd763d582ad905ee83cc3e" kindref="member">hpm_dsp_hw_mul_fp</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x,<sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>y)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>m_val;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__basic_1gaf38165466859c664efbcb18e1fd849b4" kindref="member">hpm_dsp_mul_f32</ref>(&amp;x,<sp/>&amp;y,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1ga9d3efa35614e24cb5468555e85cf0811" kindref="member">hpm_dsp_hw_div_fp</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x,<sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>y)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>m_val;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__basic_1gaf1878ba2a67c5407dc3c17faa4324732" kindref="member">hpm_dsp_div_f32</ref>(&amp;x,<sp/>&amp;y,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1gaf864025b63b35e9e51fd41e1151fc1da" kindref="member">hpm_dsp_hw_atan_fp</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gafe5ada05928262a89504aaee8ba417da" kindref="member">hpm_dsp_atan_f32</ref>(x);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1gab30900abbf6491cdd37f682e5aa1e746" kindref="member">hpm_dsp_hw_atan2_fp</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x,<sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>y)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga04dc117b2de11d75a69902a54e7fded3" kindref="member">hpm_dsp_atan2_f32</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/><ref refid="group__mcl__math__interface_1ga7d89ee60d228c77eb0438573237a494d" kindref="member">hpm_dsp_hw_abs_fp</ref>(<ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>x)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcl__math__interface_1ga54bf15eb67d9e80e4e6749bf0a23efba" kindref="member">HPM_MOTOR_MATH_TYPE</ref><sp/>m_val;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__basic_1gaf25b849e8b7a3b337dd91c45e40134a2" kindref="member">hpm_dsp_abs_f32</ref>(&amp;x,<sp/>&amp;m_val,<sp/>1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_val;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl/common/hpm_motor_math.c"/>
  </compounddef>
</doxygen>
