<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__hall__drv_8h" kind="file" language="C++">
    <compoundname>hpm_hall_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_hall_regs.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_hall_drv.h</label>
        <link refid="hpm__hall__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>hpm_hall_regs.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" prot="public" static="no">
        <name>HALL_EVENT_WDOG_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 31)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>wdg flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="22" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" prot="public" static="no">
        <name>HALL_EVENT_PHUPT_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>phupt flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" prot="public" static="no">
        <name>HALL_EVENT_PHPRE_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 29)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>phpre flag <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" prot="public" static="no">
        <name>HALL_EVENT_PHDLYEN_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 28)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>phdly flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" prot="public" static="no">
        <name>HALL_EVENT_U_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 23)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>u flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" prot="public" static="no">
        <name>HALL_EVENT_V_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 22)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>v flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="27" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" prot="public" static="no">
        <name>HALL_EVENT_W_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>w flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga93f692772b0ba0973a08bca8f7e7d659" prot="public" static="no">
        <name>HALL_UVW_STAT_MASK</name>
        <initializer>(<ref refid="HPM6700_2ip_2hpm__hall__regs_8h_1a1a890c32fc49aeac3f422866ff40aa46" kindref="member">HALL_COUNT_U_USTAT_MASK</ref> | <ref refid="HPM6700_2ip_2hpm__hall__regs_8h_1aa6d1e415eb5f9b8a07193edf82d10992" kindref="member">HALL_COUNT_U_VSTAT_MASK</ref> | <ref refid="HPM6700_2ip_2hpm__hall__regs_8h_1af02fe1f69c6c8aad2fffb34335da4539" kindref="member">HALL_COUNT_U_WSTAT_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga036d5d4c7154afa8c2f58eb686eb5bbb" prot="public" static="no">
        <name>HALL_U_STAT_MASK</name>
        <initializer><ref refid="HPM6700_2ip_2hpm__hall__regs_8h_1a1a890c32fc49aeac3f422866ff40aa46" kindref="member">HALL_COUNT_U_USTAT_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1gadada5339f348bbe31f286b11934b510d" prot="public" static="no">
        <name>HALL_V_STAT_MASK</name>
        <initializer><ref refid="HPM6700_2ip_2hpm__hall__regs_8h_1aa6d1e415eb5f9b8a07193edf82d10992" kindref="member">HALL_COUNT_U_VSTAT_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1gaa98f1486eda70bcd352f93c1e4ec8831" prot="public" static="no">
        <name>HALL_W_STAT_MASK</name>
        <initializer><ref refid="HPM6700_2ip_2hpm__hall__regs_8h_1af02fe1f69c6c8aad2fffb34335da4539" kindref="member">HALL_COUNT_U_WSTAT_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="32" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__hall__interface_1ga96b4ae1434d85cfa3bd1cd4ed62f5152" prot="public" static="no" strong="no">
        <type></type>
        <name>hall_count_delay_start</name>
        <enumvalue id="group__hall__interface_1gga96b4ae1434d85cfa3bd1cd4ed62f5152aa53685f5b51adfc11309a5d17adc79dc" prot="public">
          <name>hall_count_delay_start_after_uvw_toggle</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>start counting delay after u,v,w toggle </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1gga96b4ae1434d85cfa3bd1cd4ed62f5152ad428e988ac16b30c826222713e9c97c8" prot="public">
          <name>hall_count_delay_start_after_pre_trigger</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>start counting delay after pre-trigger </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>select delay start time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="38" column="1" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="group__hall__interface_1ga8864e0956d97664acd7fb70765a6991c" prot="public" static="no" strong="no">
        <type></type>
        <name>hall_rotate_direction</name>
        <enumvalue id="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991ca148d5eae0dcdbe2dce77b7a9299fb6a8" prot="public">
          <name>hall_rotate_direction_forward</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>direction forward </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991cad59ce86aed45190a6b34ad5b19f2bc0a" prot="public">
          <name>hall_rotate_direction_reversed</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>direction reversed </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>return value of motor movement direction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="47" column="1" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="group__hall__interface_1gae5193aaf9727f986d4bd48bab49a5f3d" prot="public" static="no" strong="no">
        <type></type>
        <name>hall_counter_type</name>
        <enumvalue id="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3dafc3ef6cb5fe966f45fddd9d919b9c4bf" prot="public">
          <name>hall_counter_type_w</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>type w </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da28c3f36492e8bdf2effa362a6a0583cf" prot="public">
          <name>hall_counter_type_v</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>type v </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da0d59f3dff9253f333c885af2a86ed0cc" prot="public">
          <name>hall_counter_type_u</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>type u </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da6d7198a0c9b003799d43601be0a19888" prot="public">
          <name>hall_counter_type_timer</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>type timer </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>counter type config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="56" column="1" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="56" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__hall__interface_1ga626b3ed4fcbaa878dff7b26dfa212c5f" prot="public" static="no">
        <type>enum <ref refid="group__hall__interface_1ga96b4ae1434d85cfa3bd1cd4ed62f5152" kindref="member">hall_count_delay_start</ref></type>
        <definition>typedef enum hall_count_delay_start hall_count_delay_start_t</definition>
        <argsstring></argsstring>
        <name>hall_count_delay_start_t</name>
        <briefdescription>
<para>select delay start time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="41" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hall__interface_1ga4df0b14a598ca2e88efd2615dd418b48" prot="public" static="no">
        <type>enum <ref refid="group__hall__interface_1ga8864e0956d97664acd7fb70765a6991c" kindref="member">hall_rotate_direction</ref></type>
        <definition>typedef enum hall_rotate_direction hall_rotate_direction_t</definition>
        <argsstring></argsstring>
        <name>hall_rotate_direction_t</name>
        <briefdescription>
<para>return value of motor movement direction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="50" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" prot="public" static="no">
        <type>enum <ref refid="group__hall__interface_1gae5193aaf9727f986d4bd48bab49a5f3d" kindref="member">hall_counter_type</ref></type>
        <definition>typedef enum hall_counter_type hall_counter_type_t</definition>
        <argsstring></argsstring>
        <name>hall_counter_type_t</name>
        <briefdescription>
<para>counter type config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="61" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__hall__interface_1ga5662ce3ca3a5553ca4325d57e638b064" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_wdog_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t timeout)</argsstring>
        <name>hall_wdog_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>enable the watchdog </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>watch dog timeout value , unit is HALL system clock </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="73" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga6faabee51ade995c7fa1da32b2c2844d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_wdog_disable</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_wdog_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>disable the watchdog </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="84" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gaf11afb66fc1d0abe4c32af268a6f378e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_phase_config</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t delay_count, hall_count_delay_start_t delay_start)</argsstring>
        <name>hall_phase_config</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>delay_count</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga626b3ed4fcbaa878dff7b26dfa212c5f" kindref="member">hall_count_delay_start_t</ref></type>
          <declname>delay_start</declname>
        </param>
        <briefdescription>
<para>delay a certain number of clock cycles after receiving a trigger event </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay_count</parametername>
</parameternamelist>
<parameterdescription>
<para>delay clock cycles number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay_start</parametername>
</parameternamelist>
<parameterdescription>
<para>select the trigger moment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="96" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="96" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gad36b75f60a80c7cef30be6a001dde1c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_pre_uvw_transition_config</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t counter)</argsstring>
        <name>hall_pre_uvw_transition_config</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>early trigger configuration </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>the clock cycle number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="109" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gace7efb7f9a92d5001089a99a296eeca7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_trigger_output_event_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t event_mask)</argsstring>
        <name>hall_trigger_output_event_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>enable trigger event mask </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>event mask to be checked <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="127" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gab2a0b9d0d43394d33dc82f03e0a30e9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_trigger_output_event_disable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t event_mask)</argsstring>
        <name>hall_trigger_output_event_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>disable trigger event mask </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>event mask to bo checked <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="146" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga2492afe7c939d96d27ff3bbf7fa58f67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_load_read_trigger_event_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t event_mask)</argsstring>
        <name>hall_load_read_trigger_event_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>enable hardware read event </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>read registers flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="165" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gad9bcb93a81686bb4e45e55bf526a1713" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_load_read_trigger_event_disable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t event_mask)</argsstring>
        <name>hall_load_read_trigger_event_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>disable hardware read event </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>read registers flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="184" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga4898af7ba422350df19377f1d22119f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_clear_status</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_clear_status</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>clear status register </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="203" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga12226ff72d093e5cb51a7ca1dd346545" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_status</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_status</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get status register </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>uint32_t</parametername>
</parameternamelist>
<parameterdescription>
<para>value: </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_WDOG_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if watchdog counter timeout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_PHUPT_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if U/V/W Flip any input signal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_PHPRE_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if early trigger events occur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_PHDLYEN_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if time delay events occur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_U_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if U signal flip </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_V_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if V signal flip </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_W_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if W signal flip </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="221" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga102d88e245afc1c926571913c64b3d9d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_irq_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_irq_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>enable irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="239" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga7ba909dbf190bcdb4b8dccafd7fc29a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_irq_disable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_irq_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>disable irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="257" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gae7a747c2853c28cfbec329c9951ff520" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_dma_request_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_dma_request_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>enable dma request </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="275" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga56e7dd4a233060161e716ef0bd132247" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_dma_request_disable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_dma_request_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>disable dma request </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="293" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga82d2c0f2320adf27477a0ec6e6b59f31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__hall__interface_1ga4df0b14a598ca2e88efd2615dd418b48" kindref="member">hall_rotate_direction_t</ref></type>
        <definition>static hall_rotate_direction_t hall_get_rotate_direction</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_rotate_direction</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get rotate direction </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>hall_rotate_direction_t</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="304" column="39" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga4eeaf6172b2849f65344d97e83dc39ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_current_uvw_stat</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_current_uvw_stat</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get three bits indicate UVW state </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>three</parametername>
</parameternamelist>
<parameterdescription>
<para>bits UVW state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="315" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga325b2bafa4034ed5a104aa1824ece038" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_current_count</definition>
        <argsstring>(HALL_Type *hall_x, hall_counter_type_t type)</argsstring>
        <name>hall_get_current_count</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get current count U or V or W </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="327" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga3d0d77227a42594ca98d822d5c953491" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_count_on_read_event</definition>
        <argsstring>(HALL_Type *hall_x, hall_counter_type_t type)</argsstring>
        <name>hall_get_count_on_read_event</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get count when read event generated </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>hall_counter_type_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="340" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="340" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gabdc22d43ddf46bf425453fe8e3ff919f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_count_on_snap0_event</definition>
        <argsstring>(HALL_Type *hall_x, hall_counter_type_t type)</argsstring>
        <name>hall_get_count_on_snap0_event</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get count when snap0 event generated </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="353" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="353" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga6a2c8205b0abeb018f1feb3c7ee7d53f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_count_on_snap1_event</definition>
        <argsstring>(HALL_Type *hall_x, hall_counter_type_t type)</argsstring>
        <name>hall_get_count_on_snap1_event</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get count when snap1 event generated </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="366" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="366" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga73b587e91cb5a060d89987807b408224" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_u_history0</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_u_history0</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of u when u signal transition from 0 to 1 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="378" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gae4e42f2b5a622fb4f349476619e81d54" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_u_history1</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_u_history1</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of u when u signal transition from 1 to 0 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="389" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="389" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gacec58ad5241cf737107abeca961fbc4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_v_history0</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_v_history0</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of v when v signal transition from 0 to 1 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="400" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="400" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga4c3a3c811d384f288c54fdaf1a925317" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_v_history1</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_v_history1</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of v when v signal transition from 1 to 0 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="411" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="411" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga07f15ff098cd83c28c71ed3c90f1b6c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_w_history0</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_w_history0</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of w when w signal transition from 0 to 1 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="422" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="422" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga6e7a95c1360240fc1aad0cbdf9ab2fba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_w_history1</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_w_history1</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of w when w signal transition from 1 to 0 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="433" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gacbe6d5be236128942d2f6f1b241573db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_load_count_to_read_registers</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_load_count_to_read_registers</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>load ucnt, vcnt, wcnt and tmrcnt into their read registers. Hardware auto-clear; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="444" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="444" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga562d09bf49535235754d6fbc7e5eb9ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_snap_enable</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_snap_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>enable hall snap </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="454" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="454" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga1258f325a1a61d3955ab063ced367ea9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_snap_disable</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_snap_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>disable hall snap </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="464" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="464" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga13f2e8449418f17a7bce73c7b173735e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_counter_reset_assert</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_counter_reset_assert</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>reset all counter and related snapshots assert </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="474" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="474" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gaa2c3294220ae1874a7606d316950c8bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_counter_reset_release</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_counter_reset_release</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>reset all counter and related snapshots release </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="484" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="484" bodyend="487"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_HALL_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_HALL_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_hall_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_EVENT_WDOG_FLAG_MASK<sp/>(1U<sp/>&lt;&lt;<sp/>31)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_EVENT_PHUPT_FLAG_MASK<sp/>(1U<sp/>&lt;&lt;<sp/>30)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_EVENT_PHPRE_FLAG_MASK<sp/>(1U<sp/>&lt;&lt;<sp/>29)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_EVENT_PHDLYEN_FLAG_MASK<sp/>(1U<sp/>&lt;&lt;<sp/>28)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_EVENT_U_FLAG_MASK<sp/>(1U<sp/>&lt;&lt;<sp/>23)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_EVENT_V_FLAG_MASK<sp/>(1U<sp/>&lt;&lt;<sp/>22)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_EVENT_W_FLAG_MASK<sp/>(1U<sp/>&lt;&lt;<sp/>21)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__hall__interface_1ga93f692772b0ba0973a08bca8f7e7d659" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_UVW_STAT_MASK<sp/>(HALL_COUNT_U_USTAT_MASK<sp/>|<sp/>HALL_COUNT_U_VSTAT_MASK<sp/>|<sp/>HALL_COUNT_U_WSTAT_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__hall__interface_1ga036d5d4c7154afa8c2f58eb686eb5bbb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_U_STAT_MASK<sp/>HALL_COUNT_U_USTAT_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__hall__interface_1gadada5339f348bbe31f286b11934b510d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_V_STAT_MASK<sp/>HALL_COUNT_U_VSTAT_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__hall__interface_1gaa98f1486eda70bcd352f93c1e4ec8831" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALL_W_STAT_MASK<sp/>HALL_COUNT_U_WSTAT_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__hall__interface_1ga96b4ae1434d85cfa3bd1cd4ed62f5152" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga96b4ae1434d85cfa3bd1cd4ed62f5152" kindref="member">hall_count_delay_start</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="group__hall__interface_1gga96b4ae1434d85cfa3bd1cd4ed62f5152aa53685f5b51adfc11309a5d17adc79dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1gga96b4ae1434d85cfa3bd1cd4ed62f5152aa53685f5b51adfc11309a5d17adc79dc" kindref="member">hall_count_delay_start_after_uvw_toggle</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="group__hall__interface_1gga96b4ae1434d85cfa3bd1cd4ed62f5152ad428e988ac16b30c826222713e9c97c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1gga96b4ae1434d85cfa3bd1cd4ed62f5152ad428e988ac16b30c826222713e9c97c8" kindref="member">hall_count_delay_start_after_pre_trigger</ref><sp/>=<sp/>1,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="group__hall__interface_1ga626b3ed4fcbaa878dff7b26dfa212c5f" refkind="member"><highlight class="normal">}<sp/><ref refid="group__hall__interface_1ga626b3ed4fcbaa878dff7b26dfa212c5f" kindref="member">hall_count_delay_start_t</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__hall__interface_1ga8864e0956d97664acd7fb70765a6991c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga8864e0956d97664acd7fb70765a6991c" kindref="member">hall_rotate_direction</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991ca148d5eae0dcdbe2dce77b7a9299fb6a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991ca148d5eae0dcdbe2dce77b7a9299fb6a8" kindref="member">hall_rotate_direction_forward</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991cad59ce86aed45190a6b34ad5b19f2bc0a" kindref="member">hall_rotate_direction_reversed</ref><sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991cad59ce86aed45190a6b34ad5b19f2bc0a" refkind="member"><highlight class="normal">}<sp/><ref refid="group__hall__interface_1ga4df0b14a598ca2e88efd2615dd418b48" kindref="member">hall_rotate_direction_t</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__hall__interface_1gae5193aaf9727f986d4bd48bab49a5f3d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gae5193aaf9727f986d4bd48bab49a5f3d" kindref="member">hall_counter_type</ref><sp/>{</highlight></codeline>
<codeline lineno="57" refid="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3dafc3ef6cb5fe966f45fddd9d919b9c4bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3dafc3ef6cb5fe966f45fddd9d919b9c4bf" kindref="member">hall_counter_type_w</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da28c3f36492e8bdf2effa362a6a0583cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da28c3f36492e8bdf2effa362a6a0583cf" kindref="member">hall_counter_type_v</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da0d59f3dff9253f333c885af2a86ed0cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da0d59f3dff9253f333c885af2a86ed0cc" kindref="member">hall_counter_type_u</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da6d7198a0c9b003799d43601be0a19888" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da6d7198a0c9b003799d43601be0a19888" kindref="member">hall_counter_type_timer</ref><sp/>=<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" refkind="member"><highlight class="normal">}<sp/><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="group__hall__interface_1ga5662ce3ca3a5553ca4325d57e638b064" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga5662ce3ca3a5553ca4325d57e638b064" kindref="member">hall_wdog_enable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a3ade0aee874bd3671a89dfcff01731bf" kindref="member">WDGCFG</ref><sp/>=<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a622ff0dd724a573c19eebbdec606374a" kindref="member">HALL_WDGCFG_WDGTO_SET</ref>(timeout)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a645cdea9e5f72dc3fd28b214b16e2849" kindref="member">HALL_WDGCFG_WDGEN_SET</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__hall__interface_1ga6faabee51ade995c7fa1da32b2c2844d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga6faabee51ade995c7fa1da32b2c2844d" kindref="member">hall_wdog_disable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a3ade0aee874bd3671a89dfcff01731bf" kindref="member">WDGCFG</ref><sp/>=<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a645cdea9e5f72dc3fd28b214b16e2849" kindref="member">HALL_WDGCFG_WDGEN_SET</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__hall__interface_1gaf11afb66fc1d0abe4c32af268a6f378e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gaf11afb66fc1d0abe4c32af268a6f378e" kindref="member">hall_phase_config</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,<sp/>uint32_t<sp/>delay_count,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ga626b3ed4fcbaa878dff7b26dfa212c5f" kindref="member">hall_count_delay_start_t</ref><sp/>delay_start)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a186692e4c7c1d54b923fd673c18a08ee" kindref="member">PHCFG</ref><sp/>=<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a03b5352edb033f0752efd43a03b9c065" kindref="member">HALL_PHCFG_DLYSEL_SET</ref>(delay_start)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1ae8f3dcea7e8da85659c3bbae599b693c" kindref="member">HALL_PHCFG_DLYCNT_SET</ref>(delay_count);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="group__hall__interface_1gad36b75f60a80c7cef30be6a001dde1c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gad36b75f60a80c7cef30be6a001dde1c5" kindref="member">hall_pre_uvw_transition_config</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,<sp/>uint32_t<sp/>counter)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a94f2b76b0992ac67e89ff3ea6c7e0cf2" kindref="member">UVWCFG</ref><sp/>=<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a4ebfb7c8d025012a6dc0c0bf918f6231" kindref="member">HALL_UVWCFG_PRECNT_SET</ref>(counter);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__hall__interface_1gace7efb7f9a92d5001089a99a296eeca7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gace7efb7f9a92d5001089a99a296eeca7" kindref="member">hall_trigger_output_event_enable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>event_mask)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a423bb93329b13ee2a259d403354add92" kindref="member">TRGOEN</ref><sp/>=<sp/>(hall_x-&gt;<ref refid="structHALL__Type_1a423bb93329b13ee2a259d403354add92" kindref="member">TRGOEN</ref><sp/>&amp;<sp/>~event_mask)<sp/>|<sp/>event_mask;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group__hall__interface_1gab2a0b9d0d43394d33dc82f03e0a30e9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gab2a0b9d0d43394d33dc82f03e0a30e9f" kindref="member">hall_trigger_output_event_disable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>event_mask)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a423bb93329b13ee2a259d403354add92" kindref="member">TRGOEN</ref><sp/>&amp;=<sp/>~event_mask;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="group__hall__interface_1ga2492afe7c939d96d27ff3bbf7fa58f67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga2492afe7c939d96d27ff3bbf7fa58f67" kindref="member">hall_load_read_trigger_event_enable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>event_mask)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1aa931f717632ea9751a55df38068819a7" kindref="member">READEN</ref><sp/>=<sp/>(hall_x-&gt;<ref refid="structHALL__Type_1aa931f717632ea9751a55df38068819a7" kindref="member">READEN</ref><sp/>&amp;<sp/>~event_mask)<sp/>|<sp/>event_mask;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group__hall__interface_1gad9bcb93a81686bb4e45e55bf526a1713" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gad9bcb93a81686bb4e45e55bf526a1713" kindref="member">hall_load_read_trigger_event_disable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>event_mask)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1aa931f717632ea9751a55df38068819a7" kindref="member">READEN</ref><sp/>&amp;=<sp/>~event_mask;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="group__hall__interface_1ga4898af7ba422350df19377f1d22119f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga4898af7ba422350df19377f1d22119f0" kindref="member">hall_clear_status</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1abc1dea804788b5fad4ed1fad4b894d5a" kindref="member">SR</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="group__hall__interface_1ga12226ff72d093e5cb51a7ca1dd346545" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga12226ff72d093e5cb51a7ca1dd346545" kindref="member">hall_get_status</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hall_x-&gt;<ref refid="structHALL__Type_1abc1dea804788b5fad4ed1fad4b894d5a" kindref="member">SR</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="group__hall__interface_1ga102d88e245afc1c926571913c64b3d9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga102d88e245afc1c926571913c64b3d9d" kindref="member">hall_irq_enable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a135c0dfa87c4a0ccfd625303d0c10005" kindref="member">IRQEN</ref><sp/>=<sp/>(hall_x-&gt;<ref refid="structHALL__Type_1a135c0dfa87c4a0ccfd625303d0c10005" kindref="member">IRQEN</ref><sp/>&amp;<sp/>~mask)<sp/>|<sp/>mask;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="group__hall__interface_1ga7ba909dbf190bcdb4b8dccafd7fc29a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga7ba909dbf190bcdb4b8dccafd7fc29a5" kindref="member">hall_irq_disable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a135c0dfa87c4a0ccfd625303d0c10005" kindref="member">IRQEN</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="group__hall__interface_1gae7a747c2853c28cfbec329c9951ff520" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gae7a747c2853c28cfbec329c9951ff520" kindref="member">hall_dma_request_enable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a55a58d444377185f24310e77ae6ac372" kindref="member">DMAEN</ref><sp/>=<sp/>(hall_x-&gt;<ref refid="structHALL__Type_1a55a58d444377185f24310e77ae6ac372" kindref="member">DMAEN</ref><sp/>&amp;<sp/>~mask)<sp/>|<sp/>mask;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="group__hall__interface_1ga56e7dd4a233060161e716ef0bd132247" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga56e7dd4a233060161e716ef0bd132247" kindref="member">hall_dma_request_disable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a55a58d444377185f24310e77ae6ac372" kindref="member">DMAEN</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group__hall__interface_1ga82d2c0f2320adf27477a0ec6e6b59f31" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga4df0b14a598ca2e88efd2615dd418b48" kindref="member">hall_rotate_direction_t</ref><sp/><ref refid="group__hall__interface_1ga82d2c0f2320adf27477a0ec6e6b59f31" kindref="member">hall_get_rotate_direction</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__hall__interface_1ga4df0b14a598ca2e88efd2615dd418b48" kindref="member">hall_rotate_direction_t</ref>)<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1ad9b40405dae3e5574f07ada82da75cde" kindref="member">HALL_COUNT_U_DIR_GET</ref>(hall_x-&gt;<ref refid="structHALL__Type_1a018cebd53776a412982e29dfc6c93d00" kindref="member">COUNT</ref>[<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1ae05dd1496aa3cc089d54af250671708b" kindref="member">HALL_COUNT_CURRENT</ref>].<ref refid="structHALL__Type_1adefd5ecf0f495b2de7aca56cffa2bd6f" kindref="member">U</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="group__hall__interface_1ga4eeaf6172b2849f65344d97e83dc39ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga4eeaf6172b2849f65344d97e83dc39ad" kindref="member">hall_get_current_uvw_stat</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(hall_x-&gt;<ref refid="structHALL__Type_1a018cebd53776a412982e29dfc6c93d00" kindref="member">COUNT</ref>[<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1ae05dd1496aa3cc089d54af250671708b" kindref="member">HALL_COUNT_CURRENT</ref>].<ref refid="structHALL__Type_1adefd5ecf0f495b2de7aca56cffa2bd6f" kindref="member">U</ref><sp/>&amp;<sp/>(<ref refid="group__hall__interface_1ga93f692772b0ba0973a08bca8f7e7d659" kindref="member">HALL_UVW_STAT_MASK</ref>))<sp/>&gt;&gt;<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1afe6d9ea9e4f4be8626f92134738a5f74" kindref="member">HALL_COUNT_U_WSTAT_SHIFT</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group__hall__interface_1ga325b2bafa4034ed5a104aa1824ece038" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga325b2bafa4034ed5a104aa1824ece038" kindref="member">hall_get_current_count</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref><sp/>type)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(&amp;hall_x-&gt;<ref refid="structHALL__Type_1a018cebd53776a412982e29dfc6c93d00" kindref="member">COUNT</ref>[<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1ae05dd1496aa3cc089d54af250671708b" kindref="member">HALL_COUNT_CURRENT</ref>].<ref refid="structHALL__Type_1af65b0302b32410d1158e3f4e87e10a93" kindref="member">W</ref><sp/>+<sp/>type)<sp/>&amp;<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1aa72a7fc0790a33ac4132e2ea971ba076" kindref="member">HALL_COUNT_U_UCNT_MASK</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="group__hall__interface_1ga3d0d77227a42594ca98d822d5c953491" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga3d0d77227a42594ca98d822d5c953491" kindref="member">hall_get_count_on_read_event</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref><sp/>type)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(&amp;hall_x-&gt;<ref refid="structHALL__Type_1a018cebd53776a412982e29dfc6c93d00" kindref="member">COUNT</ref>[<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a3ca1b9012b3d09bff75aa20258d593c8" kindref="member">HALL_COUNT_READ</ref>].<ref refid="structHALL__Type_1af65b0302b32410d1158e3f4e87e10a93" kindref="member">W</ref><sp/>+<sp/>type);</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="group__hall__interface_1gabdc22d43ddf46bf425453fe8e3ff919f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1gabdc22d43ddf46bf425453fe8e3ff919f" kindref="member">hall_get_count_on_snap0_event</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref><sp/>type)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(&amp;hall_x-&gt;<ref refid="structHALL__Type_1a018cebd53776a412982e29dfc6c93d00" kindref="member">COUNT</ref>[<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a8d6fd7b2f419c887c3baeba73a4bd374" kindref="member">HALL_COUNT_SNAP0</ref>].<ref refid="structHALL__Type_1af65b0302b32410d1158e3f4e87e10a93" kindref="member">W</ref><sp/>+<sp/>type);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="group__hall__interface_1ga6a2c8205b0abeb018f1feb3c7ee7d53f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga6a2c8205b0abeb018f1feb3c7ee7d53f" kindref="member">hall_get_count_on_snap1_event</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref><sp/>type)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(&amp;hall_x-&gt;<ref refid="structHALL__Type_1a018cebd53776a412982e29dfc6c93d00" kindref="member">COUNT</ref>[<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1aeb5e08c8b9ddd4ddd444985cb33f3000" kindref="member">HALL_COUNT_SNAP1</ref>].<ref refid="structHALL__Type_1af65b0302b32410d1158e3f4e87e10a93" kindref="member">W</ref><sp/>+<sp/>type);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="group__hall__interface_1ga73b587e91cb5a060d89987807b408224" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga73b587e91cb5a060d89987807b408224" kindref="member">hall_get_u_history0</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a6a139884f601dc98f6f66148a55a9eee" kindref="member">HIS</ref>[0].<ref refid="structHALL__Type_1afcdb16f20e809f2e772bb58c1e93881f" kindref="member">HIS0</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="group__hall__interface_1gae4e42f2b5a622fb4f349476619e81d54" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1gae4e42f2b5a622fb4f349476619e81d54" kindref="member">hall_get_u_history1</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a6a139884f601dc98f6f66148a55a9eee" kindref="member">HIS</ref>[0].<ref refid="structHALL__Type_1a697961775b31856c7a8a0510077f9da5" kindref="member">HIS1</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="group__hall__interface_1gacec58ad5241cf737107abeca961fbc4c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1gacec58ad5241cf737107abeca961fbc4c" kindref="member">hall_get_v_history0</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a6a139884f601dc98f6f66148a55a9eee" kindref="member">HIS</ref>[1].<ref refid="structHALL__Type_1afcdb16f20e809f2e772bb58c1e93881f" kindref="member">HIS0</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="group__hall__interface_1ga4c3a3c811d384f288c54fdaf1a925317" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga4c3a3c811d384f288c54fdaf1a925317" kindref="member">hall_get_v_history1</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a6a139884f601dc98f6f66148a55a9eee" kindref="member">HIS</ref>[1].<ref refid="structHALL__Type_1a697961775b31856c7a8a0510077f9da5" kindref="member">HIS1</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="group__hall__interface_1ga07f15ff098cd83c28c71ed3c90f1b6c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga07f15ff098cd83c28c71ed3c90f1b6c3" kindref="member">hall_get_w_history0</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a6a139884f601dc98f6f66148a55a9eee" kindref="member">HIS</ref>[2].<ref refid="structHALL__Type_1afcdb16f20e809f2e772bb58c1e93881f" kindref="member">HIS0</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="group__hall__interface_1ga6e7a95c1360240fc1aad0cbdf9ab2fba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__hall__interface_1ga6e7a95c1360240fc1aad0cbdf9ab2fba" kindref="member">hall_get_w_history1</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a6a139884f601dc98f6f66148a55a9eee" kindref="member">HIS</ref>[2].<ref refid="structHALL__Type_1a697961775b31856c7a8a0510077f9da5" kindref="member">HIS1</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="group__hall__interface_1gacbe6d5be236128942d2f6f1b241573db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gacbe6d5be236128942d2f6f1b241573db" kindref="member">hall_load_count_to_read_registers</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a2dcf3e7e3b923b7c5650eb0df29d3a31" kindref="member">CR</ref><sp/>|=<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a11e70a78882912e80bf119d1997c2879" kindref="member">HALL_CR_READ_MASK</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="group__hall__interface_1ga562d09bf49535235754d6fbc7e5eb9ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga562d09bf49535235754d6fbc7e5eb9ea" kindref="member">hall_snap_enable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a2dcf3e7e3b923b7c5650eb0df29d3a31" kindref="member">CR</ref><sp/>|=<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a8f352e7f1206fd1c839c061098f27595" kindref="member">HALL_CR_SNAPEN_SET</ref>(1);</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="group__hall__interface_1ga1258f325a1a61d3955ab063ced367ea9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga1258f325a1a61d3955ab063ced367ea9" kindref="member">hall_snap_disable</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a2dcf3e7e3b923b7c5650eb0df29d3a31" kindref="member">CR</ref><sp/>&amp;=<sp/>~<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1aeae82738315effe16e020ebf15356c88" kindref="member">HALL_CR_SNAPEN_MASK</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="group__hall__interface_1ga13f2e8449418f17a7bce73c7b173735e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1ga13f2e8449418f17a7bce73c7b173735e" kindref="member">hall_counter_reset_assert</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a2dcf3e7e3b923b7c5650eb0df29d3a31" kindref="member">CR</ref><sp/>|=<sp/><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1aa0f057869cbd60d5d2bb30a8068cce59" kindref="member">HALL_CR_RSTCNT_MASK</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="group__hall__interface_1gaa2c3294220ae1874a7606d316950c8bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hall__interface_1gaa2c3294220ae1874a7606d316950c8bb" kindref="member">hall_counter_reset_release</ref>(<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*hall_x)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>hall_x-&gt;<ref refid="structHALL__Type_1a2dcf3e7e3b923b7c5650eb0df29d3a31" kindref="member">CR</ref><sp/>&amp;=<sp/>~<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1aa0f057869cbd60d5d2bb30a8068cce59" kindref="member">HALL_CR_RSTCNT_MASK</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_HALL_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_hall_drv.h"/>
  </compounddef>
</doxygen>
