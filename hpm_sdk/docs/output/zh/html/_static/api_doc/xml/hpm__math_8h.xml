<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__math_8h" kind="file" language="C++">
    <compoundname>hpm_math.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="yes">riscv_dsp_statistics_math.h</includes>
    <includes local="yes">riscv_dsp_basic_math.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="yes">riscv_dsp_complex_math.h</includes>
    <includes local="yes">riscv_dsp_controller_math.h</includes>
    <includes local="yes">riscv_dsp_distance_math.h</includes>
    <includes local="yes">riscv_dsp_filtering_math.h</includes>
    <includes local="yes">riscv_dsp_matrix_math.h</includes>
    <includes local="yes">riscv_dsp_svm_math.h</includes>
    <includes local="yes">riscv_dsp_transform_math.h</includes>
    <includes local="yes">riscv_dsp_utils_math.h</includes>
    <includes local="yes">riscv_dsp_sort_math.h</includes>
    <includes local="yes">riscv_math_types.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">riscv_simd_convert.h</includes>
    <includes local="yes">riscv_nn_activation.h</includes>
    <includes local="yes">riscv_nn_basic.h</includes>
    <includes local="yes">riscv_nn_concatenation.h</includes>
    <includes local="yes">riscv_nn_convolution.h</includes>
    <includes local="yes">riscv_nn_fully_connected.h</includes>
    <includes local="yes">riscv_nn_pooling.h</includes>
    <includes local="yes">riscv_nn_softmax.h</includes>
    <includes local="yes">riscv_nn_util.h</includes>
    <includedby refid="hpm__motor__math_8c" local="yes">middleware/hpm_mcl/common/hpm_motor_math.c</includedby>
    <incdepgraph>
      <node id="8">
        <label>riscv_dsp_distance_math.h</label>
      </node>
      <node id="14">
        <label>riscv_dsp_sort_math.h</label>
      </node>
      <node id="24">
        <label>riscv_nn_softmax.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>riscv_dsp_matrix_math.h</label>
      </node>
      <node id="23">
        <label>riscv_nn_pooling.h</label>
      </node>
      <node id="19">
        <label>riscv_nn_basic.h</label>
      </node>
      <node id="11">
        <label>riscv_dsp_svm_math.h</label>
      </node>
      <node id="18">
        <label>riscv_nn_activation.h</label>
      </node>
      <node id="15">
        <label>riscv_math_types.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="21">
        <label>riscv_nn_convolution.h</label>
      </node>
      <node id="22">
        <label>riscv_nn_fully_connected.h</label>
      </node>
      <node id="16">
        <label>string.h</label>
      </node>
      <node id="25">
        <label>riscv_nn_util.h</label>
      </node>
      <node id="12">
        <label>riscv_dsp_transform_math.h</label>
      </node>
      <node id="1">
        <label>middleware/hpm_math/hpm_math.h</label>
        <link refid="hpm__math_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>riscv_dsp_utils_math.h</label>
      </node>
      <node id="6">
        <label>riscv_dsp_complex_math.h</label>
      </node>
      <node id="20">
        <label>riscv_nn_concatenation.h</label>
      </node>
      <node id="3">
        <label>riscv_dsp_statistics_math.h</label>
      </node>
      <node id="9">
        <label>riscv_dsp_filtering_math.h</label>
      </node>
      <node id="4">
        <label>riscv_dsp_basic_math.h</label>
      </node>
      <node id="17">
        <label>riscv_simd_convert.h</label>
      </node>
      <node id="7">
        <label>riscv_dsp_controller_math.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>middleware/hpm_mcl/common/hpm_motor_math.c</label>
        <link refid="hpm__motor__math_8c"/>
      </node>
      <node id="1">
        <label>middleware/hpm_math/hpm_math.h</label>
        <link refid="hpm__math_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="hpm__math_8h_1ae61e1c7c4ee705b0d3a356e071c11bfa" prot="public" static="no">
        <name>HPM_DSP_HW_NDS32</name>
        <initializer>1 /* andes hardware dsp */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="17" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a68a1b8e76cd50ee5744e75a9107fbe02" prot="public" static="no">
        <name>HPM_MATH_DSP_STATISTICS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="28" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a8a05fc8bf400cb8b479939f78fdf7bc4" prot="public" static="no">
        <name>HPM_MATH_DSP_BASIC</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="29" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a2095cee6d7761396b6dc5799d2524618" prot="public" static="no">
        <name>HPM_MATH_DSP_COMPLEX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="30" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1af09db7a6c1c8e811664e6fe41f6a211a" prot="public" static="no">
        <name>HPM_MATH_DSP_CONTROLLER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="31" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1aabd9ab5eae8bc8792773ba762ed938b4" prot="public" static="no">
        <name>HPM_MATH_DSP_DISTANCE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="32" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1acd4a299c1ef427c19f15a798499f8038" prot="public" static="no">
        <name>HPM_MATH_DSP_FILTERING</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="33" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1aee1ddcde59419739c93d6acd634d8f0e" prot="public" static="no">
        <name>HPM_MATH_DSP_MATRIX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="34" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a2d1aa407dd2484a859a7ccec11a9f3f2" prot="public" static="no">
        <name>HPM_MATH_DSP_SVM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="35" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a197b9f9aba28074dda5f31aaf6b5ac14" prot="public" static="no">
        <name>HPM_MATH_DSP_TRANSFORM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="36" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a23ab4a5f24e816e21549da4ee2870287" prot="public" static="no">
        <name>HPM_MATH_DSP_UTILS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="37" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1af4507ff9573954cf9289691ae9dd16e8" prot="public" static="no">
        <name>HPM_MATH_DSP_SORT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="38" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1abb4788357b1476de33003ef5d8d3cca6" prot="public" static="no">
        <name>HPM_MATH_NN_ACTIVATION</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="40" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a1dc92e239f6dc4f17fb326bf4b501359" prot="public" static="no">
        <name>HPM_MATH_NN_TINYENGINE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="41" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a79e0e07205a858f5e0b10c2452b82433" prot="public" static="no">
        <name>HPM_MATH_NN_BASIC</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="42" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a4dce753dc1f669337fd097dd094bf2a0" prot="public" static="no">
        <name>HPM_MATH_NN_CONCATENATION</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="43" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1aa1409e06ba88f1b52c04943dddc470b7" prot="public" static="no">
        <name>HPM_MATH_NN_CONVOLUTION</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="44" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a85158c65cda2bebfb51bf11f0f63f886" prot="public" static="no">
        <name>HPM_MATH_NN_CONNECTED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="45" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a788c90cea2032983f1867ee47a046045" prot="public" static="no">
        <name>HPM_MATH_NN_POOLING</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="46" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a642376f7856f87e54707313c0bc8cdc7" prot="public" static="no">
        <name>HPM_MATH_NN_SOFTMAX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="47" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1ab774ac158e3fd36358249843b2fedd05" prot="public" static="no">
        <name>HPM_MATH_NN_UTIL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="48" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1a6fa559675b0d0edd25816c7fdba9bd6b" prot="public" static="no">
        <name>HPM_DSP_CORE</name>
        <initializer><ref refid="hpm__math_8h_1ae61e1c7c4ee705b0d3a356e071c11bfa" kindref="member">HPM_DSP_HW_NDS32</ref> /* DSP core selection */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="50" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1aeff525ebe9fc8b64bc1917279d501867" prot="public" static="no">
        <name>HPM_MATH_PI</name>
        <initializer>(3.1415926535898)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="52" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__math_8h_1aa5fabcdcecb0a70d61e307d867e7c5f9" prot="public" static="no">
        <name>HPM_MATH_SW_FFT_CHECKLIST</name>
        <briefdescription>
<para>HPM_MATH_SW_FFT_CHECKLIST Enabled to use table lookup to speed up the software fft, but will increase the code space,and only support sampling points 2^( 2-10). </para>
        </briefdescription>
        <detaileddescription>
<para>With this option turned off, the software fft can support as many sample points as necessary with sufficient space </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="62" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sort_1ga2953f124ae444ebdd2b2a0873ac36b7e" prot="public" static="no">
        <name>LEFT_SHIFT</name>
        <param><defname>_shift</defname></param>
        <initializer>(_shift &gt; 0 ? _shift : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6608" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sort_1ga26af54489c1401b91595bf0c92ef87c4" prot="public" static="no">
        <name>RIGHT_SHIFT</name>
        <param><defname>_shift</defname></param>
        <initializer>(_shift &gt; 0 ? 0 : -_shift)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6609" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sort_1ga468734b237f1c95a31715aa2b60a576e" prot="public" static="no">
        <name>Q31_MAX</name>
        <initializer>((q31_t)(0x7FFFFFFFL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6611" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sort_1ga1eb725c94dbb052aa24b62321be0445b" prot="public" static="no">
        <name>Q31_MIN</name>
        <initializer>((q31_t)(0x80000000L))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6612" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6612" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" prot="public" static="no" mutable="no">
        <type>void</type>
        <definition>static int32_t size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6905" column="6" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__nnactivation_1gae45c0213e0185b0a3bffc49ea24f5744" prot="public" static="no" mutable="no">
        <type>void</type>
        <definition>void slope</definition>
        <argsstring></argsstring>
        <name>slope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6905" column="11" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t wt_mat</definition>
        <argsstring></argsstring>
        <name>wt_mat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14014" column="7" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t wt_row_num</definition>
        <argsstring></argsstring>
        <name>wt_row_num</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14014" column="19" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t bias_lshift</definition>
        <argsstring></argsstring>
        <name>bias_lshift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14015" column="40" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t out_rshift</definition>
        <argsstring></argsstring>
        <name>out_rshift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14015" column="52" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t bias</definition>
        <argsstring></argsstring>
        <name>bias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14015" column="63" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t out_vec</definition>
        <argsstring></argsstring>
        <name>out_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14015" column="68" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t in_tmp_buf</definition>
        <argsstring></argsstring>
        <name>in_tmp_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14016" column="40" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14016" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__statistics_1gaa5231e130e5f754795deafec56e25387" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_max_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_max_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Maximum value of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="95" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="95" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gacbb0665a7593de08270ea9eccab657bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_max_val_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_max_val_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="107" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga159ed8e6cd120df0414b5fa6e829c7a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_max_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_max_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Maximum value of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="120" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="120" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga611fa9cbc7f42e2a0148b7c61ed875cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_max_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_max_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Maximum value of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="140" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="140" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga3f2937036a0025bb2fa2d363c77a6389" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q7_t</type>
        <definition>static q7_t hpm_dsp_max_q7</definition>
        <argsstring>(const q7_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_max_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Maximum value of the q7 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="160" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="160" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga311ad9a275e91524ec365372bfb2c773" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t hpm_dsp_max_u8</definition>
        <argsstring>(const uint8_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_max_u8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Max value of the u8 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="180" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gac531103e81b297a22dd13441d1e39389" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_min_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_min_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum value of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the minimum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="195" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="195" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gabb8d9e6c50064b492c15066a76a602d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_min_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_min_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum value of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the minimum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="215" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="215" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gab1e0842dd2cd58f0988b951c58ea634f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_min_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_min_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum value of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the minimum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="235" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="235" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga5ae8791cd11a4603a37f59ad451bc571" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q7_t</type>
        <definition>static q7_t hpm_dsp_min_q7</definition>
        <argsstring>(const q7_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_min_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum value of the q7 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the minimum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="255" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="255" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga3bb761bd913e6dc075bd0b1c4d3b9621" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t hpm_dsp_min_u8</definition>
        <argsstring>(const uint8_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_min_u8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum value of the u8 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the minimum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="275" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="275" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga92cb0c6f39cf483bea424f197b4599b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_mean_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_mean_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Mean value of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mean value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="289" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="289" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gad9d3e8da85feb2374e1a413212a0439c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_mean_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_mean_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Mean value of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mean value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is accumulated in a 32-bit accumulator in 17.15 format and then truncated to yield a result of 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="313" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="313" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga78a0833d0272f125624c3763a915dab3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_mean_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_mean_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Mean value of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mean value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is accumulated in a 64-bit accumulator in 33.31 format and then truncated to yield a result of 1.31 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="337" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="337" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga220def0434f24d8c93ed380dc517f350" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q7_t</type>
        <definition>static q7_t hpm_dsp_mean_q7</definition>
        <argsstring>(const q7_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_mean_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Mean value of the q7 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mean value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.7 format input is accumulated in a 32-bit accumulator in 25.7 format and then truncated to yield a result of 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="361" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="361" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gaf1e54e30a8cda8f173782215d32f2a53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t hpm_dsp_mean_u8</definition>
        <argsstring>(const uint8_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_mean_u8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Mean value of the u8 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mean value.</para>
</simplesect>
The 8-bit format input is accumulated in a 32-bit accumulator and then truncated to yield a result of 8-bit format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="383" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="383" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gafef8d78ee76225d59ce84840d58059bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_pwr_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_pwr_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sum of the squares of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sum of the squares value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="397" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="397" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga1d3bb430fe5beed7cd91b1f531661b1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q63_t</type>
        <definition>static q63_t hpm_dsp_pwr_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_pwr_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sum of the squares of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sum of the squares value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is multiplied yields a 2.30 format, and then added without saturation to a 64-bit accumulator in 34.30 format. Finally, the return result is in 34.30 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="422" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="422" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gac6598ce5d6c7dab08e0039c623dbf3e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q63_t</type>
        <definition>static q63_t hpm_dsp_pwr_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_pwr_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sum of the squares of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sum of the squares value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is multiplied yields a 2.62 format and this result is truncated to 2.48 format by discarding the lower 14 bits. The 2.48 result is then added without saturation to a 64-bit accumulator in 16.48 format. Finally, the return result is in 16.48 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="448" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="448" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga9a5e7cbd39cc395f87f45cd1d803706a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_pwr_q7</definition>
        <argsstring>(const q7_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_pwr_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sum of the squares of the q7 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sum of the squares value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.7 format input is multiplied yields a 2.14 format, and then added without saturation to a 32-bit accumulator in 18.14 format. Finally, the return result is in 18.14 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="473" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="473" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga98a2aaa5e26ae3bee6a8ec0216caa44f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_rms_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_rms_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>RMS of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RMS value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="493" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="493" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gabba8889a97f7b35842645dfce9b84e6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_rms_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_rms_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>RMS of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RMS value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is multiplied yields a 2.30 format, and then added without saturation to a 64-bit accumulator in 34.30 format. Finally, the added output is truncated to 34.15 format by discarding the lower 15 bits, and then saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="519" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="519" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga4a89b55b5f45979252f4f7054594cb8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_rms_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_rms_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>RMS of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RMS value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is multiplied yields a 2.62 format. In order to avoid overflows, the input signal must be scaled down by <computeroutput>log2(size)</computeroutput> bits, Finally, the 2.62 accumulator is right shifted by 31 bits to yield a 1.31 format value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="545" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="545" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga0cb7d1ca67585c071c3d2e9394feb92b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_std_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_std_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Standard deviation of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Standard deviation value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="565" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="565" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gadd20cc3afa66906b76cedc9db716b262" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_std_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_std_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Standard deviation of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Standard deviation value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is multiplied yields a 2.30 format, and then added without saturation to a 64-bit accumulator in 34.30 format. Finally, the added output is truncated to 34.15 format by discarding the lower 15 bits, and then saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="591" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="591" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gaf5b9aa4c1a3d2a403eca7cddcd60970c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_std_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_std_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Standard deviation of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Standard deviation value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is multiplied yields a 2.62 format. In order to avoid overflows, the input signal must be scaled down by <computeroutput>log2(size)</computeroutput> bits, Finally, the 2.62 accumulator is right shifted by 31 bits to yield a 1.31 format value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="617" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="617" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gab7860c0cec56fdc68e3fe62f126d3abb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_std_u8</definition>
        <argsstring>(const uint8_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_std_u8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Standard deviation of the u8 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Standard deviation value.</para>
</simplesect>
<bold>Function notes:</bold> The 8-bit format input is multiplied yields a 16-bit format, and then added saturation to a 32-bit accumulator in 16.16 format. Finally, the added output is truncated to 34.15 format by discarding the lower 1 bits, and then saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="642" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="642" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga15403fed7c1d7dfead8049265fab30bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_var_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_var_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Variance of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Variance value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="656" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="656" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gacce1dd6392efcc0ef8842c6444c11afa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_var_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_var_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Variance of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Variance value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is multiplied yields a 2.30 format, and then added without saturation to a 64-bit accumulator in 34.30 format. Finally, the added output is truncated to 34.15 format by discarding the lower 15 bits, and then saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="682" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="682" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga5fb6861f61a4ebaffec95fc7e0dda57f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q63_t</type>
        <definition>static q63_t hpm_dsp_var_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_var_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Variance of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Variance value.</para>
</simplesect>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is multiplied yields a 2.62 format. In order to avoid overflows, the input signal must be scaled down by <computeroutput>log2(size)</computeroutput> bits, Finally, the 2.62 accumulator is right shifted by 31 bits to yield a 1.31 format value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="708" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="708" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga7e1ceb4ea023d7bce2075ac20e2012da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_entropy_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_entropy_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Entropy of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Entropy value.</para>
</simplesect>
E = -sum (P .* log2 (P)) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="729" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="729" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gaf66c337d9a98a6917e6fd6a620c08a04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_relative_entropy_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_relative_entropy_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Relative Entropy of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Relative Entropy value.</para>
</simplesect>
Relative Entropy also called KullbackLeibler divergence: D(A || B) = A * ln(A / B); </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="752" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="752" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga98c51b7792e96fb1f79762a8401899e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_lse_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size)</argsstring>
        <name>hpm_dsp_lse_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Log-Sum-Exp of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>lse value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="770" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="770" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gadd5316224763efdd4cf7caa146b21427" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_lse_dprod_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size, float32_t *buffer)</argsstring>
        <name>hpm_dsp_lse_dprod_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Dot product with Log-Sum-Exp of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>points to temporary buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the Log-Sum-Exp of dot product value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="790" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="790" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga1071bc98a990e4a2e1f30c1353fc86db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hpm_dsp_gaussian_naive_bayes_est_f32</definition>
        <argsstring>(const riscv_dsp_gaussian_naivebayes_f32_t *instance, const float32_t *src, float32_t *buf)</argsstring>
        <name>hpm_dsp_gaussian_naive_bayes_est_f32</name>
        <param>
          <type>const riscv_dsp_gaussian_naivebayes_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Naive Gaussian Bayesian Estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to a naive bayes instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the elements of the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*buf</parametername>
</parameternamelist>
<parameterdescription>
<para>points to a buffer of length numofclass /numberOfClasses </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The predicted class </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="810" column="24" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="810" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gaab4ee78a9b76b70c84ade50ac1dc2670" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_absmax_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_absmax_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Maximum absolute value of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Maximum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="824" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="824" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gae6250168cb69c93349bc08c778c52ff1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_absmax_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_absmax_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Maximum absolute value of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Maximum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="838" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="838" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga7cda0f54b4ad962f0d2a3be1a189764c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_absmax_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_absmax_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Maximum absolute value of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Maximum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="852" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="852" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gad5ef0b2ad92aa10f75fdc575d35f8c4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q7_t</type>
        <definition>static q7_t hpm_dsp_absmax_q7</definition>
        <argsstring>(const q7_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_absmax_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Maximum absolute value of the q7 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Maximum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="866" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="866" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga48c0decf35145b16174d163e0771a729" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_absmin_f32</definition>
        <argsstring>(const float32_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_absmin_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum absolute value of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Minimum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="880" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="880" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1gaa29481529f9c166b55113eeda3ceb2dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_absmin_q31</definition>
        <argsstring>(const q31_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_absmin_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum absolute value of the q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Minimum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="894" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="894" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga26d2ddbdc121256625ecbe59ee6b8d01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_absmin_q15</definition>
        <argsstring>(const q15_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_absmin_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum absolute value of the q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Minimum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="908" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="908" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="group__statistics_1ga31b0d98724bfce74191b9b657d433976" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q7_t</type>
        <definition>static q7_t hpm_dsp_absmin_q7</definition>
        <argsstring>(const q7_t *src, uint32_t size, uint32_t *index)</argsstring>
        <name>hpm_dsp_absmin_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Minimum absolute value of the q7 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Minimum value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="922" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="922" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaf25b849e8b7a3b337dd91c45e40134a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_abs_f32</definition>
        <argsstring>(float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_abs_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Absolute value of floating-potint vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="959" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="959" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gadff053ed8cf76d03cbe619a706bb66d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_abs_q31</definition>
        <argsstring>(q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_abs_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Absolute value of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q31 value INT32_MIN (0x80000000) will be saturated to the maximum allowable positive value INT32_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="979" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="979" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaf4095fdc0e1f33668179cb64bd8a464e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_abs_q15</definition>
        <argsstring>(q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_abs_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Absolute value of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q15 value INT16_MIN (0x8000) will be saturated to the maximum allowable positive value INT16_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1000" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1000" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga4fe9371ab6e8ea3667f90ac8a243b57e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_abs_q7</definition>
        <argsstring>(q7_t *src, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_abs_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Absolute value of q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q7 value INT8_MIN (0x8000) will be saturated to the maximum allowable positive value INT8_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1020" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1020" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga98515975632421f6d1a9431845935029" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_add_f32</definition>
        <argsstring>(float32_t *src1, float32_t *src2, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_add_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Addition of floating-potint vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1039" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1039" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga8a1abf26146acc99b1a71af84aaf3fed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_add_q31</definition>
        <argsstring>(q31_t *src1, q31_t *src2, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_add_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Addition of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1059" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1059" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga3b5260ffa70c68ed447869238adc5236" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_add_q15</definition>
        <argsstring>(q15_t *src1, q15_t *src2, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_add_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Addition of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1079" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1079" bodyend="1088"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga7bd4fe5f3d3bb8bdffebabc0306f11a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_add_q7</definition>
        <argsstring>(q7_t *src1, q7_t *src2, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_add_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Addition of q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q7 range [0x80 0x7F]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1099" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1099" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga0294297d784064aa70525e3bb83bbd79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_add_u8_u16</definition>
        <argsstring>(uint8_t *src1, uint8_t *src2, uint16_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_add_u8_u16</name>
        <param>
          <type>uint8_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Addition of U8 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in U16 range [0x0000 0xFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1119" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1119" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga9a14f49d6eae32541a1cf503f29924fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sub_f32</definition>
        <argsstring>(float32_t *src1, float32_t *src2, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sub_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Subtraction of floating-point vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1138" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1138" bodyend="1147"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gac99fff1e0fc5c5b9a61feb0098cc8e59" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sub_q31</definition>
        <argsstring>(q31_t *src1, q31_t *src2, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sub_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Subtraction of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1158" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1158" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga4320d3bd09e851160b3ae7b894c0cafd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sub_q15</definition>
        <argsstring>(q15_t *src1, q15_t *src2, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sub_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Subtraction of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1178" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1178" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga82d43e5c78f30f06cc2ba81bc8760ddd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sub_q7</definition>
        <argsstring>(q7_t *src1, q7_t *src2, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sub_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Subtraction of q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q7 range [0x80 0x7F]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1198" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1198" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga0858c8dac33fb2c01207a276520efc99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sub_u8_q7</definition>
        <argsstring>(uint8_t *src1, uint8_t *src2, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sub_u8_q7</name>
        <param>
          <type>uint8_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Subtraction of u8 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q7 range [0x80 0x7F]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1218" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1218" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaf38165466859c664efbcb18e1fd849b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mul_f32</definition>
        <argsstring>(float32_t *src1, float32_t *src2, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mul_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiplication of floating-point vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1233" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1233" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga43e73c7f252f3bd29b4cf853768b971f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mul_q31</definition>
        <argsstring>(q31_t *src1, q31_t *src2, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mul_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiplication of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1253" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1253" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga2d9efb20de5fa3cc3d0dd706de462a34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mul_q15</definition>
        <argsstring>(q15_t *src1, q15_t *src2, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mul_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiplication of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1273" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1273" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaf989af83eed18800183ad3bdc74abe92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mul_q7</definition>
        <argsstring>(q7_t *src1, q7_t *src2, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mul_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiplication of q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q7 range [0x80 0x7F]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1293" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1293" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gae33e1877afc8372539e2f596ef892453" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mul_u8_u16</definition>
        <argsstring>(uint8_t *src1, uint8_t *src2, uint16_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mul_u8_u16</name>
        <param>
          <type>uint8_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiplication of u8 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be in U16 range [0x00 0xFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1313" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1313" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaf1878ba2a67c5407dc3c17faa4324732" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_div_f32</definition>
        <argsstring>(float32_t *src1, float32_t *src2, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_div_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Division of floating-point vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1328" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1328" bodyend="1337"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga2048bd035dce9e4087c677ad6118209e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_div_q31</definition>
        <argsstring>(q31_t src1, q31_t src2)</argsstring>
        <name>hpm_dsp_div_q31</name>
        <param>
          <type>q31_t</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
<para>Division of q31 inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the smaller input value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the larger input value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>division of two inputs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1345" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1345" bodyend="1354"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga4325d1319e9be1da041eed3557e5ce2f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_div_s64_u32</definition>
        <argsstring>(q63_t src1, uint32_t src2)</argsstring>
        <name>hpm_dsp_div_s64_u32</name>
        <param>
          <type>q63_t</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
<para>Division of q63 inputs divided by a positive 32 bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the q63 input value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the positive 32 bits input value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>division of two inputs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1362" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1362" bodyend="1371"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga4ebf3a7af27e0be2866163d5316f5a44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_div_u64_u32</definition>
        <argsstring>(uint64_t src1, uint32_t src2)</argsstring>
        <name>hpm_dsp_div_u64_u32</name>
        <param>
          <type>uint64_t</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
<para>Division of positive 64-bits inputs divided by a positive 32-bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the positive 64-bits input value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the positive 32-bits input value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>division of two inputs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1379" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1379" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaa16385255f04e325c776fef0651a9cd8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_neg_f32</definition>
        <argsstring>(float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_neg_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Negation of floating-potint vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1397" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1397" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaa1ad4a21370e2de683af272666fdfae4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_neg_q31</definition>
        <argsstring>(q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_neg_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Negation of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q31 value INT32_MIN (0x80000000) will be saturated to the maximum allowable positive value INT32_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1417" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1417" bodyend="1426"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga59ec55b5efda253881754d04a5e1c906" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_neg_q15</definition>
        <argsstring>(q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_neg_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Negation of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q15 value INT16_MIN (0x8000) will be saturated to the maximum allowable positive value INT16_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1437" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1437" bodyend="1446"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaa7b6ba90be87a5f0b915c1ee0ae18ee2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_neg_q7</definition>
        <argsstring>(q7_t *src, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_neg_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Negation of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q7 value INT8_MIN (0x80) will be saturated to the maximum allowable positive value INT8_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1457" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1457" bodyend="1466"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gac1eb6a8019725b9490e979c96e7510a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dprod_f32</definition>
        <argsstring>(float32_t *src1, float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dprod_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Dot production of floating-point vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dot product of two input vectors. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1476" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1476" bodyend="1487"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga6dad768fe925d7b590c045285d8a97a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q63_t</type>
        <definition>static q63_t hpm_dsp_dprod_q31</definition>
        <argsstring>(q31_t *src1, q31_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dprod_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Dot production of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dot product of two input vectors.</para>
</simplesect>
The output of multiplications is truncated from 2.62 to 2.48 format and then added without saturation to a 64-bit accumulator. The return value is in 16.48 format. When the size of the vectors less than 2^16, there is no risk to overflow. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1501" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1501" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gabfd70e8dfd3f54159dd7200334faa074" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q63_t</type>
        <definition>static q63_t hpm_dsp_dprod_q15</definition>
        <argsstring>(q15_t *src1, q15_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dprod_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Dot production of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dot product of two input vectors.</para>
</simplesect>
The output of multiplications is in 2.30 format and then added to a 64-bit accumulator in 34.30 format. The return value is in 34.30 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1524" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1524" bodyend="1535"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gacdf0a9e11e54e78959fbd11998d006d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_dprod_u8xq15</definition>
        <argsstring>(uint8_t *src1, q15_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dprod_u8xq15</name>
        <param>
          <type>uint8_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Dot production of u8 * q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the uint8_t format input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the q15 format input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dot product of two input vectors.</para>
</simplesect>
The output of multiplications is in 1.23 format and then added to an accumulator in 9.23 format. The return result is in 9.23 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1548" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1548" bodyend="1553"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gabcb1f483b220f1d4b9c84bb9d507f940" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_dprod_q7</definition>
        <argsstring>(q7_t *src1, q7_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dprod_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Dot production of q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dot product of two input vectors.</para>
</simplesect>
The output of multiplications is in 2.14 format and then added to an accumulator in 18.14 format. The return result is in 18.14 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1566" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1566" bodyend="1577"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gac07edf7b7c984aed7392cdbeb0edbdca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_dprod_q7xq15</definition>
        <argsstring>(q7_t *src1, q15_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dprod_q7xq15</name>
        <param>
          <type>q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Dot production of q7 * q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the q7_t format input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the q15 format input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dot product of two input vectors.</para>
</simplesect>
The output of multiplications is in 1.22 format and then added to an accumulator in 10.22 format. The return result is in 10.22 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1589" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1589" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga330075bbd982d1d0e86c50d177c26aef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hpm_dsp_dprod_u8</definition>
        <argsstring>(uint8_t *src1, uint8_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dprod_u8</name>
        <param>
          <type>uint8_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Dot production of U8 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dot product of two input vectors.</para>
</simplesect>
The output of multiplications is in 0.16 format and then added to an accumulator in 16.16 format. The return result is in 16.16 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1606" column="24" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1606" bodyend="1611"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga75b490628d07bf286959b2dd1ca5ef48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_offset_f32</definition>
        <argsstring>(float32_t *src, float32_t offset, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_offset_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>The offset of floating-point vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the value to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1621" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1621" bodyend="1630"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga9605dca5e72ec18ca2b9d475ed18854d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_offset_q31</definition>
        <argsstring>(q31_t *src, q31_t offset, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_offset_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>The offset of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the value to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results are saturated in Q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1641" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1641" bodyend="1650"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga8cc3a94632f26390aabe78e0b2c62e23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_offset_q15</definition>
        <argsstring>(q15_t *src, q15_t offset, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_offset_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>The offset of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the value to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results are saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1661" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1661" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga42d212bdaab06e3b00417c77d29d3498" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_offset_q7</definition>
        <argsstring>(q7_t *src, q7_t offset, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_offset_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>The offset of q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the value to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results are saturated in Q7 range [0x80 0x7F]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1681" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1681" bodyend="1690"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga81c5c19c5703065b0449fbffafa33c19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_offset_u8</definition>
        <argsstring>(uint8_t *src, q7_t offset, uint8_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_offset_u8</name>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>The offset of U8 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>is the value to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results are saturated in U8 range [0x00 0xFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1701" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1701" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga9414c80d2298557ca677cf7c58961a10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_scale_f32</definition>
        <argsstring>(float32_t *src, float32_t scale, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_scale_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>To multiply a floating-point vectors by a floating-point scale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>is the value to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1716" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1716" bodyend="1725"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga372a2f658cf59a0cd35162527a65c5a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_scale_q31</definition>
        <argsstring>(q31_t *src, q31_t scalefract, int8_t shift, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_scale_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>scalefract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>To multiply a q31 vectors by a q31 scale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scalefract</parametername>
</parameternamelist>
<parameterdescription>
<para>is the fractional portion value to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
These are multiplied to yield a 2.62 output and then is shift with saturation to 1.31 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1739" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1739" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga85766e519f49bebb185951b138f4e383" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_scale_q15</definition>
        <argsstring>(q15_t *src, q15_t scalefract, int8_t shift, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_scale_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>scalefract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>To multiply a q15 vectors by a q15 scale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scalefract</parametername>
</parameternamelist>
<parameterdescription>
<para>is the fractional portion value to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
These are multiplied to yield a 2.30 output and then is shifted with saturation to 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1762" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1762" bodyend="1771"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga77d56cb53909e5ce23b68687a7eb1ccb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_scale_q7</definition>
        <argsstring>(q7_t *src, q7_t scalefract, int8_t shift, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_scale_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t</type>
          <declname>scalefract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>To multiply a q7 vectors by a q7 scale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scalefract</parametername>
</parameternamelist>
<parameterdescription>
<para>is the fractional portion value to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
These are multiplied to yield a 2.14 output and then is shifted with saturation to 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1785" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1785" bodyend="1794"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gac2951a6cd8fd4a99ce9886666b0ed627" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_scale_u8</definition>
        <argsstring>(uint8_t *src, q7_t scalefract, int8_t shift, uint8_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_scale_u8</name>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t</type>
          <declname>scalefract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>To multiply a u8 vectors by a q7 scale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scalefract</parametername>
</parameternamelist>
<parameterdescription>
<para>is the fractional portion value to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The inputs are multiplied to yield a 1.15 output and then are shift with saturation to 8-bit formats. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1807" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1807" bodyend="1812"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaeff58fe36cf38ef9f11dc56b5e331175" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_shift_q15</definition>
        <argsstring>(q15_t *src, int8_t shift, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_shift_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Shifts a q15 vector with a specified shift number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of shift bits. If (shift &gt; 0) means shifts left; (shift &lt; 0) means shifts right. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The input and output are all saturated to q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1825" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1825" bodyend="1834"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1ga850586e8cafbed79042c45be3ad19925" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_shift_q31</definition>
        <argsstring>(q31_t *src, int8_t shift, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_shift_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Shifts a q31 vector with a specified shift number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of shift bits. If (shift &gt; 0) means shifts left; (shift &lt; 0) means shifts right. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The input and output are all saturated to q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1846" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1846" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaac457317e7cacc40cc0d2a7879354bc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_shift_q7</definition>
        <argsstring>(q7_t *src, int8_t shift, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_shift_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Shifts a q7 vector with a specified shift number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of shift bits. If (shift &gt; 0) means shifts left; (shift &lt; 0) means shifts right. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The input and output are all saturated to q7 range [0x80 0x7F]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1867" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1867" bodyend="1876"/>
      </memberdef>
      <memberdef kind="function" id="group__basic_1gaf5e4617dd32390c53498ec663484a4d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_shift_u8</definition>
        <argsstring>(uint8_t *src, int8_t shift, uint8_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_shift_u8</name>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Shifts a u8 vector for a specified shift number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of shift bits. If (shift &gt; 0) means shifts left; (shift &lt; 0) means shifts right. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The input and output are all saturated to u8 range [0x00 0xFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1888" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1888" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__clip_1ga576ea3928d00c395d5fccfffedd98529" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_clip_f32</definition>
        <argsstring>(float32_t *src, float32_t *dst, float32_t low, float32_t high, uint32_t size)</argsstring>
        <name>hpm_dsp_clip_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Elementwise clipping of f32 function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">low</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">high</parametername>
</parameternamelist>
<parameterdescription>
<para>higher bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1908" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1908" bodyend="1917"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__clip_1ga3154044848a96e2d323fc653d4363f2d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_clip_q31</definition>
        <argsstring>(q31_t *src, q31_t *dst, q31_t low, q31_t high, uint32_t size)</argsstring>
        <name>hpm_dsp_clip_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Elementwise clipping of q31 function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">low</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">high</parametername>
</parameternamelist>
<parameterdescription>
<para>higher bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1927" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1927" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__clip_1gac2198553543e005f635eddf9b084280d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_clip_q15</definition>
        <argsstring>(q15_t *src, q15_t *dst, q15_t low, q15_t high, uint32_t size)</argsstring>
        <name>hpm_dsp_clip_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Elementwise clipping of q15 function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">low</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">high</parametername>
</parameternamelist>
<parameterdescription>
<para>higher bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1946" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1946" bodyend="1955"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__clip_1gaa6bd0cda127f1f5376da62d09ce50285" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_clip_q7</definition>
        <argsstring>(q7_t *src, q7_t *dst, q7_t low, q7_t high, uint32_t size)</argsstring>
        <name>hpm_dsp_clip_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q7_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>q7_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Elementwise clipping of q7 function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">low</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">high</parametername>
</parameternamelist>
<parameterdescription>
<para>higher bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1965" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1965" bodyend="1974"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__and_1ga5f2670d152eb22ed704e6c45fabec1a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_and_u32</definition>
        <argsstring>(u32_t *src1, u32_t *src2, u32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_and_u32</name>
        <param>
          <type>u32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>u32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>u32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise AND of two u32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="1998" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="1998" bodyend="2007"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__and_1gac24be1a8356d99a6acdab2e4ed7989b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_and_u8</definition>
        <argsstring>(u8_t *src1, u8_t *src2, u8_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_and_u8</name>
        <param>
          <type>u8_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise AND of two u8 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2016" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2016" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__or_1gafc148ac1136b17f05bf5ed3f3e3d3806" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_or_u32</definition>
        <argsstring>(u32_t *src1, u32_t *src2, u32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_or_u32</name>
        <param>
          <type>u32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>u32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>u32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise OR of two u32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2049" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2049" bodyend="2058"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__or_1gaf0f817a568b9765b784757badc8be0c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_or_u16</definition>
        <argsstring>(u16_t *src1, u16_t *src2, u16_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_or_u16</name>
        <param>
          <type>u16_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>u16_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>u16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise OR of two u16 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2067" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2067" bodyend="2076"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__or_1gaafddb03f70efb5be201b87cceb5a2850" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_or_u8</definition>
        <argsstring>(u8_t *src1, u8_t *src2, u8_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_or_u8</name>
        <param>
          <type>u8_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise OR of two u8 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2085" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2085" bodyend="2094"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__xor_1gaae0e03f90e1427e0de0ad043d96263f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_xor_u32</definition>
        <argsstring>(u32_t *src1, u32_t *src2, u32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_xor_u32</name>
        <param>
          <type>u32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>u32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>u32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise XOR of two u32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2118" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2118" bodyend="2127"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__xor_1gab34299dac4789d2a3502d77ad7a45899" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_xor_u16</definition>
        <argsstring>(u16_t *src1, u16_t *src2, u16_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_xor_u16</name>
        <param>
          <type>u16_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>u16_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>u16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise XOR of two u16 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2136" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2136" bodyend="2145"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__xor_1gab9e0c026766ef480daf7f40c4ab70350" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_xor_u8</definition>
        <argsstring>(u8_t *src1, u8_t *src2, u8_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_xor_u8</name>
        <param>
          <type>u8_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise XOR of two u8 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2154" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2154" bodyend="2163"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__not_1ga4b85a1479fb1a6d7d3cf679f33dc2da1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_not_u32</definition>
        <argsstring>(u32_t *src, u32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_not_u32</name>
        <param>
          <type>u32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>u32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise NOT of u32 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2186" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2186" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__not_1ga19b0159593c99a4f68989de10311f1e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_not_u16</definition>
        <argsstring>(u16_t *src, u16_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_not_u16</name>
        <param>
          <type>u16_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>u16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise NOT of u16 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2203" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2203" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="group__basic__not_1gadff02591cd4682b22b2bf714309da871" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_not_u8</definition>
        <argsstring>(u8_t *src, u8_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_not_u8</name>
        <param>
          <type>u8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the logical bitwise NOT of u8 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2220" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2220" bodyend="2229"/>
      </memberdef>
      <memberdef kind="function" id="hpm__math_8h_1aeedb1b7b0263c67983e29c04c4aeec79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t hpm_math_sw_reverse_bit8_lsb_to_msb</definition>
        <argsstring>(uint8_t lsb)</argsstring>
        <name>hpm_math_sw_reverse_bit8_lsb_to_msb</name>
        <param>
          <type>uint8_t</type>
          <declname>lsb</declname>
        </param>
        <briefdescription>
<para>Reserve 8bit data lsb to msb. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lsb</parametername>
</parameternamelist>
<parameterdescription>
<para>lsb data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t msb </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2244" column="9" declfile="middleware/hpm_math/hpm_math.h" declline="2244" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="hpm__math_8h_1a7c1d8b6457af54fe4fe23588b1a49598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t hpm_math_sw_reverse_bit8_msb_to_lsb</definition>
        <argsstring>(uint8_t msb)</argsstring>
        <name>hpm_math_sw_reverse_bit8_msb_to_lsb</name>
        <param>
          <type>uint8_t</type>
          <declname>msb</declname>
        </param>
        <briefdescription>
<para>Reserve 8bit data msb to lsb. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msb</parametername>
</parameternamelist>
<parameterdescription>
<para>msb data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t lsb </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2252" column="9" declfile="middleware/hpm_math/hpm_math.h" declline="2252" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="hpm__math_8h_1ab4ed58cf6fdfd63f150761b54be81461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t hpm_math_sw_reverse_bit32_lsb_to_msb</definition>
        <argsstring>(uint32_t lsb)</argsstring>
        <name>hpm_math_sw_reverse_bit32_lsb_to_msb</name>
        <param>
          <type>uint32_t</type>
          <declname>lsb</declname>
        </param>
        <briefdescription>
<para>Reserve 32bit data lsb to msb. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lsb</parametername>
</parameternamelist>
<parameterdescription>
<para>lsb data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t msb </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2260" column="10" declfile="middleware/hpm_math/hpm_math.h" declline="2260" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="hpm__math_8h_1a6bf989051ab61f7dc37202cf89b03058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t hpm_math_sw_reverse_bit32_msb_to_lsb</definition>
        <argsstring>(uint32_t msb)</argsstring>
        <name>hpm_math_sw_reverse_bit32_msb_to_lsb</name>
        <param>
          <type>uint32_t</type>
          <declname>msb</declname>
        </param>
        <briefdescription>
<para>Reserve 32bit data msb to lsb. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msb</parametername>
</parameternamelist>
<parameterdescription>
<para>msb data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t lsb </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2268" column="10" declfile="middleware/hpm_math/hpm_math.h" declline="2268" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga6279d9125ae054f847dcbbbe3ef97470" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cconj_f32</definition>
        <argsstring>(const float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cconj_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Conjugate the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2298" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2298" bodyend="2307"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga17685c07c61c82b0e0f0a8ec18806df4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cconj_q15</definition>
        <argsstring>(const q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cconj_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Conjugate the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q15 value INT16_MIN (0x8000) will be saturated to the maximum allowable positive value INT16_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2318" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2318" bodyend="2327"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gaa84045e328defa47c5c7eb7ab8902b6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cconj_q31</definition>
        <argsstring>(const q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cconj_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Conjugate the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q31 value INT32_MIN (0x80000000) will be saturated to the maximum allowable positive value INT32_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2338" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2338" bodyend="2347"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gaae1a84f713d1770fab4cb7866c54d7a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size, float32_t *dst)</argsstring>
        <name>hpm_dsp_cdprod_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Compute the dot product of the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2357" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2357" bodyend="2362"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gae862ce9eb2be037fecf298fc137529b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_typ2_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size, float32_t *rout, float32_t *iout)</argsstring>
        <name>hpm_dsp_cdprod_typ2_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>rout</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>iout</declname>
        </param>
        <briefdescription>
<para>Compute the dot product type2 of the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*rout</parametername>
</parameternamelist>
<parameterdescription>
<para>the real sum of the output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*iout</parametername>
</parameternamelist>
<parameterdescription>
<para>the imag sum of the output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2372" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2372" bodyend="2381"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gab7b17001cfbaea2178eecbb5310740c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, uint32_t size, q15_t *dst)</argsstring>
        <name>hpm_dsp_cdprod_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Compute the dot product of the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into 3.13 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2393" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2393" bodyend="2398"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gaed38faa72902fe73d0a66af546fabc12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_typ2_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, uint32_t size, q31_t *rout, q31_t *iout)</argsstring>
        <name>hpm_dsp_cdprod_typ2_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>rout</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>iout</declname>
        </param>
        <briefdescription>
<para>Compute the dot product type2 of the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*rout</parametername>
</parameternamelist>
<parameterdescription>
<para>the real sum of the output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*iout</parametername>
</parameternamelist>
<parameterdescription>
<para>the imag sum of the output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into q24 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2411" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2411" bodyend="2416"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga5715eeb2e01429a1feaab66cb670ea22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, uint32_t size, q31_t *dst)</argsstring>
        <name>hpm_dsp_cdprod_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Compute the dot product of the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into 3.29 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2428" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2428" bodyend="2433"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gabd35e9042e1980dd0bfefe64b881a239" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_typ2_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, uint32_t size, q63_t *rout, q63_t *iout)</argsstring>
        <name>hpm_dsp_cdprod_typ2_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q63_t *</type>
          <declname>rout</declname>
        </param>
        <param>
          <type>q63_t *</type>
          <declname>iout</declname>
        </param>
        <briefdescription>
<para>Compute the dot product type2 of the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*rout</parametername>
</parameternamelist>
<parameterdescription>
<para>the real sum of the output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*iout</parametername>
</parameternamelist>
<parameterdescription>
<para>the imag sum of the output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into q48 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2447" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2447" bodyend="2456"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga73e8a36fb1700c6d4aedb11735471fed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_f32</definition>
        <argsstring>(const float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude of the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2465" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2465" bodyend="2474"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga76d1ccdf21d59caaff2d237dd4c248f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_q15</definition>
        <argsstring>(const q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude of the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into 2.14 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2485" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2485" bodyend="2494"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga8c66d13cf354d53a7a386791b61d3913" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_q31</definition>
        <argsstring>(const q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude of the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into 2.30 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2505" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2505" bodyend="2514"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga7e76928be457195f5653c5e12a6d5e0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_sqr_f32</definition>
        <argsstring>(const float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_sqr_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude squared of the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2524" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2524" bodyend="2533"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gac3b3bd14a0a65018bf16ce05645d1e57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_sqr_q15</definition>
        <argsstring>(const q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_sqr_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude squared of the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into 3.13 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2544" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2544" bodyend="2553"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gada55d2942703610d2d9c4bed0fc33553" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_sqr_q31</definition>
        <argsstring>(const q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_sqr_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude squared of the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into 3.29 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2564" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2564" bodyend="2573"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga00885d375580a1993563af83376679f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply two folating-point complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2583" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2583" bodyend="2592"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga73a51071d53fbc9e8744932c7068a0a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply two q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into 3.13 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2604" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2604" bodyend="2613"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gace87468ca2a2a9cf06e8719ec18eb365" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply two q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into 3.29 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2625" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2625" bodyend="2634"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga21ac7cbc44156c53adee7fd12569fd45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_real_f32</definition>
        <argsstring>(const float32_t *src, const float32_t *real, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_real_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>real</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply the folating-point complex vector by a real vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*real</parametername>
</parameternamelist>
<parameterdescription>
<para>the input real vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2644" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2644" bodyend="2653"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gaeda77b2e8121a5ba2f3ca133e02eec97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_real_q15</definition>
        <argsstring>(const q15_t *src, const q15_t *real, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_real_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>real</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply the q15 complex vector by a real vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*real</parametername>
</parameternamelist>
<parameterdescription>
<para>the input real vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2664" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2664" bodyend="2673"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga9cb61bdbab96f556c9a3d132eab891bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_real_q31</definition>
        <argsstring>(const q31_t *src, const q31_t *real, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_real_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>real</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply the q31 complex vector by a real vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*real</parametername>
</parameternamelist>
<parameterdescription>
<para>the input real vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results will be saturated in Q31 range[0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2684" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2684" bodyend="2693"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga9fb6ad9be5a088ca73f2da2a9f468598" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_clarke_f32</definition>
        <argsstring>(float32_t a, float32_t b, float32_t *alpha, float32_t *beta)</argsstring>
        <name>hpm_dsp_clarke_f32</name>
        <param>
          <type>float32_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Clarke transform of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vector axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*beta</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vector axis beta. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2721" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2721" bodyend="2726"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1gacee02f319732b6480a20c9cab339b48d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_clarke_q31</definition>
        <argsstring>(q31_t a, q31_t b, q31_t *alpha, q31_t *beta)</argsstring>
        <name>hpm_dsp_clarke_q31</name>
        <param>
          <type>q31_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Clarke transform of q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vector axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*beta</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vector axis beta.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The internal 32-bit accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2737" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2737" bodyend="2742"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga6bb47dbe724993fec899450d50c7604a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_inv_clarke_f32</definition>
        <argsstring>(float32_t alpha, float32_t beta, float32_t *a, float32_t *b)</argsstring>
        <name>hpm_dsp_inv_clarke_f32</name>
        <param>
          <type>float32_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Inverse Clarke transform of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>output three-phase coordinate a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>output three-phase coordinate b. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2752" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2752" bodyend="2757"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga6a2b3cdeb0c9389655c3a335061a2e6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_inv_clarke_q31</definition>
        <argsstring>(q31_t alpha, q31_t beta, q31_t *a, q31_t *b)</argsstring>
        <name>hpm_dsp_inv_clarke_q31</name>
        <param>
          <type>q31_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Inverse Clarke transform of q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>output three-phase coordinate a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>output three-phase coordinate b.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The internal 32-bit accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2768" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2768" bodyend="2773"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga5fe2822268f4b84653c61a3ae6ec38ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_park_f32</definition>
        <argsstring>(float32_t alpha, float32_t beta, float32_t *a, float32_t *b, float32_t sin, float32_t cos)</argsstring>
        <name>hpm_dsp_park_f32</name>
        <param>
          <type>float32_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>sin</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>cos</declname>
        </param>
        <briefdescription>
<para>Park transform of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase coordinate alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase coordinate beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotor frame a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotor frame b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sin</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cos</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2785" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2785" bodyend="2790"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga3d7d1b07ba8809cd226d719aff0e0485" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_park_q31</definition>
        <argsstring>(q31_t alpha, q31_t beta, q31_t *a, q31_t *b, q31_t sin, q31_t cos)</argsstring>
        <name>hpm_dsp_park_q31</name>
        <param>
          <type>q31_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>sin</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>cos</declname>
        </param>
        <briefdescription>
<para>Park transform of q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase coordinate alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase coordinate beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotor frame a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotor frame b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sin</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cos</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle .</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The internal 32-bit accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2804" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2804" bodyend="2809"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1gaa6924b7118d38d3a621a37ca767b9191" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_inv_park_f32</definition>
        <argsstring>(float32_t a, float32_t b, float32_t *alpha, float32_t *beta, float32_t sin, float32_t cos)</argsstring>
        <name>hpm_dsp_inv_park_f32</name>
        <param>
          <type>float32_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>sin</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>cos</declname>
        </param>
        <briefdescription>
<para>Inverse Park transform of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor frame a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor frame b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vec axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*beta</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vec axis beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sin</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cos</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2821" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2821" bodyend="2826"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga2fbf750b4987751910662d1fec2640a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_inv_park_q31</definition>
        <argsstring>(q31_t a, q31_t b, q31_t *alpha, q31_t *beta, q31_t sin, q31_t cos)</argsstring>
        <name>hpm_dsp_inv_park_q31</name>
        <param>
          <type>q31_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>sin</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>cos</declname>
        </param>
        <briefdescription>
<para>Inverse Park transform of q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor frame a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor frame b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vec axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*beta</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vec axis beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sin</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cos</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle .</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The internal 32-bit accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2839" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2839" bodyend="2844"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1gab9ea056f3d22196ba8547a48b8e885bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_pid_f32</definition>
        <argsstring>(riscv_dsp_pid_f32_t *instance, float32_t src)</argsstring>
        <name>hpm_dsp_pid_f32</name>
        <param>
          <type>riscv_dsp_pid_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>PID control of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>output data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2852" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2852" bodyend="2857"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga43e41afb00bdbc95a29e6af6fec55711" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_init_pid_f32</definition>
        <argsstring>(riscv_dsp_pid_f32_t *instance, int32_t set)</argsstring>
        <name>hpm_dsp_init_pid_f32</name>
        <param>
          <type>riscv_dsp_pid_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>PID initializatopn control function of floating-point formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>for 1 will clear the state to all zeros 0 will not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function will calculate the PID control structure gain <computeroutput>gain1</computeroutput>, <computeroutput>gain2</computeroutput> and <computeroutput>gain3</computeroutput> by seting the variable <computeroutput>Kp</computeroutput>, <computeroutput>Ki</computeroutput> and <computeroutput>Kd</computeroutput>. The state variable will set to all zeros. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2870" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2870" bodyend="2875"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga92efef20292a4c98663930a88c307be3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_pid_q31</definition>
        <argsstring>(riscv_dsp_pid_q31_t *instance, q31_t src)</argsstring>
        <name>hpm_dsp_pid_q31</name>
        <param>
          <type>riscv_dsp_pid_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>PID control of Q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>output data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2884" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2884" bodyend="2889"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga6b1c10c89ae007fd8988b63f48c751d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_init_pid_q31</definition>
        <argsstring>(riscv_dsp_pid_q31_t *instance, int32_t set)</argsstring>
        <name>hpm_dsp_init_pid_q31</name>
        <param>
          <type>riscv_dsp_pid_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>PID initializatopn control function of Q31 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>for 1 will clear the state to all zeros 0 will not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function will calculate the PID control structure gain <computeroutput>gain1</computeroutput>, <computeroutput>gain2</computeroutput> and <computeroutput>gain3</computeroutput> by seting the variable <computeroutput>Kp</computeroutput>, <computeroutput>Ki</computeroutput> and <computeroutput>Kd</computeroutput>. The state variable will set to all zeros. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2903" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2903" bodyend="2908"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga1c3de0c7b4e2047ed22bc185b1b0773f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_pid_q15</definition>
        <argsstring>(riscv_dsp_pid_q15_t *instance, q15_t src)</argsstring>
        <name>hpm_dsp_pid_q15</name>
        <param>
          <type>riscv_dsp_pid_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2910" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2910" bodyend="2915"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga1f305b87a9bdd5984d557818590d09f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_init_pid_q15</definition>
        <argsstring>(riscv_dsp_pid_q15_t *instance, int32_t set)</argsstring>
        <name>hpm_dsp_init_pid_q15</name>
        <param>
          <type>riscv_dsp_pid_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>PID initializatopn control function of Q15 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>for 1 will clear the state to all zeros 0 will not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function will calculate the PID control structure gain <computeroutput>gain1</computeroutput>, <computeroutput>gain2</computeroutput> and <computeroutput>gain3</computeroutput> by seting the variable <computeroutput>Kp</computeroutput>, <computeroutput>Ki</computeroutput> and <computeroutput>Kd</computeroutput>. The state variable will set to all zeros. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2928" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2928" bodyend="2933"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1ga5a6abe08096484cb89d22dfbd80bc569" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_bray_curtis_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_bray_curtis_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Bray-Curtis distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2963" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2963" bodyend="2972"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1ga714df26664048e46e18ca5eadf1fd96e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_canberra_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_canberra_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Canberra distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2981" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2981" bodyend="2990"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gac127b339f2731b79cbf59170a84b7509" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_chebyshev_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_chebyshev_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Chebyshev distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2999" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2999" bodyend="3008"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1ga208c98d954761743fe5ef445db4816a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_city_block_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_city_block_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Cityblock (Manhattan) distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3017" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3017" bodyend="3026"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gab6b54f5a20f39df53279c996201da518" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_corr_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_corr_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Correlation distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3035" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3035" bodyend="3044"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gaab9da8281a8704736e523c217adb24c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_cos_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_cos_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Cosine distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3053" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3053" bodyend="3062"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1ga12919110a2f3793d32ca989b5562d864" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_euclidean_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_euclidean_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Euclidean distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3071" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3071" bodyend="3080"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gafd27e5f5f91b5bfac687daaa069e9f53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_jensen_shannon_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_jensen_shannon_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Jensen-Shannon distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3089" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3089" bodyend="3098"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gafcaa33bb903087a19042b13f2664d0fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_dist_minkowski_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, int32_t order, uint32_t size)</argsstring>
        <name>hpm_dsp_dist_minkowski_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>order</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Minkowski distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>vector length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3108" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3108" bodyend="3117"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gaf5579f9ff423846bedab52025d7cc263" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_dice_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_dice_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Dice distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3126" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3126" bodyend="3135"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1ga87f06b8b5ad96e7cefcc331c2d8dce4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_hamming_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_hamming_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Hamming distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3144" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3144" bodyend="3153"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1ga689b8f31df314beb05857a24f7d17ef8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_jaccard_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_jaccard_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Jaccard distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3162" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3162" bodyend="3171"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1ga5cd748234321898cb9955c45a6ed403c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_kulsinski_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_kulsinski_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Kulsinski distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3180" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3180" bodyend="3189"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gaf747a6dc1fb0e397cba8229ed3683b22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_sokal_michener_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_sokal_michener_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Sokal-Michener distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3198" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3198" bodyend="3207"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1ga2d91cb3c2ca9a232a237e52f3aa144e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_sokal_sneath_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_sokal_sneath_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Sokal-Sneath distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3216" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3216" bodyend="3225"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gad8d15a8a83cffe63fee37f78e8d5ab1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_rogers_tanimoto_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_rogers_tanimoto_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Roger Stanimoto distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3234" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3234" bodyend="3243"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gada67127384f51e1dcaf9ac596b61e75e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_yule_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_yule_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Yule distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3252" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3252" bodyend="3261"/>
      </memberdef>
      <memberdef kind="function" id="group__dist_1gaeb3d304487c2ec1a6c493d280b3fe624" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_bdist_russell_rao_u32_f32</definition>
        <argsstring>(const uint32_t *src1, const uint32_t *src2, uint32_t numofbool)</argsstring>
        <name>hpm_dsp_bdist_russell_rao_u32_f32</name>
        <param>
          <type>const uint32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofbool</declname>
        </param>
        <briefdescription>
<para>Russell-Rao distance between two vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofbool</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of booleans </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3270" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3270" bodyend="3279"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga4d968e779b3ec4f7cd019742f1185da0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_fir_f32</definition>
        <argsstring>(const riscv_dsp_fir_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_fir_f32</name>
        <param>
          <type>const riscv_dsp_fir_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the floating-point FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3310" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3310" bodyend="3315"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga9ab3ad7d2df866b79e10ca428b7a44b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_fir_q31</definition>
        <argsstring>(const riscv_dsp_fir_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_fir_q31</name>
        <param>
          <type>const riscv_dsp_fir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q31 FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both coefficients and state variables are represented in 1.31 format and multiplications yield a 2.62 result. The 2.62 results are accumulated in a 64-bit accumulator and is right shifted by 31 bits and saturated to 1.31 formatthe to yield the final result. In order to avoid overflows completely the input signal must be scaled down by log2(coeff_size) bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3331" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3331" bodyend="3336"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gac52cfd7df3aac9f85d641300cab54502" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_fir_fast_q31</definition>
        <argsstring>(const riscv_dsp_fir_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_fir_fast_q31</name>
        <param>
          <type>const riscv_dsp_fir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q31 FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both coefficients and state variables are represented in 1.31 format. These intermediate multiplications results are added to a 2.30 accumulator. Finally, the accumulator is saturated and converted to a 1.31 result. In order to avoid overflows completely the input signal must be scaled down by log2(coeff_size) bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3352" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3352" bodyend="3357"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga67ea163e762468fc5a05756e6cf961ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_fir_q15</definition>
        <argsstring>(const riscv_dsp_fir_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_fir_q15</name>
        <param>
          <type>const riscv_dsp_fir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q15 FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both coefficients and state variables are represented in 1.15 format and multiplications yield a 2.30 result. The 2.30 results are accumulated in a 64-bit accumulator in 34.30 format and the results is truncated to 34.15 format by discarding low 15 bits. Lastly, the outputs is saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3372" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3372" bodyend="3377"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga350f0ccb0e3163f9b2f2d80c1a4b4a1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_fir_fast_q15</definition>
        <argsstring>(const riscv_dsp_fir_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_fir_fast_q15</name>
        <param>
          <type>const riscv_dsp_fir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q15 FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both coefficients and state variables are represented in Q15 format and multiplications yield a Q30 result. The results are accumulated in a 32-bit accumulator in Q2.30 format. Lastly, the outputs are saturated to yield a result in Q1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3391" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3391" bodyend="3396"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gaff2707d5d0630c7f1632f61e4af38027" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_fir_q7</definition>
        <argsstring>(const riscv_dsp_fir_q7_t *instance, q7_t *src, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_fir_q7</name>
        <param>
          <type>const riscv_dsp_fir_q7_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q7 FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both inputs are in 1.7 format and multiplications yield a 2.14 result. The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 format. The 18.14 result is then converted to 18.7 format by discarding the low 7 bits and then saturated to 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3410" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3410" bodyend="3415"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga084e1fc0471ba324afa9d46cd8d23b4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_lfir_f32</definition>
        <argsstring>(const riscv_dsp_lfir_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_lfir_f32</name>
        <param>
          <type>const riscv_dsp_lfir_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the floating-point lattice FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the lattice FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3425" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3425" bodyend="3430"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga6c7bb5727770068ccc1a1cf60766a376" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_lfir_q15</definition>
        <argsstring>(const riscv_dsp_lfir_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_lfir_q15</name>
        <param>
          <type>const riscv_dsp_lfir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q15 lattice FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the lattice FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3440" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3440" bodyend="3445"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gaa22d3dcb0e2be301e857c55d6ba93469" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_lfir_q31</definition>
        <argsstring>(const riscv_dsp_lfir_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_lfir_q31</name>
        <param>
          <type>const riscv_dsp_lfir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q31 lattice FIR filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the lattice FIR structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: In order to avoid overflows the input signal must be scaled down by 2*log2(stage) bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3459" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3459" bodyend="3464"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga7ab17b494a8c99806cf85a3d681755ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dcmfir_f32</definition>
        <argsstring>(const riscv_dsp_dcmfir_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dcmfir_f32</name>
        <param>
          <type>const riscv_dsp_dcmfir_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3465" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3465" bodyend="3470"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga8f6e7aa621aa0157b00bd30087477eee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dcmfir_q15</definition>
        <argsstring>(const riscv_dsp_dcmfir_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dcmfir_q15</name>
        <param>
          <type>const riscv_dsp_dcmfir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3471" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3471" bodyend="3476"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga15f43341502c4c75ac5746052cc301db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dcmfir_q31</definition>
        <argsstring>(const riscv_dsp_dcmfir_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dcmfir_q31</name>
        <param>
          <type>const riscv_dsp_dcmfir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3477" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3477" bodyend="3482"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga954a36c85b530592265d3afdeafb5077" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dcmfir_fast_q31</definition>
        <argsstring>(const riscv_dsp_dcmfir_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dcmfir_fast_q31</name>
        <param>
          <type>const riscv_dsp_dcmfir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3483" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3483" bodyend="3488"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga46fdb018ead4e1c961dc6132f7d7bbf9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dcmfir_fast_q15</definition>
        <argsstring>(const riscv_dsp_dcmfir_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dcmfir_fast_q15</name>
        <param>
          <type>const riscv_dsp_dcmfir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3489" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3489" bodyend="3494"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gaaefb1607ae2d58820a87b55a94305545" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_upsplfir_f32</definition>
        <argsstring>(const riscv_dsp_upsplfir_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_upsplfir_f32</name>
        <param>
          <type>const riscv_dsp_upsplfir_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3495" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3495" bodyend="3500"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga8c437e69efb5744881da1e809a62464d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_upsplfir_q15</definition>
        <argsstring>(const riscv_dsp_upsplfir_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_upsplfir_q15</name>
        <param>
          <type>const riscv_dsp_upsplfir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3501" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3501" bodyend="3506"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga8f417cd672b8c83898ca33355e045d58" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_upsplfir_q31</definition>
        <argsstring>(const riscv_dsp_upsplfir_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_upsplfir_q31</name>
        <param>
          <type>const riscv_dsp_upsplfir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3507" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3507" bodyend="3512"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga267fa5f1a6f0677861ceb55a04b46e8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_spafir_f32</definition>
        <argsstring>(riscv_dsp_spafir_f32_t *instance, float32_t *src, float32_t *dst, float32_t *buf, uint32_t size)</argsstring>
        <name>hpm_dsp_spafir_f32</name>
        <param>
          <type>riscv_dsp_spafir_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3513" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3513" bodyend="3518"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga094681ae28d948821c54a56a1e49a9c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_spafir_q15</definition>
        <argsstring>(riscv_dsp_spafir_q15_t *instance, q15_t *src, q15_t *dst, q15_t *buf1, q31_t *buf2, uint32_t size)</argsstring>
        <name>hpm_dsp_spafir_q15</name>
        <param>
          <type>riscv_dsp_spafir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>buf1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>buf2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3519" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3519" bodyend="3524"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga99ec238f09a360df15e5c071d69d79b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_spafir_q31</definition>
        <argsstring>(riscv_dsp_spafir_q31_t *instance, q31_t *src, q31_t *dst, q31_t *buf, uint32_t size)</argsstring>
        <name>hpm_dsp_spafir_q31</name>
        <param>
          <type>riscv_dsp_spafir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3525" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3525" bodyend="3530"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga33994c90d0cfc5321f256741cc8d5399" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_spafir_q7</definition>
        <argsstring>(riscv_dsp_spafir_q7_t *instance, q7_t *src, q7_t *dst, q7_t *buf1, q31_t *buf2, uint32_t size)</argsstring>
        <name>hpm_dsp_spafir_q7</name>
        <param>
          <type>riscv_dsp_spafir_q7_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>buf1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>buf2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3531" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3531" bodyend="3536"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga5c9fb175b6db030b8fca0f49134cbe66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_lms_f32</definition>
        <argsstring>(const riscv_dsp_lms_f32_t *instance, float32_t *src, float32_t *ref, float32_t *dst, float32_t *err, uint32_t size)</argsstring>
        <name>hpm_dsp_lms_f32</name>
        <param>
          <type>const riscv_dsp_lms_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>err</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Structure for the floatint-point standard LMS Filters. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for the floating-point LMS filter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the LMS structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*ref</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the reference data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*err</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the error data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3552" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3552" bodyend="3557"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga4b75751a1db8eaca9ed8988dcc7c762c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_lms_q31</definition>
        <argsstring>(const riscv_dsp_lms_q31_t *instance, q31_t *src, q31_t *ref, q31_t *dst, q31_t *err, uint32_t size)</argsstring>
        <name>hpm_dsp_lms_q31</name>
        <param>
          <type>const riscv_dsp_lms_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>err</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q31 LMS filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the LMS structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*ref</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the reference data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*err</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the error data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both coefficients and state variables are represented in 1.31 format and multiplications yield a 2.62 result. The 2.62 results are accumulated in a 64-bit accumulator and is right shifted by 31 bits and saturated to 1.31 formatthe to yield the final result. In order to avoid overflows completely the input signal must be scaled down by log2(coeff_size) bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3575" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3575" bodyend="3580"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gae67bd21265828239d887a5c64ad50965" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_lms_q15</definition>
        <argsstring>(const riscv_dsp_lms_q15_t *instance, q15_t *src, q15_t *ref, q15_t *dst, q15_t *err, uint32_t size)</argsstring>
        <name>hpm_dsp_lms_q15</name>
        <param>
          <type>const riscv_dsp_lms_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>err</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for the q15 LMS filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the LMS structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input block data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*ref</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the reference data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*err</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the error data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the blocksize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both coefficients and state variables are represented in 1.15 format and multiplications yield a 2.30 result. The 2.30 results are accumulated in a 64-bit accumulator in 34.30 format and the results is truncated to 34.15 format by discarding low 15 bits. Lastly, the outputs is saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3598" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3598" bodyend="3603"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga8afab7bf3bfed7c69dc198209a8ad678" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_nlms_f32</definition>
        <argsstring>(riscv_dsp_nlms_f32_t *instance, float32_t *src, float32_t *ref, float32_t *dst, float32_t *err, uint32_t size)</argsstring>
        <name>hpm_dsp_nlms_f32</name>
        <param>
          <type>riscv_dsp_nlms_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>err</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Structure for the f32 normalized LMS filter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3609" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3609" bodyend="3614"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gaf5f1a55f89ebbcc1d79a19bfdf2b0ebf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_nlms_q31</definition>
        <argsstring>(riscv_dsp_nlms_q31_t *instance, q31_t *src, q31_t *ref, q31_t *dst, q31_t *err, uint32_t size)</argsstring>
        <name>hpm_dsp_nlms_q31</name>
        <param>
          <type>riscv_dsp_nlms_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>err</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Structure for the q31 normalized LMS filter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3621" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3621" bodyend="3626"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga1a696fc5a1995fa1bbc20845c64ebb36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_nlms_q15</definition>
        <argsstring>(riscv_dsp_nlms_q15_t *instance, q15_t *src, q15_t *ref, q15_t *dst, q15_t *err, uint32_t size)</argsstring>
        <name>hpm_dsp_nlms_q15</name>
        <param>
          <type>riscv_dsp_nlms_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>err</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3629" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3629" bodyend="3634"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga27e6a8cf544e653c582aa8588cc34f64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_conv_f32</definition>
        <argsstring>(float32_t *src1, uint32_t len1, float32_t *src2, uint32_t len2, float32_t *dst)</argsstring>
        <name>hpm_dsp_conv_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Convolution of the floating-point vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3647" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3647" bodyend="3656"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga8dab87c45b4a2e9fc8da0b2e64192dd2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_conv_q15</definition>
        <argsstring>(q15_t *src1, uint32_t len1, q15_t *src2, uint32_t len2, q15_t *dst)</argsstring>
        <name>hpm_dsp_conv_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Convolution of the q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both inputs are in 1.15 format and multiplications yield a 2.30 result. The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format. The 34.30 result is then truncated to 34.15 format by discarding the low 15 bits and then saturated to 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3673" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3673" bodyend="3682"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga4fded11c34091870942bf1cdacfa143f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_conv_q31</definition>
        <argsstring>(q31_t *src1, uint32_t len1, q31_t *src2, uint32_t len2, q31_t *dst)</argsstring>
        <name>hpm_dsp_conv_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Convolution of the q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both inputs are in 1.31 format and the 64-bit accumulator has a 2.62 format and maintains full precision of the intermediate multiplication results but provides only a single guard bit. The input signals should be scaled down to avoid intermediate overflows. Scale down the inputs by log2(min(srcALen, srcBLen)), The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 forma t to yield the final result. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3701" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3701" bodyend="3710"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gacc74ec51c4ca00fec913db7123f2ab9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_conv_q7</definition>
        <argsstring>(q7_t *src1, uint32_t len1, q7_t *src2, uint32_t len2, q7_t *dst)</argsstring>
        <name>hpm_dsp_conv_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Convolution of the q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both inputs are in 1.7 format and multiplications yield a 2.14 result. The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 format. The 18.14 result is then truncated to 18.7 format by discarding the low 7 bits and then saturated to 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3727" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3727" bodyend="3736"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gab37867245ca9645f9114a47e8b656e0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_conv_partial_f32</definition>
        <argsstring>(float32_t *src1, uint32_t len1, float32_t *src2, uint32_t len2, float32_t *dst, uint32_t startindex, uint32_t size)</argsstring>
        <name>hpm_dsp_conv_partial_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>startindex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convolution Partial of the floating-point vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">startindex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns 0; success -1; fail, the input subset are not between 0 and len1+len2-2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3752" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3752" bodyend="3762"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga71441a91e0614a6ff7698fea8105077a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_conv_partial_q15</definition>
        <argsstring>(q15_t *src1, uint32_t len1, q15_t *src2, uint32_t len2, q15_t *dst, uint32_t startindex, uint32_t size)</argsstring>
        <name>hpm_dsp_conv_partial_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>startindex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convolution Partial of the q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">startindex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns 0; success -1; fail, the input subset are not between 0 and len1+len2-2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3778" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3778" bodyend="3788"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gab27a4b274c01206e3f70b75f8c86ec75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_conv_partial_q31</definition>
        <argsstring>(q31_t *src1, uint32_t len1, q31_t *src2, uint32_t len2, q31_t *dst, uint32_t startindex, uint32_t size)</argsstring>
        <name>hpm_dsp_conv_partial_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>startindex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convolution Partial of the q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">startindex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns 0; success -1; fail, the input subset are not between 0 and len1+len2-2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3804" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3804" bodyend="3814"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gad5733aa4a0ad65f41de2c0cbcc7ae39f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_conv_partial_q7</definition>
        <argsstring>(q7_t *src1, uint32_t len1, q7_t *src2, uint32_t len2, q7_t *dst, uint32_t startindex, uint32_t size)</argsstring>
        <name>hpm_dsp_conv_partial_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>startindex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convolution Partial of the q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">startindex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first output sample to start with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of output points to be computed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns 0; success -1; fail, the input subset are not between 0 and len1+len2-2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3830" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3830" bodyend="3840"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga65a88836464f37af1f450e9700015e9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_corr_f32</definition>
        <argsstring>(float32_t *src1, uint32_t len1, float32_t *src2, uint32_t len2, float32_t *dst)</argsstring>
        <name>hpm_dsp_corr_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Correlation of the floating-point vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is 2 * max(len1, len2) - 1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3853" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3853" bodyend="3862"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gad1f7dcf423229ee704843c3662a2a282" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_corr_q15</definition>
        <argsstring>(q15_t *src1, uint32_t len1, q15_t *src2, uint32_t len2, q15_t *dst)</argsstring>
        <name>hpm_dsp_corr_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Correlation of the q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is 2 * max(len1, len2) - 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both inputs are in 1.15 format and multiplications yield a 2.30 result. The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format. The 34.30 result is then truncated to 34.15 format by discarding the low 15 bits and then saturated to 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3879" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3879" bodyend="3888"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga01227b2a5c3c1a9729d43d76cbd08a82" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_corr_q31</definition>
        <argsstring>(q31_t *src1, uint32_t len1, q31_t *src2, uint32_t len2, q31_t *dst)</argsstring>
        <name>hpm_dsp_corr_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Convolution of the q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is len1 + len2 - 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both inputs are in 1.31 format and the 64-bit accumulator has a 2.62 format and maintains full precision of the intermediate multiplication results but provides only a single guard bit. The input signals should be scaled down to avoid intermediate overflows. Scale down one of the inputs by <computeroutput>1/min(srcALen, srcBLen)</computeroutput> to avoid overflows since a maximum of <computeroutput>min(srcALen, srcBLen)</computeroutput> number of additions is carried internally. The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 forma t to yield the final result. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3909" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3909" bodyend="3918"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga158701e4c93246b5c5386fd7a5acb09c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_corr_q7</definition>
        <argsstring>(q7_t *src1, uint32_t len1, q7_t *src2, uint32_t len2, q7_t *dst)</argsstring>
        <name>hpm_dsp_corr_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Correlation of the q7 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len1</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len2</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the second input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector where the length is 2 * max(len1, len2) - 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Function notes: Both inputs are in 1.7 format and multiplications yield a 2.14 result. The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 format. The 18.14 result is then truncated to 18.7 format by discarding the low 7 bits and then saturated to 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3935" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3935" bodyend="3944"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga1f8993a488451f5360a77eafdf7c0c6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_df1_f32</definition>
        <argsstring>(const riscv_dsp_bq_df1_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_df1_f32</name>
        <param>
          <type>const riscv_dsp_bq_df1_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3945" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3945" bodyend="3950"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gaccc9a7154e1ba085eb4fbc6641a488b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_df1_q15</definition>
        <argsstring>(const riscv_dsp_bq_df1_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_df1_q15</name>
        <param>
          <type>const riscv_dsp_bq_df1_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3951" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3951" bodyend="3956"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga41d6c66ee80146c1d127e12258f4eca2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_df1_fast_q15</definition>
        <argsstring>(const riscv_dsp_bq_df1_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_df1_fast_q15</name>
        <param>
          <type>const riscv_dsp_bq_df1_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3957" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3957" bodyend="3962"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gad9fa617a5e2b37b24ec11af415378d50" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_df1_q31</definition>
        <argsstring>(const riscv_dsp_bq_df1_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_df1_q31</name>
        <param>
          <type>const riscv_dsp_bq_df1_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3963" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3963" bodyend="3968"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gacc95120b95f3f066dca0367dc648d174" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_df1_fast_q31</definition>
        <argsstring>(const riscv_dsp_bq_df1_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_df1_fast_q31</name>
        <param>
          <type>const riscv_dsp_bq_df1_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3969" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3969" bodyend="3974"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga05f9ac5550291bd6ac2cf46dbeb38325" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_df1_32x64_q31</definition>
        <argsstring>(const riscv_dsp_bq_df1_32x64_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_df1_32x64_q31</name>
        <param>
          <type>const riscv_dsp_bq_df1_32x64_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3975" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3975" bodyend="3980"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga53cf5366d6fb61264485bafa050bb5b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_df2T_f32</definition>
        <argsstring>(const riscv_dsp_bq_df2T_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_df2T_f32</name>
        <param>
          <type>const riscv_dsp_bq_df2T_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3981" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3981" bodyend="3986"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga3a83d5794ebc3bfe9a45870101adf2d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_df2T_f64</definition>
        <argsstring>(const riscv_dsp_bq_df2T_f64_t *instance, float64_t *src, float64_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_df2T_f64</name>
        <param>
          <type>const riscv_dsp_bq_df2T_f64_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3987" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3987" bodyend="3992"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gaeb6bcbf2fd3f2173d2f8268f045a5837" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_bq_stereo_df2T_f32</definition>
        <argsstring>(const riscv_dsp_bq_stereo_df2T_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_bq_stereo_df2T_f32</name>
        <param>
          <type>const riscv_dsp_bq_stereo_df2T_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="3993" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="3993" bodyend="3998"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gac7d4aa7ae687f7be1439de813601246a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_liir_f32</definition>
        <argsstring>(const riscv_dsp_liir_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_liir_f32</name>
        <param>
          <type>const riscv_dsp_liir_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4000" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4000" bodyend="4005"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gab2c9912a4eb3cf9f83365aec9a83a4f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_liir_q31</definition>
        <argsstring>(const riscv_dsp_liir_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_liir_q31</name>
        <param>
          <type>const riscv_dsp_liir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4006" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4006" bodyend="4011"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga49d94f3232a999428c84fea54b517bec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_liir_fast_q31</definition>
        <argsstring>(const riscv_dsp_liir_q31_t *instance, q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_liir_fast_q31</name>
        <param>
          <type>const riscv_dsp_liir_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4012" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4012" bodyend="4017"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1ga1ac87e633f1ffaf64c564bc42418774c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_liir_q15</definition>
        <argsstring>(const riscv_dsp_liir_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_liir_q15</name>
        <param>
          <type>const riscv_dsp_liir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4018" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4018" bodyend="4023"/>
      </memberdef>
      <memberdef kind="function" id="group__filtering_1gad570347c20680570d1b3638ce58589e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_liir_fast_q15</definition>
        <argsstring>(const riscv_dsp_liir_q15_t *instance, q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_liir_fast_q15</name>
        <param>
          <type>const riscv_dsp_liir_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4024" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4024" bodyend="4029"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga9c803c210d7ac4b76fb44924660482b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_add_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_add_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Addition of two floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4078" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4078" bodyend="4087"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaa94129caac06a0bf0e755f3160f6ff57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_add_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_add_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Addition of two q15 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4099" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4099" bodyend="4108"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga37263640ebdd852d21bb736a562cbdd0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_add_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_add_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Addition of two q31 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4120" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4120" bodyend="4129"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga28939f8f448b65162dbe7b838443d04c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_mat_inv_f32</definition>
        <argsstring>(float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mat_inv_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the inverse matrix of the floating-potint matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix row or column. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the inverse process success or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4139" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4139" bodyend="4148"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaf7d1195891303f68429f9aeacc527354" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_mat_inv_f64</definition>
        <argsstring>(float64_t *src, float64_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mat_inv_f64</name>
        <param>
          <type>float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4149" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4149" bodyend="4158"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga2694ba40e6702c8e09d75240e25e3b28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two floating-point matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4170" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4170" bodyend="4179"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga3ed426c85b8cd96dca5053caa6b51a45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_f64</definition>
        <argsstring>(const float64_t *src1, const float64_t *src2, float64_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float64_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4181" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4181" bodyend="4190"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga2819c13d6a4ece1dde56f110538f12a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmat_mul_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_cmat_mul_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two floating-point complex matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4201" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4201" bodyend="4210"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gae839a9b987734e96b8fd51643cbc01d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q15 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is multiplied yields a 2.30 format, and then added without saturation to a 64-bit accumulator in 34.30 format. Finally, the added output is truncated to 34.15 format by discarding the lower 15 bits, and then saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4228" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4228" bodyend="4237"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga7c65498af11d1d5a4936a1f47d3342ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_fast_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_fast_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4238" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4238" bodyend="4247"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga5ce2d2f57c1a36afdef01f60c81356ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmat_mul_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_cmat_mul_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q15 complex matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is multiplied yields a 2.30 format, and then added without saturation to a 64-bit accumulator in 34.30 format. Finally, the added output is truncated to 34.15 format by discarding the lower 15 bits, and then saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4265" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4265" bodyend="4274"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga59cf991946f20e6faee1c8d072817b48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q31 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is multiplied yields a 2.62 format. In order to avoid overflows, the input signal must be scaled down by <computeroutput>log2(col)</computeroutput> bits, Finally, the 2.62 accumulator is right shifted by 31 bits to yield a 1.31 format value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4292" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4292" bodyend="4301"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga505cc734fa70e616ce922a3773d7d058" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_fast_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_fast_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4302" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4302" bodyend="4311"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga6cbad2e069f4544598e4496b0b011a9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmat_mul_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_cmat_mul_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q31 complex matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is multiplied yields a 2.62 format. In order to avoid overflows, the input signal must be scaled down by <computeroutput>log2(col)</computeroutput> bits, Finally, the 2.62 accumulator is right shifted by 31 bits to yield a 1.31 format value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4329" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4329" bodyend="4338"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gab3821d447640e097bba2ea057bec2101" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_q7</definition>
        <argsstring>(const q7_t *src1, const q7_t *src2, q7_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q7 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.7 format input is multiplied yields a 2.15 format, and then added without saturation to a 32-bit accumulator in 17.15 format. Finally, the added output is truncated to 17.7 format by discarding the lower 7 bits, and then saturated to yield a result in 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4356" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4356" bodyend="4361"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga2be8e4b55feddf562f067c7f760da3c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_vxm_q7</definition>
        <argsstring>(const q7_t *src1, const q7_t *src2, q7_t *dst, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_vxm_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of q7 vetor by matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input vector columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.7 format input is multiplied yields a 2.15 format, and then added without saturation to a 32-bit accumulator in 17.15 format. Finally, the added output is truncated to 17.7 format by discarding the lower 7 bits, and then saturated to yield a result in 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4378" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4378" bodyend="4387"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gac3359bda42ba8700416d0c264bf10f61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_mat_pwr2_cache_f64</definition>
        <argsstring>(const float64_t *src, float64_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mat_pwr2_cache_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4392" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4392" bodyend="4397"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaaff144f0790d2ba09cb379209ffc37f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_scale_f32</definition>
        <argsstring>(const float32_t *src, float32_t scale, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_scale_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Multiplt a scale value of floating-potint matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>is the factor to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4408" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4408" bodyend="4417"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga4f0aa12d7d196af65d3c18500a3e246d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_scale_q15</definition>
        <argsstring>(const q15_t *src, q15_t scale_fract, int32_t shift, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_scale_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>scale_fract</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Multiplt a scale value of q15 matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale_fract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional multiplication. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>arithmetic shift. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.15 format inputs are multiplied to yield a 2.30 intermediate result and this is shifted with saturation to 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4433" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4433" bodyend="4442"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gae9852e3b101f40e5942ea1f5d7efa51f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_scale_q31</definition>
        <argsstring>(const q31_t *src, q31_t scale_fract, int32_t shift, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_scale_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>scale_fract</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Multiplt a scale value of q31 matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale_fract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional multiplication. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>arithmetic shift. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.31 format input are multiplied to yield a 2.62 intermediate result and this is shifted with saturation to 1.31 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4458" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4458" bodyend="4467"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga980f22a064fdbde8e2ff587b71c9f117" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_sub_f64</definition>
        <argsstring>(const float64_t *src1, const float64_t *src2, float64_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_sub_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float64_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Substraction of two double-precision floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in a matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in a matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4480" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4480" bodyend="4490"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga1157c9dc698c5ae412cf2b3ed61de494" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_sub_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_sub_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Substraction of two floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4500" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4500" bodyend="4509"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gafe8389f7178c599543913998896bbe33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_sub_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_sub_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Substraction of two q15 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4521" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4521" bodyend="4530"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaf1b3af7f3e77fb0d79f3ba00b16186dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_sub_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_sub_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Substraction of two q31 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4542" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4542" bodyend="4551"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga5a129095818accd33181ad52ae0132c6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_f64</definition>
        <argsstring>(const float64_t *src, float64_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the double-precision floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in a matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in a matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4563" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4563" bodyend="4572"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga6d6c9a3a6e628cc39703fb08f698ef63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_f32</definition>
        <argsstring>(const float32_t *src, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the floating-potint matricex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4581" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4581" bodyend="4586"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga17ccb9100e8f31ce3c727ee4c3e32417" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_q15</definition>
        <argsstring>(const q15_t *src, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the q15 matricex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4595" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4595" bodyend="4604"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga8f103b765112d6f53f97b0a5048531d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_q31</definition>
        <argsstring>(const q31_t *src, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the q31 matricex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4613" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4613" bodyend="4622"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga4b88fdfcba817cbe325a932ee25a344f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_u8</definition>
        <argsstring>(const uint8_t *src, uint8_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_u8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the u8 matricex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4631" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4631" bodyend="4636"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaee21507f92a3762e2a876c1a5016f05e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_q7</definition>
        <argsstring>(const q7_t *src, q7_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the q7 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in a matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in a matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4646" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4646" bodyend="4651"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga1572b3f4872e2fc8559f65172d600e94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_oprod_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t size1, uint32_t size2)</argsstring>
        <name>hpm_dsp_mat_oprod_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size2</declname>
        </param>
        <briefdescription>
<para>Outer production of two q31 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input matrix with a size of size1*1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input matrix with a size of 1*size2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output matrix with a size of size1 * size2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size1</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the second input matrix.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>This function multiplies a one-column matrix with size1 rows, src1[size1, 1], with a one-row matrix with size2 columns, src2[1, size2], and stores the result into a matrix with size1 rows and size2 columns, dst[size1, size2]. It achieves better efficiency for vector-wise matrix multiplication than for regular matrix multiplication.</para>
<para><bold>Example</bold> <preformatted>
The following equation shows the outer product of two matrices and its result.


Its code example is as follows:

     #define Arow 3
     #define Bcol 2
     q31_t src1[Arow] = {0x200000, 0x100000, 0x50000};
     q31_t src2[Bcol] = {0x10000, 0x30000};
     q31_t dst[Arow * Bcol];
     hpm_dsp_mat_oprod_q31 (src1, src2, dst, Arow, Bcol);
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4684" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4684" bodyend="4694"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga1cbd7d2efa0ea89ef9e13c11941917d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_mxv_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_mul_mxv_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Matrix multiply vector for f32 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix and the elements size of vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example</bold> <preformatted>

    #define Arow               2
    #define Acol               3
    float32_t src1[Arow * Acol] = {0.1, -0.1, 0.1, 0.2, -0.2, 0.3};
    float32_t src2[Acol] = {0.2, -0.1, -0.7};
    float32_t dst[Arow];
    hpm_dsp_mat_mul_mxv_f32 (src1, src2, dst, Arow, Acol);

This example also serves as a reference for examples of Q31, Q15 or Q7 functions.
 </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4718" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4718" bodyend="4728"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga511423c60883438ad6527712fb578342" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_mxv_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_mul_mxv_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Matrix multiply vector for q15 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix and the elements size of vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4738" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4738" bodyend="4748"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga70dc9d3a349273b985194460e605a51a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_mxv_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_mul_mxv_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Matrix multiply vector for q31 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix and the elements size of vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4758" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4758" bodyend="4768"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gab231aaccfb8b2484bb5f38b6ac3c2a99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_mxv_q7</definition>
        <argsstring>(const q7_t *src1, const q7_t *src2, q7_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_mul_mxv_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Matrix multiply vector for q7 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix and the elements size of vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4778" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4778" bodyend="4788"/>
      </memberdef>
      <memberdef kind="function" id="group__svm_1ga1a59d30d42fe201e344ad948de30ef3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_svm_linear_est_f32</definition>
        <argsstring>(const riscv_dsp_svm_linear_f32_t *instance, const float32_t *src, int32_t *result)</argsstring>
        <name>hpm_dsp_svm_linear_est_f32</name>
        <param>
          <type>const riscv_dsp_svm_linear_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>SVM linear prediction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of the linear SVM structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Decision value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4818" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4818" bodyend="4823"/>
      </memberdef>
      <memberdef kind="function" id="group__svm_1gae9873850460ccea25cd3953c5255b98f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_svm_sigmoid_est_f32</definition>
        <argsstring>(const riscv_dsp_svm_sigmoid_f32_t *instance, const float32_t *src, int32_t *result)</argsstring>
        <name>hpm_dsp_svm_sigmoid_est_f32</name>
        <param>
          <type>const riscv_dsp_svm_sigmoid_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>SVM Sigmoid prediction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of the linear SVM structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Decision value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4832" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4832" bodyend="4837"/>
      </memberdef>
      <memberdef kind="function" id="group__svm_1gaa16df16028a3ed4909174b4607d4486f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_svm_rbf_est_f32</definition>
        <argsstring>(const riscv_dsp_svm_rbf_f32_t *instance, const float32_t *src, int32_t *result)</argsstring>
        <name>hpm_dsp_svm_rbf_est_f32</name>
        <param>
          <type>const riscv_dsp_svm_rbf_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>SVM rbf prediction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of the linear SVM structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Decision value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4846" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4846" bodyend="4851"/>
      </memberdef>
      <memberdef kind="function" id="group__svm_1gac05e2ecb8e33cb8f2eab649ac01a34aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_svm_poly_est_f32</definition>
        <argsstring>(const riscv_dsp_svm_poly_f32_t *instance, const float32_t *src, int32_t *result)</argsstring>
        <name>hpm_dsp_svm_poly_est_f32</name>
        <param>
          <type>const riscv_dsp_svm_poly_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>SVM polynomial prediction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of the linear SVM structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Decision value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4860" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4860" bodyend="4865"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga1ca5d48ae62a65107507c38c790e385e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cfft_rd2_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_rd2_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft_rd2 of f32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Example</bold> <preformatted>
Given 128 samples (that is, FFT_LOGN = 7), the example of floating-point Radix-2 CFFT and
CIFFT is as follows:
     #define FFT_LOGN 7
     float32_t src[2* (1 &lt;&lt; FFT_LOGN)] = {};
     int32_t ret;
     ret = hpm_dsp_cfft_rd2_f32(src, FFT_LOGN);
     if (ret == 0)
         Success
     Else
         Fail
     ret = hpm_dsp_cifft_rd2_f32(src, FFT_LOGN);
     if (ret == 0)
          Success
     Else
          Fail

This example also serves as a reference for examples of Q31 and Q15 Radix-2 CFFT and
CIFFT functions.
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4916" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4916" bodyend="4925"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga8f8a9339650f53476e976474f3303129" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cifft_rd2_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_rd2_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft_rd2 of f32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4934" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4934" bodyend="4944"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gad0224df7d8e32c31149ce9cdf2c55707" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cfft_rd2_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_rd2_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft_rd2 of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4959" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4959" bodyend="4968"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gae7fb6317f565c4d11559678ff18ed955" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cifft_rd2_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_rd2_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft_rd2 of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4983" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4983" bodyend="4992"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga8fc38e35f132462a9a4b34ab216b7196" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cfft_rd2_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_rd2_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft_rd2 of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5007" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5007" bodyend="5017"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga571b6dee2ca287f93d546a3e62df172e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cifft_rd2_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_rd2_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft_rd2 of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5032" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5032" bodyend="5042"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gadffca35ffc5078eec074116a599225af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cfft_rd4_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_rd4_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft_rd4 of f32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set as 4, 6, 8 or 10 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Example</bold> <preformatted>
Given 256 samples (that is, FFT_LOGN = 8), the example of floating-point Radix-4 CFFT and
CIFFT is as follows:
     #define FFT_LOGN 8
     float32_t src[2* (1 &lt;&lt; FFT_LOGN)] = {};
     int32_t ret;
     ret = hpm_dsp_cfft_rd4_f32(src, FFT_LOGN);
     if (ret == 0)
         Success
     Else
         Fail
     ret = riscv_dsp_cifft_rd4_f32(src, FFT_LOGN);
     if (ret == 0)
         Success
     Else
         Fail

This example also serves as a reference for examples of Q31 or Q15 Radix-4 CFFT and
CIFFT functions.
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5073" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5073" bodyend="5083"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga7af4f1d3c15b67eed5f21726bb0f404c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cifft_rd4_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_rd4_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft_rd4 of f32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set as 4, 6, 8 or 10 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5092" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5092" bodyend="5101"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga773ad5f6dbd964231307fed9a53d9b50" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cfft_rd4_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_rd4_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft_rd4 of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set as 4, 6, 8 or 10 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5116" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5116" bodyend="5125"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga34edf2668cdf71c343eb37367b4f8d60" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cifft_rd4_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_rd4_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft_rd4 of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set as 4, 6, 8 or 10 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5140" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5140" bodyend="5149"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga4fd0b94ec991439b7c6bd022fca0caae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cfft_rd4_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_rd4_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft_rd4 of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set as 4, 6, 8 or 10 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5164" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5164" bodyend="5173"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gad85c0cf525a168fe33a2f14217926871" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_cifft_rd4_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_rd4_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft_rd4 of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set as 4, 6, 8 or 10 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5188" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5188" bodyend="5197"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga6187157d51fd9cc481346deb207ac680" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cfft_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft of f32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example</bold> <preformatted>
Given 128 samples (that is, FFT_LOGN = 7), the example of floating-point CFFT and
CIFFT is as follows:
     #define FFT_LOGN 7
     float32_t src[2* (1 &lt;&lt; FFT_LOGN)] = {};
     int32_t ret;
     hpm_dsp_cfft_f32(src, FFT_LOGN);
     hpm_dsp_cifft_f32(src, FFT_LOGN);

This example also serves as a reference for examples of F16, F64, Q31 and Q15 CFFT and
CIFFT functions.
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5219" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5219" bodyend="5228"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga25328b55bccd5470a5241f207db32889" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cfft_f64</definition>
        <argsstring>(float64_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_f64</name>
        <param>
          <type>float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft of f64 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5236" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5236" bodyend="5245"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga2d1b6b117ceffd15340befdc2459cd5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cifft_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft of f32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5253" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5253" bodyend="5262"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga80d30593248d81b533431bce10835bf3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cifft_f64</definition>
        <argsstring>(float64_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_f64</name>
        <param>
          <type>float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft of f64 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5270" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5270" bodyend="5279"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga5ff435e352bd69171ebbc599e4e20b91" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cfft_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5294" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5294" bodyend="5303"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga0965bc052276e874a04f766dc2263cd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cifft_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5317" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5317" bodyend="5326"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga853a2cba60d4ca179ed4ddb1dc59f564" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cfft_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cfft_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cfft of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5340" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5340" bodyend="5349"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga777ed959fbe108e28adf4f8b941fba0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cifft_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_cifft_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>cifft of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 13</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5363" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5363" bodyend="5372"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gaedb73a0185a23a37fc3a62e5830d174c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_rfft_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_rfft_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>rfft of f32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 4 to 14 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Example</bold> <preformatted>
Given 128 samples (that is, FFT_LOGN = 7), the example of floating-point RFFT and RIFFT
is as follows:
     #define FFT_LOGN 7
     float32_t src[(1 &lt;&lt; FFT_LOGN)] = {};
     int32_t ret;
     ret = hpm_dsp_rfft_f32(src, FFT_LOGN);
     if (ret == 0)
         Success
     else
         Fail
     ret = riscv_dsp_rifft_f32(src, FFT_LOGN);
     if (ret == 0)
         Success
     else
         Fail

This example also serves as a reference for examples of Q31 or Q15 RFFT and RIFFT
functions.
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5403" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5403" bodyend="5412"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga73d9e92c9fed62ba566d03c4887928d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_rfft_f64</definition>
        <argsstring>(float64_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_rfft_f64</name>
        <param>
          <type>float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>rfft of f64 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 4 to 14 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5421" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5421" bodyend="5430"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga4162f89a895be19f3a6115040caf68cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_rifft_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_rifft_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>rifft of f32 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 4 to 14 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5439" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5439" bodyend="5444"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gac7fbf1b2ff9de4cdd41ac57f2f61218e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_rifft_f64</definition>
        <argsstring>(float64_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_rifft_f64</name>
        <param>
          <type>float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>rifft of f64 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 4 to 14 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5453" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5453" bodyend="5458"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gabc4c70ef2b76bb2d5f9ceee7eca852dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_rfft_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_rfft_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>rfft of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 4 to 14 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5473" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5473" bodyend="5478"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga505fbc56b39ce54d16d4ebd0a5f96bff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_rifft_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_rifft_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>rifft of q15 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 4 to 14 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5493" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5493" bodyend="5498"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gaab3001c9fef7ae187ee349e86ceb99c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_rfft_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_rfft_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>rfft of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 4 to 14 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5513" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5513" bodyend="5518"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga626758fc27f839e2cf75fa53c405f918" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_rifft_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_rifft_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>rifft of q31 vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 4 to 14 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success; -1 failure</para>
</simplesect>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5533" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5533" bodyend="5538"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga7f8d458e22b61d58fb1800a728da2b9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dct_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_dct_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 8</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example</bold> <preformatted>
Given 256 samples (that is, FFT_LOGN = 8), the example of floating-point (DCT) type II and
IDCT is as follows:
     #define FFT_LOGN 8
     float32_t src[(1 &lt;&lt; FFT_LOGN)] = {};
     riscv_dsp_dct_f32(src, FFT_LOGN);
     riscv_dsp_idct_f32(src, FFT_LOGN);
This example also serves as a reference for examples of Q31 or Q15 DCT type II and IDCT
functions.
 </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5558" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5558" bodyend="5563"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga72de4b5b653430b7d6ceaa1a5d1e28b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_idct_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_idct_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 8 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5571" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5571" bodyend="5576"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gaa17a75e3643c6539a835486a9ba2c7a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dct_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_dct_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 8</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5590" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5590" bodyend="5595"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga6d883eaf5ba24d31dd7a9fea16db8124" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_idct_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_idct_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 8</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5609" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5609" bodyend="5614"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga677a6eb14053beb4034903b19e2b9138" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dct_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_dct_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 8</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5628" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5628" bodyend="5633"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga945efbfea727d0f813b5953316b36f92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_idct_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_idct_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 8</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5647" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5647" bodyend="5652"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gaf5ff7cda593cb1c4f299cd4af3048f6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dct4_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_dct4_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 7</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example</bold> <preformatted>
Given 128 samples (that is, FFT_LOGN = 7), the example of floating-point DCT or IDCT type
IV transform is as follows:
     #define FFT_LOGN 7
     float32_t src[(1 &lt;&lt; FFT_LOGN)] = {};
     riscv_dsp_dct4_f32(src, FFT_LOGN);
     riscv_dsp_idct4_f32(src, FFT_LOGN);
This example also serves as a reference for examples of Q31 or Q15 DCT type IV and IDCT
functions.
 </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5672" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5672" bodyend="5677"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga730dbfa7e1d4dbefa7ecb6b2754f6bba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_idct4_f32</definition>
        <argsstring>(float32_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_idct4_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 7 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5685" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5685" bodyend="5690"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gac26604dc96991b421e2b222781d758bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dct4_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_dct4_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 7</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5704" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5704" bodyend="5709"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gabeb2e269c1c024e993bcba4fd40f79c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_idct4_q15</definition>
        <argsstring>(q15_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_idct4_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 7</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5723" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5723" bodyend="5728"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga1239d88d30b23ea5f088ac2999f45b9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dct4_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_dct4_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 7</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5742" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5742" bodyend="5747"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1ga28ba4965c2ec93d686de73a09e17f332" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_idct4_q31</definition>
        <argsstring>(q31_t *src, uint32_t m)</argsstring>
        <name>hpm_dsp_idct4_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector. After the function is executed, the output will be stored in the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>base 2 logarithm value of the sample number and it can be set from 3 to 7</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>The input and output formats are listed below. To satisfy the input format corresponding to your input size, you may need to perform an arithmetic shift operation before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5761" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5761" bodyend="5766"/>
      </memberdef>
      <memberdef kind="function" id="group__transform_1gad95aa86da64b9d2875dd28fff34e051f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_software_cfft_float</definition>
        <argsstring>(float *src, uint32_t m)</argsstring>
        <name>hpm_software_cfft_float</name>
        <param>
          <type>float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Software implementation does not depend on any hardware. </para>
        </briefdescription>
        <detaileddescription>
<para>Construct a new hpm software cfft float object</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>requires double the space than other interfaces, 0-n for input data, n-2n for buffers, 0-n for output data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>2^n sampling points, including real and imaginary parts </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5779" column="6" declfile="middleware/hpm_math/hpm_math.h" declline="5779" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga7e4bbcbd760fc14de077c38234ac538f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_cos_f32</definition>
        <argsstring>(float32_t src)</argsstring>
        <name>hpm_dsp_cos_f32</name>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5930" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5930" bodyend="5935"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga468215784f4d4400defaa6acef8a0401" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_cos_q31</definition>
        <argsstring>(q31_t src)</argsstring>
        <name>hpm_dsp_cos_q31</name>
        <param>
          <type>q31_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5936" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5936" bodyend="5941"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga773f3965784f075a04bf66bef78c9e78" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_cos_q15</definition>
        <argsstring>(q15_t src)</argsstring>
        <name>hpm_dsp_cos_q15</name>
        <param>
          <type>q15_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5942" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5942" bodyend="5947"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga175ff455536e5b77ae1308600c848ae3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_sin_f32</definition>
        <argsstring>(float32_t src)</argsstring>
        <name>hpm_dsp_sin_f32</name>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5949" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5949" bodyend="5954"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga3d112d6fd3a522e74f1e3548feab0566" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_sin_q31</definition>
        <argsstring>(q31_t src)</argsstring>
        <name>hpm_dsp_sin_q31</name>
        <param>
          <type>q31_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5969" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5969" bodyend="5974"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga69d4a783fcc2abb2015cc390beb031f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_sin_q15</definition>
        <argsstring>(q15_t src)</argsstring>
        <name>hpm_dsp_sin_q15</name>
        <param>
          <type>q15_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5975" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5975" bodyend="5980"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gafe5ada05928262a89504aaee8ba417da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_atan_f32</definition>
        <argsstring>(float32_t src)</argsstring>
        <name>hpm_dsp_atan_f32</name>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5983" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5983" bodyend="5988"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gac23fd38f9e6a406dbb8ac3fc479e3245" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_atan_q31</definition>
        <argsstring>(q31_t src)</argsstring>
        <name>hpm_dsp_atan_q31</name>
        <param>
          <type>q31_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5989" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5989" bodyend="5994"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga393a80de559a7d1ee610ce5e04eb24af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_atan_q15</definition>
        <argsstring>(q15_t src)</argsstring>
        <name>hpm_dsp_atan_q15</name>
        <param>
          <type>q15_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="5995" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="5995" bodyend="6000"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga04dc117b2de11d75a69902a54e7fded3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_atan2_f32</definition>
        <argsstring>(float32_t srcy, float32_t src2)</argsstring>
        <name>hpm_dsp_atan2_f32</name>
        <param>
          <type>float32_t</type>
          <declname>srcy</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6001" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6001" bodyend="6006"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga908c1dc32ff4e098feb32fb3408d14b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_atan2_q15</definition>
        <argsstring>(q15_t srcy, q15_t src2)</argsstring>
        <name>hpm_dsp_atan2_q15</name>
        <param>
          <type>q15_t</type>
          <declname>srcy</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6007" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6007" bodyend="6012"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga51b478a0a928d8f7afd96f26e88e9479" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_atan2_q31</definition>
        <argsstring>(q31_t srcy, q31_t src2)</argsstring>
        <name>hpm_dsp_atan2_q31</name>
        <param>
          <type>q31_t</type>
          <declname>srcy</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6013" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6013" bodyend="6018"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gaf14c35d88ea97bd853ec49823f30f1da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_sqrt_f32</definition>
        <argsstring>(float32_t src)</argsstring>
        <name>hpm_dsp_sqrt_f32</name>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Square root of the floating-potint input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the suqare root of input. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6026" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6026" bodyend="6031"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gae743c9c18307a7aecfa85b394635fbe5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_sqrt_q31</definition>
        <argsstring>(q31_t src)</argsstring>
        <name>hpm_dsp_sqrt_q31</name>
        <param>
          <type>q31_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Square root of the q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the suqare root of input. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6038" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6038" bodyend="6043"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gaf7cdd087a8aed0fcf491accd9c2d8f30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_sqrt_q15</definition>
        <argsstring>(q15_t src)</argsstring>
        <name>hpm_dsp_sqrt_q15</name>
        <param>
          <type>q15_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Square root of the q15 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the suqare root of input. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6050" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6050" bodyend="6055"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gaaa78e6411115c7842b2df043321e424a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_f32_q15</definition>
        <argsstring>(float32_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_f32_q15</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a floating-point vector to Q15. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>yhe output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6064" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6064" bodyend="6069"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga4387b63088cf9467c4e0c91896cafb27" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_f32_q31</definition>
        <argsstring>(float32_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_f32_q31</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a floating-point vector to Q31. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6077" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6077" bodyend="6086"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gadc52cf24308d6a988d3b250f4118fc40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_f32_q7</definition>
        <argsstring>(float32_t *src, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_f32_q7</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a floating-point vector to Q7. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6094" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6094" bodyend="6099"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gad35ebf4471d2f19b92c396fe1f69d395" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q15_f32</definition>
        <argsstring>(q15_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q15_f32</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q15 vector to floating. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6107" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6107" bodyend="6112"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga74a78cb4250a1315245ef9a368c013e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q15_q31</definition>
        <argsstring>(q15_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q15_q31</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q15 vector to Q31. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6120" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6120" bodyend="6125"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga6098e340f118a4696d20f69355813dfd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q15_q7</definition>
        <argsstring>(q15_t *src, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q15_q7</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q15 vector to Q7. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6133" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6133" bodyend="6138"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga349c51d4a58ab780a0f6f5a678e9c4a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q31_f32</definition>
        <argsstring>(q31_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q31_f32</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q31 vector to floating. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6146" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6146" bodyend="6155"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga08053411718969882cc6188cab69fb8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q31_q15</definition>
        <argsstring>(q31_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q31_q15</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q31 vector to Q15. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6163" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6163" bodyend="6168"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga970243b781a73347cf0ae83dd1c136f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q31_q7</definition>
        <argsstring>(q31_t *src, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q31_q7</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q31 vector to Q7. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6176" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6176" bodyend="6181"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gacae3332ad6528f43e3d2f0ce0048bf05" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q7_f32</definition>
        <argsstring>(q7_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q7_f32</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q7 vector to floating. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6189" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6189" bodyend="6194"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga927e0599008aaf6f24445ddd6d5e6336" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q7_q15</definition>
        <argsstring>(q7_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q7_q15</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q7 vector to Q15. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6202" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6202" bodyend="6207"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gac3264c4acd4ba63309f31e72e9d9c052" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_convert_q7_q31</definition>
        <argsstring>(q7_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_convert_q7_q31</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert a Q7 vector to Q31. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6215" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6215" bodyend="6220"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga00cdf474183312115ef1e7f44246ebcf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dup_f32</definition>
        <argsstring>(float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dup_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Duplicate the floating vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6229" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6229" bodyend="6234"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga6a412067cd4782b28c899146e9e64861" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dup_q15</definition>
        <argsstring>(q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dup_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Duplicate the Q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6242" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6242" bodyend="6247"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga5553c018cd0f0db9ee6794ddb200f235" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dup_q31</definition>
        <argsstring>(q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dup_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Duplicate the Q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6255" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6255" bodyend="6260"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gaf33ce8d451a7ba6b2ceb3fc38eea943e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_dup_q7</definition>
        <argsstring>(q7_t *src, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_dup_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Duplicate the Q7 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6268" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6268" bodyend="6273"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga03172fd7f53ce18f8e5953d8ebf84d2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_set_f32</definition>
        <argsstring>(float32_t val, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_set_f32</name>
        <param>
          <type>float32_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the floating-point vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>specify floating-point value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6282" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6282" bodyend="6287"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga10c74d0d6d3e46004c03388e5a267c15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_set_q15</definition>
        <argsstring>(q15_t val, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_set_q15</name>
        <param>
          <type>q15_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the Q15 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>specify Q15 value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6295" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6295" bodyend="6300"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga6520fc013982084f5f721dd8071ab37a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_set_q31</definition>
        <argsstring>(q31_t val, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_set_q31</name>
        <param>
          <type>q31_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the Q31 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>specify Q31 value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6308" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6308" bodyend="6313"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gabed5d5c4392107745b6617f93c6a5216" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_set_q7</definition>
        <argsstring>(q7_t val, q7_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_set_q7</name>
        <param>
          <type>q7_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the Q7 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>specify Q7 value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6321" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6321" bodyend="6326"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gadaeb1d0e7fd56b71aad305e5d9d45fbe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_weighted_sum_f32</definition>
        <argsstring>(const float32_t *src, const float32_t *weight, uint32_t size)</argsstring>
        <name>hpm_dsp_weighted_sum_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Weighted Sum of the floating-potint vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*weight</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the weighted vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Weighted Sumvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6336" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6336" bodyend="6341"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga8830ad04914db72dc489c1b8cf9428cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_barycenter_f32</definition>
        <argsstring>(const float32_t *src, const float32_t *weights, float32_t *out, uint32_t numofvec, uint32_t dimofvec)</argsstring>
        <name>hpm_dsp_barycenter_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numofvec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dimofvec</declname>
        </param>
        <briefdescription>
<para>Barycenter of the floating-potint type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*weights</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the weighted vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*out</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the out vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numofvec</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dimofvec</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6352" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6352" bodyend="6357"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga11f689a21e3d687fbd563dc7668479ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_exp_f32</definition>
        <argsstring>(float32_t src)</argsstring>
        <name>hpm_dsp_exp_f32</name>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Calculate exponential value of f32 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>exponential value of the input </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6364" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6364" bodyend="6369"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1ga1db99f790f92ddd01f677abb9e14e788" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_sigmoid_f32</definition>
        <argsstring>(float32_t src)</argsstring>
        <name>hpm_dsp_sigmoid_f32</name>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Calculate sigmoid value of f32 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sigmoid value of the input </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6390" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6390" bodyend="6395"/>
      </memberdef>
      <memberdef kind="function" id="group__utils_1gaccf222717774a2e7f2fc3f8944a41653" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_log_f32</definition>
        <argsstring>(float32_t src)</argsstring>
        <name>hpm_dsp_log_f32</name>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Calculate the natural logarithm value of f32 vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>natural logarithm value of the input </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6416" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6416" bodyend="6421"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gabf8425ef3f2fd273785642b7e7b1aa8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sort_init_f32</definition>
        <argsstring>(riscv_dsp_sort_f32_t *instance, riscv_dsp_sort_alg alg, riscv_dsp_sort_order order)</argsstring>
        <name>hpm_dsp_sort_init_f32</name>
        <param>
          <type>riscv_dsp_sort_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>riscv_dsp_sort_alg</type>
          <declname>alg</declname>
        </param>
        <param>
          <type>riscv_dsp_sort_order</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the instance structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>desired sorting algorithm </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order</parametername>
</parameternamelist>
<parameterdescription>
<para>desired sorting order</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para><orderedlist>
<listitem><para>This function has to be called to initialize the instance structure before the function riscv_dsp_sort_f32 is executed. Please refer to code examples.</para>
</listitem><listitem><para>The possible sorting algorithms for the generic sorting (i.e., options for alg) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_BITONIC bitonic sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_BUBBLE bubble sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_HEAP heap sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_INSERTION insertion sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_QUICK quick sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_SELECTION selection sort</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The possible sorting orders for the generic sorting (i.e., options for order) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_DESCENDING descending order</para>
</listitem><listitem><para>RISCV_DSP_SORT_ASCENDING ascending order </para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6482" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6482" bodyend="6487"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga1d9fc7c29e5a7d2033fd25894047682e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sort_f32</definition>
        <argsstring>(const riscv_dsp_sort_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sort_f32</name>
        <param>
          <type>const riscv_dsp_sort_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Generic sorting function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the instance structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para><orderedlist>
<listitem><para>The possible sorting algorithms for the generic sorting (i.e., options for alg) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_BITONIC bitonic sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_BUBBLE bubble sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_HEAP heap sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_INSERTION insertion sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_QUICK quick sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_SELECTION selection sort</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The possible sorting orders for the generic sorting (i.e., options for order) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_DESCENDING descending order</para>
</listitem><listitem><para>RISCV_DSP_SORT_ASCENDING ascending order</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>To ensure correct results, you must initialize the instance structure with the function riscv_dsp_sort_init_f32 before using this function riscv_dsp_sort_f32. For how to use the two functions, please refer to the code examples below.</para>
</listitem></orderedlist>
</para>
<para><bold>Example</bold> <preformatted>
      With the input size as 100, sorting order as ascending and sorting algorithm as quick
      sort, the code example of generic sorting is as follows:

         #define size 100
         riscv_dsp_sort_f32_t *instance;
         float32_t src[size] = {};
         float32_t dst[size];
         riscv_dsp_sort_init_f32(instance, RISCV_DSP_SORT_QUICK,
         RISCV_DSP_SORT_ASCENDING);
         riscv_dsp_sort_f32(instance, src, dst, size);
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6529" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6529" bodyend="6534"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga0b681489294a482ee601d49a1fee29d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sort_merge_init_f32</definition>
        <argsstring>(riscv_dsp_sort_merge_f32_t *instance, riscv_dsp_sort_order order, float32_t *buf)</argsstring>
        <name>hpm_dsp_sort_merge_init_f32</name>
        <param>
          <type>riscv_dsp_sort_merge_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>riscv_dsp_sort_order</type>
          <declname>order</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order</parametername>
</parameternamelist>
<parameterdescription>
<para>desired sorting order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the working buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para><orderedlist>
<listitem><para>This function has to be called to initialize the instance structure before the function riscv_dsp_sort_merge_f32 is executed. Please refer to Section 2.11.2.2 for a code example.</para>
</listitem><listitem><para>The possible sorting orders for the merge sorting (i.e., options for order) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_DESCENDING descending order</para>
</listitem><listitem><para>RISCV_DSP_SORT_ASCENDING ascending order </para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6551" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6551" bodyend="6556"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga6251837945f09f43d0a67afa1d02e96a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sort_merge_f32</definition>
        <argsstring>(const riscv_dsp_sort_merge_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sort_merge_f32</name>
        <param>
          <type>const riscv_dsp_sort_merge_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Merge sort. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para><orderedlist>
<listitem><para>The possible sorting orders for the merge sorting (i.e., options for order) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_DESCENDING descending order</para>
</listitem><listitem><para>RISCV_DSP_SORT_ASCENDING ascending order</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>To ensure correct results, you must initialize the instance structure with the function riscv_dsp_sort_merge_init_f32 before using this function riscv_dsp_sort_merge_f32. For how to use the two functions, please refer to the code example below.</para>
</listitem></orderedlist>
</para>
<para><bold>Example</bold> <preformatted>
    With the input size as 100 and sorting order as descending, the code example of merge
    sorting is as follows:

    #define size 100
    riscv_dsp_sort_merge_f32_t *instance;
    float32_t src[size] = {};
    float32_t buf[size];
    float32_t dst[size];
    riscv_dsp_sort_merge_init_f32(instance, RISCV_DSP_SORT_DESCENDING, buf);
    riscv_dsp_sort_merge_f32(instance, src, dst, size);
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6591" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6591" bodyend="6596"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gab973a2a30b2016648bea995f4a737553" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void write_q15x2_ia</definition>
        <argsstring>(q15_t **pQ15, q31_t value)</argsstring>
        <name>write_q15x2_ia</name>
        <param>
          <type>q15_t **</type>
          <declname>pQ15</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6615" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6615" bodyend="6623"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gacd7f0bd117301b1be9027be69dee5ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_read_q15x2_ia</definition>
        <argsstring>(const q15_t **in_q15)</argsstring>
        <name>hpm_nn_read_q15x2_ia</name>
        <param>
          <type>const q15_t **</type>
          <declname>in_q15</declname>
        </param>
        <briefdescription>
<para>Read 2 q15 elements and post increment pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_q15</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pointer that holds address of input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>q31 value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6631" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6631" bodyend="6639"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gac2a74c274ace586d087007e626b31232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_sat_doubling_high_mult</definition>
        <argsstring>(const q31_t m1, const q31_t m2)</argsstring>
        <name>hpm_nn_sat_doubling_high_mult</name>
        <param>
          <type>const q31_t</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const q31_t</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
<para>Saturating doubling high multiply. Result matches NEON instruction VQRDMULH. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m1</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplicand </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m2</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of multiplication. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6649" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6649" bodyend="6664"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga436801bba206264415e0dd7053fd6c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_divide_by_power_of_two</definition>
        <argsstring>(const q31_t dividend, const q31_t exponent)</argsstring>
        <name>hpm_nn_divide_by_power_of_two</name>
        <param>
          <type>const q31_t</type>
          <declname>dividend</declname>
        </param>
        <param>
          <type>const q31_t</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
<para>Rounding divide by power of two. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dividend</parametername>
</parameternamelist>
<parameterdescription>
<para>- Dividend </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">exponent</parametername>
</parameternamelist>
<parameterdescription>
<para>- Divisor = power(2, exponent) Range: [0, 31] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rounded result of division. Midpoint is rounded away from zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6674" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6674" bodyend="6691"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga32e31fcb5f8c099f4d2ef3179c24d875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_requantize</definition>
        <argsstring>(const q31_t val, const q31_t multiplier, const q31_t shift)</argsstring>
        <name>hpm_nn_requantize</name>
        <param>
          <type>const q31_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const q31_t</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type>const q31_t</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6693" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6693" bodyend="6697"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gab003dc83165a70a246a3f1aac74eb664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_read_q7x4_ia</definition>
        <argsstring>(const q7_t **in_q7)</argsstring>
        <name>hpm_nn_read_q7x4_ia</name>
        <param>
          <type>const q7_t **</type>
          <declname>in_q7</declname>
        </param>
        <briefdescription>
<para>Read 4 q7 from q7 pointer and post increment pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_q7</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pointer that holds address of input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>q31 value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6704" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6704" bodyend="6712"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga9d1f0db58852a4dc34933e1210bc8aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE const q7_t *</type>
        <definition>__STATIC_FORCEINLINE const q7_t* read_and_pad_reordered</definition>
        <argsstring>(const q7_t *source, q31_t *out1, q31_t *out2)</argsstring>
        <name>read_and_pad_reordered</name>
        <param>
          <type>const q7_t *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>out1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>out2</declname>
        </param>
        <briefdescription>
<para>read and expand one q7 word into two q15 words with reordering </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6718" column="33" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6718" bodyend="6726"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga6a2c6bcfe2b10ede675aa740c24ea59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE const q7_t *</type>
        <definition>__STATIC_FORCEINLINE const q7_t* read_and_pad</definition>
        <argsstring>(const q7_t *source, q31_t *out1, q31_t *out2)</argsstring>
        <name>read_and_pad</name>
        <param>
          <type>const q7_t *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>out1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>out2</declname>
        </param>
        <briefdescription>
<para>read and expand one q7 word into two q15 words </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6732" column="33" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6732" bodyend="6742"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga1ac7adf059e961b703a237ecc917570c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE int32_t</type>
        <definition>__STATIC_FORCEINLINE int32_t hpm_nn_read_s8x4_ia</definition>
        <argsstring>(const int8_t **in_s8)</argsstring>
        <name>hpm_nn_read_s8x4_ia</name>
        <param>
          <type>const int8_t **</type>
          <declname>in_s8</declname>
        </param>
        <briefdescription>
<para>Read 4 s8 from s8 pointer and post increment pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_s8</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pointer that holds address of input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>q31 value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6749" column="30" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6749" bodyend="6757"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga2c643d3f7228d3c26dbe8db3289cd3d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE void</type>
        <definition>__STATIC_FORCEINLINE void hpm_nn_q7_to_q15_with_offset</definition>
        <argsstring>(const int8_t *src, int16_t *dst, int32_t block_size, int16_t offset)</argsstring>
        <name>hpm_nn_q7_to_q15_with_offset</name>
        <param>
          <type>const int8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>block_size</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6759" column="27" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6759" bodyend="6800"/>
      </memberdef>
      <memberdef kind="function" id="group__nnactivation_1gac909d6f396f354938fd91f745b41f4fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_activate_s8</definition>
        <argsstring>(q7_t *in_out, uint32_t size, uint16_t int_bits, riscv_nn_activation_fun act_fun)</argsstring>
        <name>hpm_nn_activate_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>in_out</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>int_bits</declname>
        </param>
        <param>
          <type>riscv_nn_activation_fun</type>
          <declname>act_fun</declname>
        </param>
        <briefdescription>
<para>This function uses the sigmoid or tanh function to perform activation for signed 8-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">in_out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the bits in the integer part, which is supposed to be smaller than 4 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_fun</parametername>
</parameternamelist>
<parameterdescription>
<para>selection of activation functions. See the Note below for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The available activation functions for selection include:<itemizedlist>
<listitem><para>NN_SIGMOID: Use the sigmoid activation function</para>
</listitem><listitem><para>NN_TANH: Use the tanh activation function</para>
</listitem></itemizedlist>
</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>SIZE<sp/>32</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_out[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">hpm_nn_activate_s8(in_out,<sp/>SIZE,<sp/>0,<sp/>NN_SIGMOID);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6843" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6843" bodyend="6853"/>
      </memberdef>
      <memberdef kind="function" id="group__nnactivation_1ga11bb53fefef60cb8c979319e638fddec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_activate_s16</definition>
        <argsstring>(q15_t *in_out, uint32_t size, uint16_t int_bits, riscv_nn_activation_fun act_fun)</argsstring>
        <name>hpm_nn_activate_s16</name>
        <param>
          <type>q15_t *</type>
          <declname>in_out</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>int_bits</declname>
        </param>
        <param>
          <type>riscv_nn_activation_fun</type>
          <declname>act_fun</declname>
        </param>
        <briefdescription>
<para>This function uses sigmoid or tanh function to perform activation for signed 16-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">in_out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the bits in the integer part, which is supposed to be smaller than 4 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_fun</parametername>
</parameternamelist>
<parameterdescription>
<para>selection of activation functions. See the Note below for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The availbale activation functions for selection include:<itemizedlist>
<listitem><para>NN_SIGMOID: Use the sigmoid activation function</para>
</listitem><listitem><para>NN_TANH: Use the tanh activation function </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6870" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6870" bodyend="6880"/>
      </memberdef>
      <memberdef kind="function" id="group__nnactivation_1ga377120517dc98545840980dfe5c871ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_leaky_relu_s8</definition>
        <argsstring>(q7_t *in_out, uint32_t size, q15_t slope) riscv_nn_leaky_relu_s8(in_out</argsstring>
        <name>hpm_nn_leaky_relu_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>in_out</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>slope</declname>
        </param>
        <briefdescription>
<para>This function uses the leaky ReLU function to perform activation for signed 8-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">in_out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slope</parametername>
</parameternamelist>
<parameterdescription>
<para>slope value to be multiplied with the negative inputs. The result will be right shifted 15 bits to scale back to signed 8-bit integer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>SIZE<sp/>1024</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>slope<sp/>=<sp/>16384;</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_out[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">hpm_nn_leaky_relu_s8(in_out,<sp/>SIZE,<sp/>slope);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6899" column="20"/>
      </memberdef>
      <memberdef kind="function" id="group__nnactivation_1gae7c27f21813b3ed5303c17cbf37da14e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_relu_any_s8</definition>
        <argsstring>(q7_t *data, uint16_t size, q7_t max_val)</argsstring>
        <name>hpm_nn_relu_any_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q7_t</type>
          <declname>max_val</declname>
        </param>
        <briefdescription>
<para>This function uses the ReLU function to perform activation for signed 8-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_val</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to limit the output vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6916" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6916" bodyend="6923"/>
      </memberdef>
      <memberdef kind="function" id="group__nnactivation_1gaf8ac0b3f5c47200437be14a9099b97e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_relu_s8</definition>
        <argsstring>(q7_t *in_out, uint32_t size)</argsstring>
        <name>hpm_nn_relu_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>in_out</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function uses the ReLU function to perform activation for signed 8-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">in_out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input/output vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>H<sp/>16</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>W<sp/>16</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>CH<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>NUM<sp/>(H<sp/>*<sp/>W<sp/>*CH)</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_out[NUM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">hpm_nn_relu_s8(in_out,<sp/>NUM);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6941" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6941" bodyend="6948"/>
      </memberdef>
      <memberdef kind="function" id="group__nnactivation_1ga3d562b326764a17af405c2d2ddb8cbb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_relu_s16</definition>
        <argsstring>(q15_t *in_out, uint32_t size)</argsstring>
        <name>hpm_nn_relu_s16</name>
        <param>
          <type>q15_t *</type>
          <declname>in_out</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function uses the ReLU function to perform activation for signed 16-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">in_out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input/output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input/output vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6956" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6956" bodyend="6963"/>
      </memberdef>
      <memberdef kind="function" id="group__nnbasic_1ga6d7992c8de4387220a5be4106a61a690" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_add_s8_sym</definition>
        <argsstring>(const q7_t *in_tensor1, const q7_t *in_tensor2, const int16_t *scale1, const int16_t *scale2, const uint32_t size, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out)</argsstring>
        <name>hpm_nn_add_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor1</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor2</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>scale1</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>scale2</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>This function performs element-wise addition for signed 8-bit integer input vectors with two-stage shift. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first scaling vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second scaling vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vectors </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the accumulator before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the accumulator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the accumulator after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the element-wise addition results</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>SIZE<sp/>1024</highlight></codeline>
<codeline><highlight class="normal">uint16_t<sp/>pre_rshift<sp/>=<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>addition<sp/>results<sp/>of<sp/>both<sp/>scaled<sp/>input</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>tensors<sp/>are<sp/>in<sp/>the<sp/>range<sp/>of<sp/>24-bit;<sp/>thus,<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>pre_rshift<sp/>should<sp/>be<sp/>in<sp/>the<sp/>range<sp/>of<sp/>[0,<sp/>24].</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Here<sp/>we<sp/>scale<sp/>down<sp/>the<sp/>results<sp/>into<sp/>16-bit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>range.</highlight></codeline>
<codeline><highlight class="normal">uint16_t<sp/>out_scale<sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>up<sp/>the<sp/>result<sp/>into<sp/>18-bit<sp/>range.</highlight></codeline>
<codeline><highlight class="normal">uint16_t<sp/>post_rshift<sp/>=<sp/>11;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>the<sp/>result<sp/>into<sp/>7-bit<sp/>range.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_tensor1[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_tensor2[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>scale1[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>scale2[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out[SIZE];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_add_s8_sym(in_tensor1,<sp/>in_tensor2,<sp/>scale1,<sp/>scale2,<sp/>SIZE,<sp/>pre_rshift,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/>out);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7064" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7064" bodyend="7081"/>
      </memberdef>
      <memberdef kind="function" id="group__nnbasic_1gafe1a64a3acdd254eaf9fd192048433fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_add_s8_sym_round</definition>
        <argsstring>(const q7_t *in_tensor1, const q7_t *in_tensor2, const uint32_t scale1, const uint32_t scale2, const uint32_t size, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out)</argsstring>
        <name>hpm_nn_add_s8_sym_round</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor1</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor2</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>scale1</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>scale2</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>This function performs element-wise addition for signed 8-bit integer input vectors with two-stage shift with rounding. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale1</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the first input vector. It should be in the range of 0 to {2^23}. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale2</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the second input vector. It should be in the range of 0 to {2^23}. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vectors </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the accumulator before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the accumulator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the accumulator after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of element-wise addition results </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7102" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7102" bodyend="7119"/>
      </memberdef>
      <memberdef kind="function" id="group__nnbasic_1gac031be61d74c569dfa159b05cb236e64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int hpm_nn_ew_add_s8_asym</definition>
        <argsstring>(const int8_t *in_tensor1, const int8_t *in_tensor2, const int32_t in_offset1, const int32_t in_scale1, const int32_t in_rshift1, const int32_t in_offset2, const int32_t in_scale2, const int32_t in_rshift2, const int32_t lshift, int8_t *out, const int32_t out_offset, const int32_t out_scale, const int32_t out_rshift, const int32_t act_min, const int32_t act_max, const uint32_t size)</argsstring>
        <name>hpm_nn_ew_add_s8_asym</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor1</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor2</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset1</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_scale1</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_rshift1</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset2</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_scale2</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_rshift2</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>lshift</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function performs element-wise addition for signed 8-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset1</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value for first input vector. It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_scale1</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_rshift1</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset2</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value for the second input vector. It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_scale2</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_rshift2</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the first and second input vectors </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the element-wise addition results </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value that the output is limited to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value that the output is limited to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vectors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>SIZE<sp/>1024</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>in_offset1<sp/>=<sp/>16;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Offset<sp/>for<sp/>in_tensor1</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>in_scale1<sp/>=<sp/>(1&lt;&lt;28);<sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>in_tensor1<sp/>by<sp/>1/23</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>in_rshift1<sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>in_tensor1<sp/>by<sp/>1/23</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>in_offset2<sp/>=<sp/>17;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Offset<sp/>for<sp/>in_tensor2</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>in_scale2<sp/>=<sp/>(1&lt;&lt;28);<sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>in_tensor2<sp/>by<sp/>1/23</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>in_rshift2<sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>in_tensor2<sp/>by<sp/>1/23</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>lshift<sp/>=<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>up<sp/>the<sp/>input<sp/>tensor<sp/>by<sp/>210<sp/>times</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>out_offset<sp/>=<sp/>18;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Offset<sp/>for<sp/>the<sp/>output<sp/>tensor</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>out_scale<sp/>=<sp/>(1&lt;&lt;30);<sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>in_tensor2<sp/>by<sp/>1/2</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>out_rshift<sp/>=<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>in_tensor2<sp/>by<sp/>1/24</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>act_min<sp/>=<sp/>0xffffffa3;<sp/><sp/><sp/>//<sp/>Limit<sp/>the<sp/>outputs<sp/>in<sp/>the<sp/>range<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>[0xffffffa3,<sp/>0x0000005d]</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>act_max<sp/>=<sp/>0x0000005d;<sp/><sp/><sp/>//<sp/>Limit<sp/>the<sp/>outputs<sp/>in<sp/>the<sp/>range<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>[0xffffffa3,<sp/>0x0000005d]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int8_t<sp/>in_tensor1[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">int8_t<sp/>in_tensor2[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">int8_t<sp/>out[SIZE];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_ew_add_s8_asym(in_tensor1,<sp/>in_tensor2,<sp/>in_offset1,<sp/>in_scale1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_rshift1,<sp/>in_offset2,<sp/>in_scale2,<sp/>in_rshift2,<sp/>lshift,<sp/>out,<sp/>out_offset,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>out_scale,<sp/>out_rshift,<sp/>act_min,<sp/>act_max,<sp/>SIZE);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7172" column="19" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7172" bodyend="7200"/>
      </memberdef>
      <memberdef kind="function" id="group__nnbasic_1gad7837374c646ceb828a86e29261c777e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int hpm_nn_ew_mul_s8_asym</definition>
        <argsstring>(const int8_t *in_tensor1, const int8_t *in_tensor2, const int32_t in_offset1, const int32_t in_offset2, int8_t *out, const int32_t out_offset, const int32_t out_scale, const int32_t out_shift, const int32_t act_min, const int32_t act_max, const uint32_t size)</argsstring>
        <name>hpm_nn_ew_mul_s8_asym</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor1</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor2</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset1</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset2</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function performs element-wise multiplication for signed 8-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset1</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value for the first input vector. It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset2</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value for the second input vector. It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of element-wise multiplication results </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value that the output is limited to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value that the output is limited to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vectors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>SIZE<sp/>1024</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>in_offset1<sp/>=<sp/>16;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Offset<sp/>for<sp/>in_tensor1</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>in_offset2<sp/>=<sp/>17;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Offset<sp/>for<sp/>in_tensor2</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>out_offset<sp/>=<sp/>18;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Offset<sp/>for<sp/>the<sp/>output<sp/>tensor</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>out_scale<sp/>=<sp/>(1&lt;&lt;30);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>the<sp/>output<sp/>tensor<sp/>by<sp/>1/2</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>out_shift<sp/>=<sp/>-4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Scale<sp/>down<sp/>the<sp/>output<sp/>tensor<sp/>by<sp/>1/24</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>act_min<sp/>=<sp/>0xffffffa3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Limit<sp/>the<sp/>outputs<sp/>in<sp/>the<sp/>range<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>[0xffffffa3,<sp/>0x0000005d]</highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>act_max<sp/>=<sp/>0x0000005d;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Limit<sp/>the<sp/>outputs<sp/>in<sp/>the<sp/>range<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>[0xffffffa3,<sp/>0x0000005d]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">in_tensor1[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">in_tensor2[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">out[SIZE];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_ew_mul_s8_asym(in_tensor1,<sp/>in_tensor2,<sp/>in_offset1,<sp/>in_offset2,<sp/>out,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>out_offset,<sp/>out_scale,<sp/>out_shift,<sp/>act_min,<sp/>act_max,<sp/>SIZE);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7241" column="19" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7241" bodyend="7262"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconcatenation_1gac482d9b3bd28f3f5f7f5a6be1d8367b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_concate_s8_w</definition>
        <argsstring>(const int8_t *in_tensor, const uint16_t in_tensor_x, const uint16_t in_tensor_y, const uint16_t in_tensor_z, const uint16_t in_tensor_w, int8_t *out_tensor, const uint32_t out_offset_w)</argsstring>
        <name>hpm_nn_concate_s8_w</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_z</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>out_offset_w</declname>
        </param>
        <briefdescription>
<para>This function concatenates the int8_t/uint8_t input tensor along the w-axis with the output tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_w</parametername>
</parameternamelist>
<parameterdescription>
<para>w dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset_w</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value to be added to the w axis of the output tensor before the concatenation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The x, y and z dimension of the output tensor will be the same as those of the input tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7396" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7396" bodyend="7411"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconcatenation_1ga647b8909aef5526efef7c01d530094ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_concate_s8_x</definition>
        <argsstring>(const int8_t *in_tensor, const uint16_t in_tensor_x, const uint16_t in_tensor_y, const uint16_t in_tensor_z, const uint16_t in_tensor_w, int8_t *out_tensor, const uint16_t out_tensor_x, const uint32_t out_offset_x)</argsstring>
        <name>hpm_nn_concate_s8_x</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_z</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_x</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>out_offset_x</declname>
        </param>
        <briefdescription>
<para>This function concatenates the int8_t/uint8_t input tensor along the x-axis with the output tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_w</parametername>
</parameternamelist>
<parameterdescription>
<para>w dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset_x</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value to be added to the x axis of the output tensor before the concatenation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The y, z and w dimensions of the output tensor will be the same as those of the input tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7431" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7431" bodyend="7447"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconcatenation_1gab70f453cbcb29ea754c10f11563c763b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_concate_s8_y</definition>
        <argsstring>(const int8_t *in_tensor, const uint16_t in_tensor_x, const uint16_t in_tensor_y, const uint16_t in_tensor_z, const uint16_t in_tensor_w, int8_t *out_tensor, const uint16_t out_tensor_y, const uint32_t out_offset_y)</argsstring>
        <name>hpm_nn_concate_s8_y</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_z</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_y</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>out_offset_y</declname>
        </param>
        <briefdescription>
<para>This function concatenates the int8_t/uint8_t input tensor along the y-axis with the output tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_w</parametername>
</parameternamelist>
<parameterdescription>
<para>w dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset_y</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value to be added to the y axis of the output tensor before the concatenation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The x, z and w dimensions of the output tensor will be the same as those of the input tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7466" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7466" bodyend="7482"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconcatenation_1ga0d92b806c0ec613df97185ce6ba8156f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_concate_s8_z</definition>
        <argsstring>(const int8_t *in_tensor, const uint16_t in_tensor_x, const uint16_t in_tensor_y, const uint16_t in_tensor_z, const uint16_t in_tensor_w, int8_t *out_tensor, const uint16_t out_tensor_z, const uint32_t out_offset_z)</argsstring>
        <name>hpm_nn_concate_s8_z</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_z</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_z</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>out_offset_z</declname>
        </param>
        <briefdescription>
<para>This function concatenates the int8_t/uint8_t input tensor along the z-axis with the output tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_w</parametername>
</parameternamelist>
<parameterdescription>
<para>w dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset_z</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value to be added to the z axis of the output tensor before the concatenation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The x, y and w dimensions of the output tensor will be the same as those of the input tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7501" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7501" bodyend="7517"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaf6fad182b1496ef1d5651b6628701293" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>1x1<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//160x120x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their</highlight></codeline>
<codeline><highlight class="normal">//stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Scale<sp/>up<sp/>the<sp/>bias<sp/>by<sp/>2^6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Scale<sp/>down<sp/>the<sp/>output<sp/>tensor<sp/>by<sp/>1/2^9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>120</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>STRIDE_Y,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7621" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7621" bodyend="7655"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga48801812baf4ac44d8f420656e0d344e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution for RGB images with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-vector enabled and its size must be &quot;out_tensor_ch * (3 * ker_dim *
                                 ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[3<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_RGB_sft_bias(in_data,<sp/>IN_DIM,<sp/>weight,<sp/>OUT_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7708" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7708" bodyend="7734"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacb280da3e5ee9dae757454a6f9fde55a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution for RGB images with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[3<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>(3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>+<sp/>1)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>wt_tmp_buf[OUT_CH<sp/>*<sp/>(3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>+<sp/>1)];</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>wt_tmp_buf);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7787" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7787" bodyend="7813"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga4289d8b8bf7de39fe2ec6716aeb1fb21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x1<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7866" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7866" bodyend="7893"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa3bea4019638b22edc46a625f5cf7cce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_conv_HWC_s8_s8_s8_sft_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>80x59x5</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>40</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>30</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,<sp/>bias,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7956" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7956" bodyend="7990"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad9c7a0bfeedea12c13702a7b85f6045b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>12x12x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>8x8x50</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>50</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>8</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8044" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8044" bodyend="8071"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6ebc094b7ca8a8eb46c249c165dc0990" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//80x59x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>80</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>59</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_Y<sp/>*<sp/>OUT_X];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any(in_data,<sp/>IN_W,<sp/>IN_Y<sp/>,<sp/>IN_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8139" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8139" bodyend="8173"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae45d9ea581aa690f6bc604878b7ff56a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 16-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x1<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>input_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias(input_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8226" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8226" bodyend="8253"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2ad7e5bbd56df8f95bd183850900ff56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 16-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that both in_tensor_ch and out_tensor_ch are multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x4<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x8</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>4</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8307" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8307" bodyend="8334"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab92665e531cb2e24620d923c487f5697" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 16-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that both in_tensor_ch and out_tensor_ch are multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//80x59x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>80</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>59</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/><sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,<sp/>IN_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8402" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8402" bodyend="8436"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga14a5303eb12476d8342725b778f3d60f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer depthwise convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>11x11x28<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x3<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>9x9x48</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>11</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>48</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>7</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>9</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>OUT_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_dw_HWC_s8_s8_s8_sft_bias(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>0,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8489" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8489" bodyend="8516"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacbd18e7251df9494ddf4619156237efd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer depthwise convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Perform<sp/>a<sp/>depth-wise<sp/>convolution<sp/>for<sp/>a<sp/>79x59x12<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x3</highlight></codeline>
<codeline><highlight class="normal">//kernel<sp/>and<sp/>generate<sp/>a<sp/>77x57x12<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM_X<sp/>79</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM_Y<sp/>59</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_SHIFT<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>7</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM_X<sp/>77</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM_Y<sp/>57</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM_X<sp/>*<sp/>IN_DIM_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>OUT_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM_X<sp/>*<sp/>OUT_DIM_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any(in_data,<sp/>IN_DIM_X,<sp/>IN_DIM_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM,<sp/>KER_DIM,<sp/>PAD,<sp/>PAD,<sp/>STRIDE,<sp/>STRIDE,<sp/>bias,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BIAS_SHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM_X,<sp/>OUT_DIM_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8580" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8580" bodyend="8614"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga291d3433cfdeac37ddedd621e0cea855" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs.. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8661" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8661" bodyend="8695"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab36c58937982cb251a299463e48ff357" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8743" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8743" bodyend="8777"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad97f5d188a38e067ca8afe1d26a3f9e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8824" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8824" bodyend="8858"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1ee3747f0f50187370bb25d91b412447" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8906" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8906" bodyend="8940"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac7a64479b1a28db67739740f7797c0ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8988" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8988" bodyend="9022"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1353634c6dd78e51d72ad649f1851741" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9068" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9068" bodyend="9101"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga40b28637cd642db0f36e19b0c5008433" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9148" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9148" bodyend="9181"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1a24af57ab9a2be65f085e36c0c80520" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9227" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9227" bodyend="9260"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga13dceb3700caa3c22c53bd7f6017a40d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9307" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9307" bodyend="9340"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2e95b6dd2dc0ebe0fb31b4ce4e97b5c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9387" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9387" bodyend="9420"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaeed17db639b9ce3a896bc2bfeaaeb8ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9453" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9453" bodyend="9480"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gadbb401015033df936d4547841e0c6778" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9514" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9514" bodyend="9541"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae84e818d001cf7ea2c4331924f36e35e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9574" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9574" bodyend="9601"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga02b99a74afdae934fc45f491a59d2214" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9634" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9634" bodyend="9661"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3fbca4e04cca9289834c84a10a913a88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9695" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9695" bodyend="9722"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac66363c7f5934113644361412bcf3afc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9754" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9754" bodyend="9780"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga760c3e28022de0cc9781549ec67b472a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9812" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9812" bodyend="9838"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga546898208090a68e33f99ced79470f5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9870" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9870" bodyend="9896"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2f5d213d0023ff26d9ce168bfefa2a40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 8-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9928" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9928" bodyend="9954"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga30719ccfc86c77e8b4fde37011f8d543" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9986" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9986" bodyend="10012"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0bc1ef1d72db702cc49be0016a4180f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10044" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10044" bodyend="10071"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa32181a4fa9730dd1aaff34473aad105" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10103" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10103" bodyend="10130"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab00822cf6d1b355344c6385a2555dab4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10162" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10162" bodyend="10189"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga7cd15bdefc9684fc8c6dc5740bd973e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10221" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10221" bodyend="10248"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga14a05c18351cdbb2158cf1978e508f8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10280" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10280" bodyend="10307"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaf85f4310b5b177044f48ea61614aaf10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10338" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10338" bodyend="10364"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaba554ffd11e415541ebab72f6161915d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10395" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10395" bodyend="10421"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga44f3d234a8ffe93b8cbc31e19ed49cc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10452" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10452" bodyend="10478"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga681fd01c3db04f540acb48e080682acc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10509" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10509" bodyend="10535"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6ca86332aeecf3be577bfb87f554d178" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10566" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10566" bodyend="10592"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa733b3587ec4a987004946f46fdf4d8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10630" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10630" bodyend="10664"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gafa3b832483993fd1609f2744a7a1c6d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10703" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10703" bodyend="10737"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa245691db40029df9384b7e50b79fde4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10775" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10775" bodyend="10809"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae65c6f8353b1d3eb0ad4f6bbdb89c4cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10848" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10848" bodyend="10882"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1ba10db375981d7dfba5902aea8de0ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10921" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10921" bodyend="10955"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaf210756844a35322033afcc20325eae5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10992" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10992" bodyend="11025"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaea70ea34cd3a6e45bc89ada5e110e698" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11062" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11062" bodyend="11095"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad00d5ffdfffd45ad20e15c41da36a31b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11132" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11132" bodyend="11165"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad463faadd1a58de1fabc5f05a396f025" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11202" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11202" bodyend="11235"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga7bb79b1cd25ff4e15ddfff5ac9336d3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11272" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11272" bodyend="11305"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa2232c5f84cbe4d40d4201756d87c308" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11338" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11338" bodyend="11365"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3c6fcf87e6f94a46600aab9b8154e747" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11397" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11397" bodyend="11424"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga88f4d9ab1a22cc7d551664bf37c11f4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11456" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11456" bodyend="11483"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3c07fe5b1305f89f094eb44de887288e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11515" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11515" bodyend="11542"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae3cdb24a3bc9374cc98a97d1cf66d713" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11574" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11574" bodyend="11601"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaddf5ec832e3e3306da2089d5bb742aee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11632" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11632" bodyend="11658"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacb88aa3904d0374b532ac0dfae36d0ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11689" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11689" bodyend="11715"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga11e8db5b74e51807c0f6c264ceb88a3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to (in_tensor_ch * ker_dim * ker_dim + 1) / 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11746" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11746" bodyend="11772"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga8021fde290f091b9348e56ae24fdf912" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs, and with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11803" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11803" bodyend="11829"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga19633dab07a1ccb79712b58dbf7e9a51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11860" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11860" bodyend="11886"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga425531141b804498f1b04ab9203c35c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11924" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11924" bodyend="11958"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0a8c643e8c77051213ccf469486ddccb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11997" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11997" bodyend="12031"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga048ff15cdd4652c25b9b250f8356f335" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12069" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12069" bodyend="12103"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab6af36649c64102a6e1c80e623bed9f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12142" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12142" bodyend="12176"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga24277b452593c20ae17ff2086fb8253a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12215" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12215" bodyend="12249"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae8250ca3c328de6b4ea93e4f62bcf541" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12286" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12286" bodyend="12319"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6bf168c41fda67552bd4b5f5c200a268" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12357" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12357" bodyend="12390"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab5cb8f3dc2985f57b742036399164798" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12427" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12427" bodyend="12460"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac080214be9e1938ba324ca42c0aade2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12498" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12498" bodyend="12531"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae9744bde30c4e26b17ef6dc89acb16d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12569" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12569" bodyend="12602"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2420b518e254e3fd4abe27f16a2a7901" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit interger inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor groups </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1 </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12650" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12650" bodyend="12686"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa7a9c1eab5556db05cfa3d05dfa4c71c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12694" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12694" bodyend="12703"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae1c62cb7f29063bf12498148562fdca7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t pad_x, const uint16_t stride_x, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1xn kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that out_tensor_dim_x is a multiple of 4. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12743" column="19" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12743" bodyend="12776"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1e0aac3f254eb048c027362e2fa40c0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel. It is always 1 here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12787" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12787" bodyend="12798"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gafcbbcd4692c657df2ab93d7529fc0adb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor groups </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12841" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12841" bodyend="12881"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga89509f5499197a1f65bc7e29ff471f2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12891" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12891" bodyend="12902"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga9cfa87c1ba0068ad397a429d1ac1aab2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const int8_t *in_tensor, const int32_t in_tensor_dim_x, const int32_t in_tensor_dim_y, const int32_t in_tensor_ch, const int8_t *ker_weight, const int32_t out_tensor_ch, const int32_t pad_x, const int32_t pad_y, const int32_t stride_x, const int32_t stride_y, const int32_t *bias, int8_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_tensor_dim_x, const int32_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const int32_t dilation_x, const int32_t dilation_y, int16_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise 3x3 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch and pad_x is less than 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12943" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12943" bodyend="12980"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga455407b84cfc71528b0dd8680c64a8b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ch_mult, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t dilation_x, const uint16_t dilation_y, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ch_mult</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit interger inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels. out_tensor_ch is equal to ch_mult * in_tensor_ch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_mult</parametername>
</parameternamelist>
<parameterdescription>
<para>multiplier of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">to<sp/>be<sp/>modified...</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13029" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13029" bodyend="13071"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad954df9be69373bdc385362c70b140dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t dilation_x, const uint16_t dilation_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that in_tensor_ch has to be equal to out_tensor_ch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13117" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13117" bodyend="13158"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad9339201eff1c27fd41039bfc4a4756c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13168" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13168" bodyend="13179"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0b9ce54b2ac422932e71b67b66d657c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any</definition>
        <argsstring>(const uint8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint8_t *ker_weight, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const int16_t ch_mult, const int16_t pad_x, const int16_t pad_y, const int16_t stride_x, const int16_t stride_y, const int16_t dilation_x, const int16_t dilation_y, const int32_t *bias, const int32_t in_offset, const int32_t ker_offset, const int32_t out_offset, uint8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t act_min, const int32_t act_max, const int32_t out_shift, const int32_t out_scale)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any</name>
        <param>
          <type>const uint8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>ch_mult</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>ker_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_scale</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_mult</parametername>
</parameternamelist>
<parameterdescription>
<para>multiplier of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -255 to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the filter kernel It should be in the range of -255 to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>shift amount for the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of sacling for the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that both ch_mult and ker_dim_x are multiple of 2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13221" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13221" bodyend="13262"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gab45ed3f14c58cab4076e6967ad30a332" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s8_s8_sft_bias</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t bias_lshift, const uint16_t out_rshift, const q7_t *bias, q7_t *out_vec, q15_t *in_tmp_buf) return riscv_nn_fc_s8_s8_s8_sft_bias(in_vec</argsstring>
        <name>hpm_nn_fc_s8_s8_s8_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>IN_SIZE<sp/>2048</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_SIZE<sp/>256</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_vec[IN_SIZE]<sp/>=<sp/>{...};;</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>wt_mat[IN_SIZE<sp/>*<sp/>OUT_SIZE]<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_vec[OUT_SIZE];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_fc_s8_s8_s8_sft_bias(in_vec,<sp/>wt_mat,<sp/>IN_SIZE,<sp/>OUT_SIZE,<sp/>BIAS_LSHIFT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_RSHIFT,<sp/>bias,<sp/>out_vec,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14000" column="23"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gaa1f855aee9b668ef4769eda1f60554d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s8_s8_sft_bias_fast</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t bias_lshift, const uint16_t out_rshift, const q7_t *bias, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s8_s8_sft_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs with interleaved multiplication and shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be &quot;2 * size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>In this function, the input vector is multiplied by the weight matrix in interleaved formats which could be obtained by riscv_nn_fc_s8_wt_converter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14041" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14041" bodyend="14060"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga20798f89906e5c61d8a6be867a1b72c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s16_s16_s16_sft_bias</definition>
        <argsstring>(const q15_t *in_vec, const q15_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t bias_lshift, const uint16_t out_rshift, const q15_t *bias, q15_t *out_vec, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_fc_s16_s16_s16_sft_bias</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 16-bit integer inputs with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14076" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14076" bodyend="14095"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gaf1c0f1e99248d06ca8fed702e44aabb0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s16_s16_s16_sft_bias_fast</definition>
        <argsstring>(const q15_t *in_vec, const q15_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t bias_lshift, const uint16_t out_rshift, const q15_t *bias, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s16_s16_s16_sft_bias_fast</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 16-bit integer inputs with interleaved multiplication and shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 4 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>In this function, the input vector is multiplied by a weight matrix in interleaved formats which could be obtained by riscv_nn_fc_s16_wt_converter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14119" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14119" bodyend="14138"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga69f5f40bb7c91659a061155d8ae0c910" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_mat_vec_s16_s16_s8_sft_bias</definition>
        <argsstring>(const q15_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t bias_lshift, const uint16_t out_rshift, const q7_t *bias, q15_t *out_vec, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_fc_mat_vec_s16_s16_s8_sft_bias</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function multiplies a signed 16-bit integer input vector by a signed 8-bit integer weight matrix with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14155" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14155" bodyend="14174"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga69a40656d6f2b497351607cd83054310" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_mat_vec_s16_s16_s8_sft_bias_fast</definition>
        <argsstring>(const q15_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t bias_lshift, const uint16_t out_rshift, const q7_t *bias, q15_t *out_vec, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_fc_mat_vec_s16_s16_s8_sft_bias_fast</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function multiplies a signed 16-bit integer input vector by a signed 8-bit integer weight matrix with interleaved multiplication and shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>In this function, the input vector is multiplied by a weight matrix in interleaved formats which could be obtained by hpm_nn_fc_mat_vec_s8_wt_converter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14197" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14197" bodyend="14216"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gac6598c54f33cd2156828ba76e3116839" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s8_s8_sym_bias</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s8_s8_sym_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14242" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14242" bodyend="14262"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga56b2443d32bacffe5f4e733336180656" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s16_s8_sym_bias</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s16_s8_sym_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14288" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14288" bodyend="14308"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gac8fab5daa0ee54009b57c00ab40dda29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_u8_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, u8_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_u8_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14334" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14334" bodyend="14354"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gaab54ef128ef0662f974717b3c0ea4b08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_s8_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_s8_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs and signed 8-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14380" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14380" bodyend="14400"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga233a097c1621243f515aa429b86d135a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_s16_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_s16_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14426" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14426" bodyend="14446"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga78586a92a1f2e8095cefd3496f0d723d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s8_s8_sym</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s8_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14471" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14471" bodyend="14488"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga4dc06edf735a14d76827e261d78f1481" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s16_s8_sym</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s16_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14513" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14513" bodyend="14530"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gaeb6989af38515f0d357b865e63b5796a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_u8_s8_sym</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_u8_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14555" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14555" bodyend="14572"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gaf53c113ab8461fa61dfff43d3a85ab36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_s8_s8_sym</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_s8_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs and signed 8-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14597" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14597" bodyend="14614"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gae1938542936cfccfecf9e0141106cc90" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_s16_s8_sym</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_s16_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output before the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output after the scaling </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-dsp is enabled and its size must be &quot;size&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14639" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14639" bodyend="14656"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gabd5c90ebea7d508aa4454fc001ca9df4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s8_s8_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s8_s8_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs/outputs with bias inputs, interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14682" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14682" bodyend="14702"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gaf0d42131487c8ec9d25a473af238f911" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s16_s8_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s16_s8_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs, interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14729" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14729" bodyend="14749"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga8efcbba79326680456a3a8a23aa5319b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_u8_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, u8_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_u8_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs/outputs with bias inputs, interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14775" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14775" bodyend="14795"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga2c82d87df2361eff0f7c540c6576bbc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_s8_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_s8_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs and signed 8-bit integer outputs with bias inputs, interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14822" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14822" bodyend="14842"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga821032d36266a3897b68b10c84f3efa2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_s16_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, const q31_t *bias, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_s16_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs, interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14869" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14869" bodyend="14889"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga9a4cf02a4752fa6386ef8d81dd311672" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s8_s8_sym_fast</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s8_s8_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs/outputs with interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14914" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14914" bodyend="14933"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga6ff14c83b69467ce756baa5d3f41ad2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s16_s8_sym_fast</definition>
        <argsstring>(const q7_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s16_s8_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs and signed 16-bit integer outputs with interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="14959" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="14959" bodyend="14978"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gaee46f4d3087336e2a8234ee58f49d49c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_u8_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_u8_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs/outputs with interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15003" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15003" bodyend="15022"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gaedb16fe5dc6f61eb7efd55f6b5965c0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_s8_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_s8_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs and signed 8-bit integer outputs with interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15048" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15048" bodyend="15067"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga5bb8c127b68f039232af600b33346c08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_u8_s16_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_vec, const q7_t *wt_mat, const uint16_t size, const uint16_t wt_row_num, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_vec, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_fc_u8_s16_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for unsigned 8-bit integer inputs and signed 16-bit integer outputs with interleaved multiplication and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input vector. It is required when -mext-vector is enabled and its size must be 2 * size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>In this function, the input vector is multiplied by the weight matrix in interleaved format which could be obtained by riscv_nn_fc_s8_wt_converter.</para>
</listitem><listitem><para>The outputs will be two-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15093" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15093" bodyend="15112"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga78982f976203af0b163475fae6dee696" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_fc_s8_wt_converter</definition>
        <argsstring>(const q7_t *wt_mat, const uint32_t size, const uint32_t wt_row_num, q7_t *wt_mat_out)</argsstring>
        <name>hpm_nn_fc_s8_wt_converter</name>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>wt_mat_out</declname>
        </param>
        <briefdescription>
<para>This is a weight converter for those fully-connected functions with signed 8-bit weight data and named with &quot;fast&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">wt_mat_out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix stored in specific ordering </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15124" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15124" bodyend="15134"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1gad293a3d04091a9e12e517ab0f6199633" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_fc_s16_wt_converter</definition>
        <argsstring>(const q15_t *wt_mat, const uint32_t size, const uint32_t wt_row_num, q15_t *wt_mat_out)</argsstring>
        <name>hpm_nn_fc_s16_wt_converter</name>
        <param>
          <type>const q15_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_mat_out</declname>
        </param>
        <briefdescription>
<para>This is a weight converter for those fully-connected functions with signed 16-bit weight data and named with &quot;fast&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">wt_mat_out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix stored in specific ordering </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15146" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15146" bodyend="15156"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga6e99539191303a876f6679af20140717" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_fc_mat_vec_s8_wt_converter</definition>
        <argsstring>(const q7_t *wt_mat, const uint32_t size, const uint32_t wt_row_num, q7_t *wt_mat_out)</argsstring>
        <name>hpm_nn_fc_mat_vec_s8_wt_converter</name>
        <param>
          <type>const q7_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>wt_row_num</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>wt_mat_out</declname>
        </param>
        <briefdescription>
<para>This is a weight converter for riscv_nn_fc_mat_vec_s16_s16_s8_sft_bias_fast. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_row_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">wt_mat_out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the weight matrix stored in specific ordering </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15167" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15167" bodyend="15177"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga71ae5d2dc28459f2b8cad2c6f762bc03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s8_s8_asym_bias</definition>
        <argsstring>(const int8_t *in_vec, const int8_t *wt_mat, const uint16_t in_vec_col, const uint16_t wt_mat_row, const uint16_t in_vec_group, const int32_t in_offset, const int32_t wt_offset, const int32_t out_scale, const int32_t out_shift, const int32_t out_offset, const int32_t *bias, int8_t *out_vec, const int32_t act_min, const int32_t act_max, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_fc_s8_s8_s8_asym_bias</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>wt_mat</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_vec_col</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>wt_mat_row</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_vec_group</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>wt_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_vec</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This is a fully connected layer function for signed 8-bit integer inputs with bias inputs and asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the transposed weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_vec_col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the input vector (or transposed weight matrix) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_mat_row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the transposed weight matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_vec_group</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input vector groups </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset to be added to the input tensor. It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset to be added to the weight. It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of sacling for the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>shift amount for the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset to be added to the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15209" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15209" bodyend="15236"/>
      </memberdef>
      <memberdef kind="function" id="group__nnfullyconnect_1ga8c0bf58b24a77830b306be989754ff69" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_fc_s8_s8_s8_asym_bias_get_buffer_size</definition>
        <argsstring>(const uint16_t in_vec_col)</argsstring>
        <name>hpm_nn_fc_s8_s8_s8_asym_bias_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_vec_col</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the temporary buffer of riscv_nn_fc_s8_s8_s8_asym_bias. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec_col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the input vector (or transposed weight matrix) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15245" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15245" bodyend="15252"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1gad43e5ccb5728bc0e0b094259dd152082" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_avepool_HWC_s8</definition>
        <argsstring>(q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t out_tensor_dim, q7_t *in_tmp_buf, q7_t *out_tensor)</argsstring>
        <name>hpm_nn_avepool_HWC_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is an average pooling function for signed 8-bit integer inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor. It is required when -mext-dsp is enabled and its size must be equal to &quot;2 * out_tensor_dim *
                                 in_tensor_ch&quot;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>32</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>32</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>15</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[IN_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_tmp_buf[2<sp/>*<sp/>OUT_DIM<sp/>*<sp/>IN_CH];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_avepool_HWC_s8(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>out_data);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15396" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15396" bodyend="15413"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1gaf6fedec35524e63e29627562f32f347f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_avepool_HWC_s8_any</definition>
        <argsstring>(q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q7_t *in_tmp_buf, q7_t *out_tensor, const uint16_t out_lshift)</argsstring>
        <name>hpm_nn_avepool_HWC_s8_any</name>
        <param>
          <type>q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_lshift</declname>
        </param>
        <briefdescription>
<para>This is an average pooling function for signed 8-bit integer inputs in any x and y dimensions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp is enabled and its size must be equal to &quot;2 *
                                     out_tensor_dim_x * in_tensor_ch&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the output</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal"><sp/>#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>IN_CH<sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>OUT_LSHIFT<sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>OUT_X<sp/>80</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>OUT_Y<sp/>59</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[IN_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_avepool_HWC_s8_any(in_data,<sp/>IN_X,<sp/>IN_Y,<sp/>IN_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>OUT_LSHIFT);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15461" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15461" bodyend="15488"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1ga3b15c5bc734a4136c74eee7785e3e958" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_avepool_HWC_s8_any_act</definition>
        <argsstring>(const int in_tensor_dim_y, const int in_tensor_dim_x, const int out_tensor_dim_y, const int out_tensor_dim_x, const int stride_y, const int stride_x, const int ker_dim_y, const int ker_dim_x, const int pad_y, const int pad_x, const int act_min, const int act_max, const int in_tensor_ch, int8_t *in_tensor, int16_t *in_tmp_buf, int8_t *out_tensor)</argsstring>
        <name>hpm_nn_avepool_HWC_s8_any_act</name>
        <param>
          <type>const int</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is an average pooling function for S8 inputs with any x and y dimension with the actvating parameters to limit the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value that the output tensor is limited to. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value that the output tensor is limited to. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. Its needed size could be obtained by calling riscv_nn_avepool_s8_HWC_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15518" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15518" bodyend="15546"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1gada121e066cbae4b8157f2f05d2bd2445" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_avepool_HWC_s8_any_act_get_buffer_size</definition>
        <argsstring>(const int out_tensor_dim_x, const int in_tensor_ch)</argsstring>
        <name>hpm_nn_avepool_HWC_s8_any_act_get_buffer_size</name>
        <param>
          <type>const int</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>in_tensor_ch</declname>
        </param>
        <briefdescription>
<para>This function is used to obtain the required size, in bytes, for the input temporary buffer of riscv_nn_avepool_HWC_s8_any_act. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the size required by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15556" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15556" bodyend="15565"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1ga6ed1130644bb9611b2d8964796858a22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_maxpool_HWC_s8</definition>
        <argsstring>(q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t out_tensor_dim, q7_t *in_tmp_buf, q7_t *out_tensor)</argsstring>
        <name>hpm_nn_maxpool_HWC_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is a max pooling function for signed 8-bit integer inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>32</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>32</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>15</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[IN_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_maxpool_HWC_s8(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>NULL,<sp/>out_data);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15596" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15596" bodyend="15613"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1ga8a897ddb16290c428acb826d7c290c2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_maxpool_HWC_s8_any_act</definition>
        <argsstring>(const uint16_t in_tensor_dim_y, const uint16_t in_tensor_dim_x, const uint16_t out_tensor_dim_y, const uint16_t out_tensor_dim_x, const uint16_t stride_y, const uint16_t stride_x, const uint16_t ker_dim_y, const uint16_t ker_dim_x, const uint16_t pad_y, const uint16_t pad_x, const int8_t act_min, const int8_t act_max, const uint16_t in_tensor_ch, int8_t *in_tensor, int16_t *tmp_buffer, int8_t *out_tensor)</argsstring>
        <name>hpm_nn_maxpool_HWC_s8_any_act</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int8_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int8_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>tmp_buffer</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is a max pooling function for signed 8-bit integer inputs in any x and y dimensions with the actvating parameters to limit the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value that the output tensor is limited to. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value that the output tensor is limited to. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15641" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15641" bodyend="15669"/>
      </memberdef>
      <memberdef kind="function" id="group__nnsoftmax_1ga8a6ade9f71c2a881445c85a0c998887c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_softmax_s8_fast</definition>
        <argsstring>(const q7_t *in_vec, const uint16_t size, q7_t *out_vec)</argsstring>
        <name>hpm_nn_softmax_s8_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_vec</declname>
        </param>
        <briefdescription>
<para>This is a softmax function for signed 8-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>LENGTH<sp/>10</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[LENGTH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[LENGTH];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_softmax_s8_fast(in_data,<sp/>LENGTH,<sp/>out_data);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15796" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15796" bodyend="15805"/>
      </memberdef>
      <memberdef kind="function" id="group__nnsoftmax_1gaff3136d670da611c3e107256596efd1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_softmax_s16_fast</definition>
        <argsstring>(const q15_t *in_vec, const uint16_t size, q15_t *out_vec)</argsstring>
        <name>hpm_nn_softmax_s16_fast</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_vec</declname>
        </param>
        <briefdescription>
<para>This is a softmax function for signed 16-bit integer input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15814" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15814" bodyend="15823"/>
      </memberdef>
      <memberdef kind="function" id="group__nnsoftmax_1ga11ab4f2a71735cfd5348319c00d440ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_softmax_s8_hp</definition>
        <argsstring>(const int8_t *in_tensor, const int32_t in_tensor_row, const int32_t in_tensor_col, const int32_t scale, const int32_t lshift, const int32_t diff_min, int8_t *out_tensor)</argsstring>
        <name>hpm_nn_softmax_s8_hp</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_row</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_col</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>lshift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>diff_min</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is a softmax function for signed 8-bit integer input tensor with high precision algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for input quantization </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for input quantization </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">diff_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum threshold to perform the quantized exponential operation. The difference can be obtained by subtracting the input from the maximum in row. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15839" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15839" bodyend="15854"/>
      </memberdef>
      <memberdef kind="function" id="group__nnsoftmax_1ga1631ad53a279f4839d39b43cdf563f8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_softmax_u8_hp</definition>
        <argsstring>(const uint8_t *in_tensor, const int32_t in_tensor_row, const int32_t in_tensor_col, const int32_t scale, const int32_t lshift, const int32_t diff_min, uint8_t *out_tensor)</argsstring>
        <name>hpm_nn_softmax_u8_hp</name>
        <param>
          <type>const uint8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_row</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_col</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>lshift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>diff_min</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is a softmax function for unsigned 8-bit integer input tensor with high precision algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling value for input quantization </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for input quantization </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">diff_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum threshold to perform the quantized exponential operation. The difference can be obtained by subtracting the input from the maximum in row. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15870" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15870" bodyend="15885"/>
      </memberdef>
      <memberdef kind="function" id="group__nnutils_1ga69f1c2b964cf2e69f28c8f733eb353e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_reshape_s8</definition>
        <argsstring>(const int8_t *in_tensor, int8_t *out_tensor, const uint32_t size)</argsstring>
        <name>hpm_nn_reshape_s8</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function turns the input tensor into another tensor with the same data but in a different shape. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size, in bytes, of total input tensor</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>SIZE<sp/>1024</highlight></codeline>
<codeline><highlight class="normal">int8_t<sp/>in_tensor[SIZE]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">int8_t<sp/>out_tensor[SIZE];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_reshape_s8(in_tensor,<sp/>out_tensor,<sp/>SIZE);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15987" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15987" bodyend="15996"/>
      </memberdef>
      <memberdef kind="function" id="group__nnutils_1ga409fb24d807cba441431ffeb9d5f3869" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_top_k_s8</definition>
        <argsstring>(q7_t *in_vec, uint32_t size, uint32_t k, q7_t *val, uint32_t *idx)</argsstring>
        <name>hpm_nn_top_k_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>in_vec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>This function finds the k largest values and their indices from the signed 8-bit integer input vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">k</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of the largest values to be searched </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">val</parametername>
</parameternamelist>
<parameterdescription>
<para>the k largest values in the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the indices of the k largest values in the input vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>If there is a number of elements with the same value, the element with smaller index will be selected with high priority.</para>
</listitem><listitem><para>The k largest values will be sorted from largest to smallest and stored in &quot;val&quot; output vector. If there is a number of elements with the same value, the elements will be sorted from smallest index to largest index. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="16017" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="16017" bodyend="16028"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022,2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__HPM_MATH_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HPM_MATH_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="hpm__math_8h_1ae61e1c7c4ee705b0d3a356e071c11bfa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_DSP_HW_NDS32<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>andes<sp/>hardware<sp/>dsp<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_HPM_MATH_HAS_EXTRA_CONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>CONFIG_HPM_MATH_HAS_EXTRA_CONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enable<sp/>Compute<sp/>Cell<sp/>Library*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>HPM_EN_MATH_FFA_LIB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>HPM_EN_MATH_DSP_LIB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>HPM_EN_MATH_NN_LIB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="hpm__math_8h_1a68a1b8e76cd50ee5744e75a9107fbe02" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_STATISTICS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="hpm__math_8h_1a8a05fc8bf400cb8b479939f78fdf7bc4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_BASIC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="hpm__math_8h_1a2095cee6d7761396b6dc5799d2524618" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_COMPLEX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="hpm__math_8h_1af09db7a6c1c8e811664e6fe41f6a211a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_CONTROLLER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="hpm__math_8h_1aabd9ab5eae8bc8792773ba762ed938b4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_DISTANCE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="hpm__math_8h_1acd4a299c1ef427c19f15a798499f8038" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_FILTERING<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="hpm__math_8h_1aee1ddcde59419739c93d6acd634d8f0e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_MATRIX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="hpm__math_8h_1a2d1aa407dd2484a859a7ccec11a9f3f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_SVM<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="hpm__math_8h_1a197b9f9aba28074dda5f31aaf6b5ac14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_TRANSFORM<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="hpm__math_8h_1a23ab4a5f24e816e21549da4ee2870287" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_UTILS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="hpm__math_8h_1af4507ff9573954cf9289691ae9dd16e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_DSP_SORT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="hpm__math_8h_1abb4788357b1476de33003ef5d8d3cca6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_ACTIVATION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="hpm__math_8h_1a1dc92e239f6dc4f17fb326bf4b501359" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_TINYENGINE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="hpm__math_8h_1a79e0e07205a858f5e0b10c2452b82433" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_BASIC<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="hpm__math_8h_1a4dce753dc1f669337fd097dd094bf2a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_CONCATENATION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="hpm__math_8h_1aa1409e06ba88f1b52c04943dddc470b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_CONVOLUTION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="hpm__math_8h_1a85158c65cda2bebfb51bf11f0f63f886" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_CONNECTED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="hpm__math_8h_1a788c90cea2032983f1867ee47a046045" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_POOLING<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="hpm__math_8h_1a642376f7856f87e54707313c0bc8cdc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_SOFTMAX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="hpm__math_8h_1ab774ac158e3fd36358249843b2fedd05" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_NN_UTIL<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="hpm__math_8h_1a6fa559675b0d0edd25816c7fdba9bd6b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_DSP_CORE<sp/>HPM_DSP_HW_NDS32<sp/></highlight><highlight class="comment">/*<sp/>DSP<sp/>core<sp/>selection<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="hpm__math_8h_1aeff525ebe9fc8b64bc1917279d501867" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_PI<sp/>(3.1415926535898)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="hpm__math_8h_1aa5fabcdcecb0a70d61e307d867e7c5f9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MATH_SW_FFT_CHECKLIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_STATISTICS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_statistics_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum</highlight></codeline>
<codeline lineno="95" refid="group__statistics_1gaa5231e130e5f754795deafec56e25387" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1gaa5231e130e5f754795deafec56e25387" kindref="member">hpm_dsp_max_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>f32_t<sp/>res;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_max_f32(&amp;res,<sp/>index,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_max_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107" refid="group__statistics_1gacbb0665a7593de08270ea9eccab657bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1gacbb0665a7593de08270ea9eccab657bf" kindref="member">hpm_dsp_max_val_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_max_val_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120" refid="group__statistics_1ga159ed8e6cd120df0414b5fa6e829c7a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__statistics_1ga159ed8e6cd120df0414b5fa6e829c7a4" kindref="member">hpm_dsp_max_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>res;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_max_q15(&amp;res,<sp/>index,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_max_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="group__statistics_1ga611fa9cbc7f42e2a0148b7c61ed875cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1ga611fa9cbc7f42e2a0148b7c61ed875cc" kindref="member">hpm_dsp_max_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>res;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_max_q31(&amp;res,<sp/>index,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_max_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group__statistics_1ga3f2937036a0025bb2fa2d363c77a6389" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q7_t<sp/><ref refid="group__statistics_1ga3f2937036a0025bb2fa2d363c77a6389" kindref="member">hpm_dsp_max_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>res;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_max_q7(&amp;res,<sp/>index,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_max_q7(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="group__statistics_1ga311ad9a275e91524ec365372bfb2c773" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__statistics_1ga311ad9a275e91524ec365372bfb2c773" kindref="member">hpm_dsp_max_u8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_max_u8(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum</highlight></codeline>
<codeline lineno="195" refid="group__statistics_1gac531103e81b297a22dd13441d1e39389" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1gac531103e81b297a22dd13441d1e39389" kindref="member">hpm_dsp_min_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>f32_t<sp/>res;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_min_f32(&amp;res,<sp/>index,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_min_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group__statistics_1gabb8d9e6c50064b492c15066a76a602d3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__statistics_1gabb8d9e6c50064b492c15066a76a602d3" kindref="member">hpm_dsp_min_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>res;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_min_q15(&amp;res,<sp/>index,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_min_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="group__statistics_1gab1e0842dd2cd58f0988b951c58ea634f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1gab1e0842dd2cd58f0988b951c58ea634f" kindref="member">hpm_dsp_min_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>res;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_min_q31(&amp;res,<sp/>index,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_min_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="group__statistics_1ga5ae8791cd11a4603a37f59ad451bc571" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q7_t<sp/><ref refid="group__statistics_1ga5ae8791cd11a4603a37f59ad451bc571" kindref="member">hpm_dsp_min_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>res;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_min_q7(&amp;res,<sp/>index,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_min_q7(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="group__statistics_1ga3bb761bd913e6dc075bd0b1c4d3b9621" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__statistics_1ga3bb761bd913e6dc075bd0b1c4d3b9621" kindref="member">hpm_dsp_min_u8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t<sp/>*index)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_min_u8(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mean</highlight></codeline>
<codeline lineno="289" refid="group__statistics_1ga92cb0c6f39cf483bea424f197b4599b6" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1ga92cb0c6f39cf483bea424f197b4599b6" kindref="member">hpm_dsp_mean_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>f32_t<sp/>res;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mean_f32(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_mean_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="group__statistics_1gad9d3e8da85feb2374e1a413212a0439c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__statistics_1gad9d3e8da85feb2374e1a413212a0439c" kindref="member">hpm_dsp_mean_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>res;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mean_q15(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_mean_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="group__statistics_1ga78a0833d0272f125624c3763a915dab3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1ga78a0833d0272f125624c3763a915dab3" kindref="member">hpm_dsp_mean_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>res;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mean_q31(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_mean_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="group__statistics_1ga220def0434f24d8c93ed380dc517f350" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q7_t<sp/><ref refid="group__statistics_1ga220def0434f24d8c93ed380dc517f350" kindref="member">hpm_dsp_mean_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>q7_t<sp/>res;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mean_q7(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_mean_q7(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="group__statistics_1gaf1e54e30a8cda8f173782215d32f2a53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__statistics_1gaf1e54e30a8cda8f173782215d32f2a53" kindref="member">hpm_dsp_mean_u8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_mean_u8(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sun<sp/>of<sp/>the<sp/>Squares</highlight></codeline>
<codeline lineno="397" refid="group__statistics_1gafef8d78ee76225d59ce84840d58059bd" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1gafef8d78ee76225d59ce84840d58059bd" kindref="member">hpm_dsp_pwr_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>f32_t<sp/>res;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_power_f32(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_pwr_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="group__statistics_1ga1d3bb430fe5beed7cd91b1f531661b1a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q63_t<sp/><ref refid="group__statistics_1ga1d3bb430fe5beed7cd91b1f531661b1a" kindref="member">hpm_dsp_pwr_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>res;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_power_q15(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_pwr_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="group__statistics_1gac6598ce5d6c7dab08e0039c623dbf3e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q63_t<sp/><ref refid="group__statistics_1gac6598ce5d6c7dab08e0039c623dbf3e5" kindref="member">hpm_dsp_pwr_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>res;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_power_q31(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_pwr_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="group__statistics_1ga9a5e7cbd39cc395f87f45cd1d803706a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1ga9a5e7cbd39cc395f87f45cd1d803706a" kindref="member">hpm_dsp_pwr_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>res;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_power_q7(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_pwr_q7(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Root<sp/>Mean<sp/>Square</highlight></codeline>
<codeline lineno="493" refid="group__statistics_1ga98a2aaa5e26ae3bee6a8ec0216caa44f" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1ga98a2aaa5e26ae3bee6a8ec0216caa44f" kindref="member">hpm_dsp_rms_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>f32_t<sp/>res;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_rms_f32(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rms_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="group__statistics_1gabba8889a97f7b35842645dfce9b84e6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__statistics_1gabba8889a97f7b35842645dfce9b84e6d" kindref="member">hpm_dsp_rms_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>res;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_rms_q15(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rms_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="group__statistics_1ga4a89b55b5f45979252f4f7054594cb8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1ga4a89b55b5f45979252f4f7054594cb8d" kindref="member">hpm_dsp_rms_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>res;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_rms_q31(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rms_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>deviation</highlight></codeline>
<codeline lineno="565" refid="group__statistics_1ga0cb7d1ca67585c071c3d2e9394feb92b" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1ga0cb7d1ca67585c071c3d2e9394feb92b" kindref="member">hpm_dsp_std_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>f32_t<sp/>res;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_std_f32(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_std_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="group__statistics_1gadd20cc3afa66906b76cedc9db716b262" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__statistics_1gadd20cc3afa66906b76cedc9db716b262" kindref="member">hpm_dsp_std_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>res;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_std_q15(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_std_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="group__statistics_1gaf5b9aa4c1a3d2a403eca7cddcd60970c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1gaf5b9aa4c1a3d2a403eca7cddcd60970c" kindref="member">hpm_dsp_std_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>res;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_std_q31(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_std_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="group__statistics_1gab7860c0cec56fdc68e3fe62f126d3abb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__statistics_1gab7860c0cec56fdc68e3fe62f126d3abb" kindref="member">hpm_dsp_std_u8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_std_u8(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Variance</highlight></codeline>
<codeline lineno="656" refid="group__statistics_1ga15403fed7c1d7dfead8049265fab30bb" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1ga15403fed7c1d7dfead8049265fab30bb" kindref="member">hpm_dsp_var_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>f32_t<sp/>res;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_var_f32(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_var_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="group__statistics_1gacce1dd6392efcc0ef8842c6444c11afa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1gacce1dd6392efcc0ef8842c6444c11afa" kindref="member">hpm_dsp_var_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>res;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_var_q15(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_var_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="group__statistics_1ga5fb6861f61a4ebaffec95fc7e0dda57f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q63_t<sp/><ref refid="group__statistics_1ga5fb6861f61a4ebaffec95fc7e0dda57f" kindref="member">hpm_dsp_var_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>res;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_var_q31(&amp;res,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_var_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="729" refid="group__statistics_1ga7e1ceb4ea023d7bce2075ac20e2012da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1ga7e1ceb4ea023d7bce2075ac20e2012da" kindref="member">hpm_dsp_entropy_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_entropy_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_entropy_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="group__statistics_1gaf66c337d9a98a6917e6fd6a620c08a04" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1gaf66c337d9a98a6917e6fd6a620c08a04" kindref="member">hpm_dsp_relative_entropy_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_relative_entropy_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_relative_entropy_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="group__statistics_1ga98c51b7792e96fb1f79762a8401899e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1ga98c51b7792e96fb1f79762a8401899e3" kindref="member">hpm_dsp_lse_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_lse_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_lse_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="790" refid="group__statistics_1gadd5316224763efdd4cf7caa146b21427" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1gadd5316224763efdd4cf7caa146b21427" kindref="member">hpm_dsp_lse_dprod_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>float32_t<sp/>*buffer)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_lse_dprod_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>buffer);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_lse_dprod_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>buffer);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="810" refid="group__statistics_1ga1071bc98a990e4a2e1f30c1353fc86db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__statistics_1ga1071bc98a990e4a2e1f30c1353fc86db" kindref="member">hpm_dsp_gaussian_naive_bayes_est_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_gaussian_naivebayes_f32_t<sp/>*instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*<sp/>src,<sp/>float32_t<sp/>*buf)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_gaussian_naive_bayes_est_f32(instance,<sp/>src,<sp/>buf);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="group__statistics_1gaab4ee78a9b76b70c84ade50ac1dc2670" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1gaab4ee78a9b76b70c84ade50ac1dc2670" kindref="member">hpm_dsp_absmax_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t*<sp/>src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t*<sp/>index)</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_absmax_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="group__statistics_1gae6250168cb69c93349bc08c778c52ff1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__statistics_1gae6250168cb69c93349bc08c778c52ff1" kindref="member">hpm_dsp_absmax_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t*<sp/>src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t*<sp/>index)</highlight></codeline>
<codeline lineno="839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_absmax_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="group__statistics_1ga7cda0f54b4ad962f0d2a3be1a189764c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1ga7cda0f54b4ad962f0d2a3be1a189764c" kindref="member">hpm_dsp_absmax_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t*<sp/>src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t*<sp/>index)</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_absmax_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="866" refid="group__statistics_1gad5ef0b2ad92aa10f75fdc575d35f8c4f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q7_t<sp/><ref refid="group__statistics_1gad5ef0b2ad92aa10f75fdc575d35f8c4f" kindref="member">hpm_dsp_absmax_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t*<sp/>src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t*<sp/>index)</highlight></codeline>
<codeline lineno="867"><highlight class="normal">{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_absmax_q7(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="group__statistics_1ga48c0decf35145b16174d163e0771a729" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__statistics_1ga48c0decf35145b16174d163e0771a729" kindref="member">hpm_dsp_absmin_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t*<sp/>src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t*<sp/>index)</highlight></codeline>
<codeline lineno="881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_absmin_f32(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="894" refid="group__statistics_1gaa29481529f9c166b55113eeda3ceb2dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__statistics_1gaa29481529f9c166b55113eeda3ceb2dc" kindref="member">hpm_dsp_absmin_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t*<sp/>src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t*<sp/>index)</highlight></codeline>
<codeline lineno="895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_absmin_q31(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="908" refid="group__statistics_1ga26d2ddbdc121256625ecbe59ee6b8d01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__statistics_1ga26d2ddbdc121256625ecbe59ee6b8d01" kindref="member">hpm_dsp_absmin_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t*<sp/>src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t*<sp/>index)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_absmin_q15(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="922" refid="group__statistics_1ga31b0d98724bfce74191b9b657d433976" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q7_t<sp/><ref refid="group__statistics_1ga31b0d98724bfce74191b9b657d433976" kindref="member">hpm_dsp_absmin_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t*<sp/>src,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>uint32_t*<sp/>index)</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_absmin_q7(src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_BASIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_basic_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Absolute<sp/>value</highlight></codeline>
<codeline lineno="959" refid="group__basic_1gaf25b849e8b7a3b337dd91c45e40134a2" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaf25b849e8b7a3b337dd91c45e40134a2" kindref="member">hpm_dsp_abs_f32</ref>(float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_abs_f32(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_abs_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="979" refid="group__basic_1gadff053ed8cf76d03cbe619a706bb66d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gadff053ed8cf76d03cbe619a706bb66d4" kindref="member">hpm_dsp_abs_q31</ref>(q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="980"><highlight class="normal">{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_abs_q31(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_abs_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000" refid="group__basic_1gaf4095fdc0e1f33668179cb64bd8a464e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaf4095fdc0e1f33668179cb64bd8a464e" kindref="member">hpm_dsp_abs_q15</ref>(q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_abs_q15(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_abs_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="group__basic_1ga4fe9371ab6e8ea3667f90ac8a243b57e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga4fe9371ab6e8ea3667f90ac8a243b57e" kindref="member">hpm_dsp_abs_q7</ref>(q7_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_abs_q7(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_abs_q7(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Addition</highlight></codeline>
<codeline lineno="1039" refid="group__basic_1ga98515975632421f6d1a9431845935029" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga98515975632421f6d1a9431845935029" kindref="member">hpm_dsp_add_f32</ref>(float32_t<sp/>*src1,<sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_add_f32(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_add_f32(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059" refid="group__basic_1ga8a1abf26146acc99b1a71af84aaf3fed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga8a1abf26146acc99b1a71af84aaf3fed" kindref="member">hpm_dsp_add_q31</ref>(q31_t<sp/>*src1,<sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_add_q31(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_add_q31(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079" refid="group__basic_1ga3b5260ffa70c68ed447869238adc5236" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga3b5260ffa70c68ed447869238adc5236" kindref="member">hpm_dsp_add_q15</ref>(q15_t<sp/>*src1,<sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_add_q15(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_add_q15(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099" refid="group__basic_1ga7bd4fe5f3d3bb8bdffebabc0306f11a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga7bd4fe5f3d3bb8bdffebabc0306f11a0" kindref="member">hpm_dsp_add_q7</ref>(q7_t<sp/>*src1,<sp/>q7_t<sp/>*src2,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_add_q7(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_add_q7(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119" refid="group__basic_1ga0294297d784064aa70525e3bb83bbd79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga0294297d784064aa70525e3bb83bbd79" kindref="member">hpm_dsp_add_u8_u16</ref>(uint8_t<sp/>*src1,<sp/>uint8_t<sp/>*src2,<sp/>uint16_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_add_u8_u16(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_add_u8_u16(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subtraction</highlight></codeline>
<codeline lineno="1138" refid="group__basic_1ga9a14f49d6eae32541a1cf503f29924fb" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga9a14f49d6eae32541a1cf503f29924fb" kindref="member">hpm_dsp_sub_f32</ref>(float32_t<sp/>*src1,<sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_sub_f32(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sub_f32(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158" refid="group__basic_1gac99fff1e0fc5c5b9a61feb0098cc8e59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gac99fff1e0fc5c5b9a61feb0098cc8e59" kindref="member">hpm_dsp_sub_q31</ref>(q31_t<sp/>*src1,<sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_sub_q31(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sub_q31(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178" refid="group__basic_1ga4320d3bd09e851160b3ae7b894c0cafd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga4320d3bd09e851160b3ae7b894c0cafd" kindref="member">hpm_dsp_sub_q15</ref>(q15_t<sp/>*src1,<sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_sub_q15(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sub_q15(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198" refid="group__basic_1ga82d43e5c78f30f06cc2ba81bc8760ddd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga82d43e5c78f30f06cc2ba81bc8760ddd" kindref="member">hpm_dsp_sub_q7</ref>(q7_t<sp/>*src1,<sp/>q7_t<sp/>*src2,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_sub_q7(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sub_q7(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218" refid="group__basic_1ga0858c8dac33fb2c01207a276520efc99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga0858c8dac33fb2c01207a276520efc99" kindref="member">hpm_dsp_sub_u8_q7</ref>(uint8_t<sp/>*src1,<sp/>uint8_t<sp/>*src2,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sub_u8_q7(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiplication</highlight></codeline>
<codeline lineno="1233" refid="group__basic_1gaf38165466859c664efbcb18e1fd849b4" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaf38165466859c664efbcb18e1fd849b4" kindref="member">hpm_dsp_mul_f32</ref>(float32_t<sp/>*src1,<sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mult_f32(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mul_f32(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253" refid="group__basic_1ga43e73c7f252f3bd29b4cf853768b971f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga43e73c7f252f3bd29b4cf853768b971f" kindref="member">hpm_dsp_mul_q31</ref>(q31_t<sp/>*src1,<sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mult_q31(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mul_q31(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273" refid="group__basic_1ga2d9efb20de5fa3cc3d0dd706de462a34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga2d9efb20de5fa3cc3d0dd706de462a34" kindref="member">hpm_dsp_mul_q15</ref>(q15_t<sp/>*src1,<sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mult_q15(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mul_q15(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293" refid="group__basic_1gaf989af83eed18800183ad3bdc74abe92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaf989af83eed18800183ad3bdc74abe92" kindref="member">hpm_dsp_mul_q7</ref>(q7_t<sp/>*src1,<sp/>q7_t<sp/>*src2,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mult_q7(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mul_q7(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313" refid="group__basic_1gae33e1877afc8372539e2f596ef892453" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gae33e1877afc8372539e2f596ef892453" kindref="member">hpm_dsp_mul_u8_u16</ref>(uint8_t<sp/>*src1,<sp/>uint8_t<sp/>*src2,<sp/>uint16_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mul_u8_u16(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Division</highlight></codeline>
<codeline lineno="1328" refid="group__basic_1gaf1878ba2a67c5407dc3c17faa4324732" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaf1878ba2a67c5407dc3c17faa4324732" kindref="member">hpm_dsp_div_f32</ref>(float32_t<sp/>*src1,<sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_div_f32(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_div_f32(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345" refid="group__basic_1ga2048bd035dce9e4087c677ad6118209e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__basic_1ga2048bd035dce9e4087c677ad6118209e" kindref="member">hpm_dsp_div_q31</ref>(q31_t<sp/>src1,<sp/>q31_t<sp/>src2)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_div_q31(src1,<sp/>src2);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_div_q31(src1,<sp/>src2);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362" refid="group__basic_1ga4325d1319e9be1da041eed3557e5ce2f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__basic_1ga4325d1319e9be1da041eed3557e5ce2f" kindref="member">hpm_dsp_div_s64_u32</ref>(q63_t<sp/>src1,<sp/>uint32_t<sp/>src2)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_div_s64_u32(src1,<sp/>src2);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_div_s64_u32(src1,<sp/>src2);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379" refid="group__basic_1ga4ebf3a7af27e0be2866163d5316f5a44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__basic_1ga4ebf3a7af27e0be2866163d5316f5a44" kindref="member">hpm_dsp_div_u64_u32</ref>(uint64_t<sp/>src1,<sp/>uint32_t<sp/>src2)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_div_u64_u32(src1,<sp/>src2);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_div_u64_u32(src1,<sp/>src2);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Negation</highlight></codeline>
<codeline lineno="1397" refid="group__basic_1gaa16385255f04e325c776fef0651a9cd8" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaa16385255f04e325c776fef0651a9cd8" kindref="member">hpm_dsp_neg_f32</ref>(float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_negate_f32(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_neg_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417" refid="group__basic_1gaa1ad4a21370e2de683af272666fdfae4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaa1ad4a21370e2de683af272666fdfae4" kindref="member">hpm_dsp_neg_q31</ref>(q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_negate_q31(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_neg_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437" refid="group__basic_1ga59ec55b5efda253881754d04a5e1c906" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga59ec55b5efda253881754d04a5e1c906" kindref="member">hpm_dsp_neg_q15</ref>(q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_negate_q15(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_neg_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457" refid="group__basic_1gaa7b6ba90be87a5f0b915c1ee0ae18ee2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaa7b6ba90be87a5f0b915c1ee0ae18ee2" kindref="member">hpm_dsp_neg_q7</ref>(q7_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_negate_q7(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_neg_q7(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dot<sp/>Production</highlight></codeline>
<codeline lineno="1476" refid="group__basic_1gac1eb6a8019725b9490e979c96e7510a1" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__basic_1gac1eb6a8019725b9490e979c96e7510a1" kindref="member">hpm_dsp_dprod_f32</ref>(float32_t<sp/>*src1,<sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>f32_t<sp/>res;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_dot_prod_f32(&amp;res,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dprod_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501" refid="group__basic_1ga6dad768fe925d7b590c045285d8a97a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q63_t<sp/><ref refid="group__basic_1ga6dad768fe925d7b590c045285d8a97a8" kindref="member">hpm_dsp_dprod_q31</ref>(q31_t<sp/>*src1,<sp/>q31_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>res;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_dot_prod_q31(&amp;res,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dprod_q31(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524" refid="group__basic_1gabfd70e8dfd3f54159dd7200334faa074" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q63_t<sp/><ref refid="group__basic_1gabfd70e8dfd3f54159dd7200334faa074" kindref="member">hpm_dsp_dprod_q15</ref>(q15_t<sp/>*src1,<sp/>q15_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>res;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_dot_prod_q15(&amp;res,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dprod_q15(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548" refid="group__basic_1gacdf0a9e11e54e78959fbd11998d006d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__basic_1gacdf0a9e11e54e78959fbd11998d006d9" kindref="member">hpm_dsp_dprod_u8xq15</ref>(uint8_t<sp/>*src1,<sp/>q15_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dprod_u8xq15(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566" refid="group__basic_1gabcb1f483b220f1d4b9c84bb9d507f940" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__basic_1gabcb1f483b220f1d4b9c84bb9d507f940" kindref="member">hpm_dsp_dprod_q7</ref>(q7_t<sp/>*src1,<sp/>q7_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>res;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_dot_prod_q7(&amp;res,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dprod_q7(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589" refid="group__basic_1gac07edf7b7c984aed7392cdbeb0edbdca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__basic_1gac07edf7b7c984aed7392cdbeb0edbdca" kindref="member">hpm_dsp_dprod_q7xq15</ref>(q7_t<sp/>*src1,<sp/>q15_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dprod_q7xq15(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606" refid="group__basic_1ga330075bbd982d1d0e86c50d177c26aef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__basic_1ga330075bbd982d1d0e86c50d177c26aef" kindref="member">hpm_dsp_dprod_u8</ref>(uint8_t<sp/>*src1,<sp/>uint8_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dprod_u8(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Offset</highlight></codeline>
<codeline lineno="1621" refid="group__basic_1ga75b490628d07bf286959b2dd1ca5ef48" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga75b490628d07bf286959b2dd1ca5ef48" kindref="member">hpm_dsp_offset_f32</ref>(float32_t<sp/>*src,<sp/>float32_t<sp/>offset,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_offset_f32(dst,<sp/>src,<sp/>offset,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_offset_f32(src,<sp/>offset,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641" refid="group__basic_1ga9605dca5e72ec18ca2b9d475ed18854d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga9605dca5e72ec18ca2b9d475ed18854d" kindref="member">hpm_dsp_offset_q31</ref>(q31_t<sp/>*src,<sp/>q31_t<sp/>offset,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_offset_q31(dst,<sp/>src,<sp/>offset,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_offset_q31(src,<sp/>offset,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661" refid="group__basic_1ga8cc3a94632f26390aabe78e0b2c62e23" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga8cc3a94632f26390aabe78e0b2c62e23" kindref="member">hpm_dsp_offset_q15</ref>(q15_t<sp/>*src,<sp/>q15_t<sp/>offset,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_offset_q15(dst,<sp/>src,<sp/>offset,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_offset_q15(src,<sp/>offset,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681" refid="group__basic_1ga42d212bdaab06e3b00417c77d29d3498" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga42d212bdaab06e3b00417c77d29d3498" kindref="member">hpm_dsp_offset_q7</ref>(q7_t<sp/>*src,<sp/>q7_t<sp/>offset,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_offset_q7(dst,<sp/>src,<sp/>offset,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_offset_q7(src,<sp/>offset,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701" refid="group__basic_1ga81c5c19c5703065b0449fbffafa33c19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga81c5c19c5703065b0449fbffafa33c19" kindref="member">hpm_dsp_offset_u8</ref>(uint8_t<sp/>*src,<sp/>q7_t<sp/>offset,<sp/>uint8_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_offset_u8(src,<sp/>offset,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scale</highlight></codeline>
<codeline lineno="1716" refid="group__basic_1ga9414c80d2298557ca677cf7c58961a10" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga9414c80d2298557ca677cf7c58961a10" kindref="member">hpm_dsp_scale_f32</ref>(float32_t<sp/>*src,<sp/>float32_t<sp/>scale,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_scale_f32(dst,<sp/>src,<sp/>scale,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_scale_f32(src,<sp/>scale,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739" refid="group__basic_1ga372a2f658cf59a0cd35162527a65c5a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga372a2f658cf59a0cd35162527a65c5a5" kindref="member">hpm_dsp_scale_q31</ref>(q31_t<sp/>*src,<sp/>q31_t<sp/>scalefract,<sp/>int8_t<sp/>shift,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_scale_q31(dst,<sp/>src,<sp/>scalefract,<sp/>shift,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_scale_q31(src,<sp/>scalefract,<sp/>shift,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762" refid="group__basic_1ga85766e519f49bebb185951b138f4e383" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga85766e519f49bebb185951b138f4e383" kindref="member">hpm_dsp_scale_q15</ref>(q15_t<sp/>*src,<sp/>q15_t<sp/>scalefract,<sp/>int8_t<sp/>shift,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_scale_q15(dst,<sp/>src,<sp/>scalefract,<sp/>shift,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_scale_q15(src,<sp/>scalefract,<sp/>shift,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785" refid="group__basic_1ga77d56cb53909e5ce23b68687a7eb1ccb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga77d56cb53909e5ce23b68687a7eb1ccb" kindref="member">hpm_dsp_scale_q7</ref>(q7_t<sp/>*src,<sp/>q7_t<sp/>scalefract,<sp/>int8_t<sp/>shift,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_scale_q7(dst,<sp/>src,<sp/>scalefract,<sp/>shift,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_scale_q7(src,<sp/>scalefract,<sp/>shift,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807" refid="group__basic_1gac2951a6cd8fd4a99ce9886666b0ed627" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gac2951a6cd8fd4a99ce9886666b0ed627" kindref="member">hpm_dsp_scale_u8</ref>(uint8_t<sp/>*src,<sp/>q7_t<sp/>scalefract,<sp/>int8_t<sp/>shift,<sp/>uint8_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_scale_u8(src,<sp/>scalefract,<sp/>shift,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shift</highlight></codeline>
<codeline lineno="1825" refid="group__basic_1gaeff58fe36cf38ef9f11dc56b5e331175" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaeff58fe36cf38ef9f11dc56b5e331175" kindref="member">hpm_dsp_shift_q15</ref>(q15_t<sp/>*src,<sp/>int8_t<sp/>shift,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_shift_q15(dst,<sp/>src,<sp/>shift,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_shift_q15(src,<sp/>shift,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846" refid="group__basic_1ga850586e8cafbed79042c45be3ad19925" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1ga850586e8cafbed79042c45be3ad19925" kindref="member">hpm_dsp_shift_q31</ref>(q31_t<sp/>*src,<sp/>int8_t<sp/>shift,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_shift_q31(dst,<sp/>src,<sp/>shift,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_shift_q31(src,<sp/>shift,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867" refid="group__basic_1gaac457317e7cacc40cc0d2a7879354bc8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaac457317e7cacc40cc0d2a7879354bc8" kindref="member">hpm_dsp_shift_q7</ref>(q7_t<sp/>*src,<sp/>int8_t<sp/>shift,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_shift_q7(dst,<sp/>src,<sp/>shift,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_shift_q7(src,<sp/>shift,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888" refid="group__basic_1gaf5e4617dd32390c53498ec663484a4d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic_1gaf5e4617dd32390c53498ec663484a4d9" kindref="member">hpm_dsp_shift_u8</ref>(uint8_t<sp/>*src,<sp/>int8_t<sp/>shift,<sp/>uint8_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_shift_u8(src,<sp/>shift,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908" refid="group__basic__clip_1ga576ea3928d00c395d5fccfffedd98529" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__clip_1ga576ea3928d00c395d5fccfffedd98529" kindref="member">hpm_dsp_clip_f32</ref>(float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>float32_t<sp/>low,<sp/>float32_t<sp/>high,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_clip_f32(dst,<sp/>src,<sp/>low,<sp/>high,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_clip_f32(src,<sp/>dst,<sp/>low,<sp/>high,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1927" refid="group__basic__clip_1ga3154044848a96e2d323fc653d4363f2d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__clip_1ga3154044848a96e2d323fc653d4363f2d" kindref="member">hpm_dsp_clip_q31</ref>(q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>q31_t<sp/>low,<sp/>q31_t<sp/>high,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_clip_q31(dst,<sp/>src,<sp/>low,<sp/>high,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_clip_q31(src,<sp/>dst,<sp/>low,<sp/>high,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1946" refid="group__basic__clip_1gac2198553543e005f635eddf9b084280d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__clip_1gac2198553543e005f635eddf9b084280d" kindref="member">hpm_dsp_clip_q15</ref>(q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>q15_t<sp/>low,<sp/>q15_t<sp/>high,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_clip_q15(dst,<sp/>src,<sp/>low,<sp/>high,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_clip_q15(src,<sp/>dst,<sp/>low,<sp/>high,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1965" refid="group__basic__clip_1gaa6bd0cda127f1f5376da62d09ce50285" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__clip_1gaa6bd0cda127f1f5376da62d09ce50285" kindref="member">hpm_dsp_clip_q7</ref>(q7_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>q7_t<sp/>low,<sp/>q7_t<sp/>high,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_clip_q7(dst,<sp/>src,<sp/>low,<sp/>high,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_clip_q7(src,<sp/>dst,<sp/>low,<sp/>high,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND</highlight></codeline>
<codeline lineno="1998" refid="group__basic__and_1ga5f2670d152eb22ed704e6c45fabec1a1" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__and_1ga5f2670d152eb22ed704e6c45fabec1a1" kindref="member">hpm_dsp_and_u32</ref>(u32_t<sp/>*src1,<sp/>u32_t<sp/>*src2,<sp/>u32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_and_32bit(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_and_u32(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2016" refid="group__basic__and_1gac24be1a8356d99a6acdab2e4ed7989b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__and_1gac24be1a8356d99a6acdab2e4ed7989b8" kindref="member">hpm_dsp_and_u8</ref>(u8_t<sp/>*src1,<sp/>u8_t<sp/>*src2,<sp/>u8_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_and_8bit(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_and_u8(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OR</highlight></codeline>
<codeline lineno="2049" refid="group__basic__or_1gafc148ac1136b17f05bf5ed3f3e3d3806" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__or_1gafc148ac1136b17f05bf5ed3f3e3d3806" kindref="member">hpm_dsp_or_u32</ref>(u32_t<sp/>*src1,<sp/>u32_t<sp/>*src2,<sp/>u32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_or_32bit(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_or_u32(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2067" refid="group__basic__or_1gaf0f817a568b9765b784757badc8be0c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__or_1gaf0f817a568b9765b784757badc8be0c0" kindref="member">hpm_dsp_or_u16</ref>(u16_t<sp/>*src1,<sp/>u16_t<sp/>*src2,<sp/>u16_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2068"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_or_16bit(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_or_u16(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2085" refid="group__basic__or_1gaafddb03f70efb5be201b87cceb5a2850" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__or_1gaafddb03f70efb5be201b87cceb5a2850" kindref="member">hpm_dsp_or_u8</ref>(u8_t<sp/>*src1,<sp/>u8_t<sp/>*src2,<sp/>u8_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_or_8bit(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_or_u8(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XOR</highlight></codeline>
<codeline lineno="2118" refid="group__basic__xor_1gaae0e03f90e1427e0de0ad043d96263f1" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__xor_1gaae0e03f90e1427e0de0ad043d96263f1" kindref="member">hpm_dsp_xor_u32</ref>(u32_t<sp/>*src1,<sp/>u32_t<sp/>*src2,<sp/>u32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_xor_32bit(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_xor_u32(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2136" refid="group__basic__xor_1gab34299dac4789d2a3502d77ad7a45899" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__xor_1gab34299dac4789d2a3502d77ad7a45899" kindref="member">hpm_dsp_xor_u16</ref>(u16_t<sp/>*src1,<sp/>u16_t<sp/>*src2,<sp/>u16_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_xor_16bit(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_xor_u16(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2154" refid="group__basic__xor_1gab9e0c026766ef480daf7f40c4ab70350" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__xor_1gab9e0c026766ef480daf7f40c4ab70350" kindref="member">hpm_dsp_xor_u8</ref>(u8_t<sp/>*src1,<sp/>u8_t<sp/>*src2,<sp/>u8_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_xor_8bit(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_xor_u8(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Not</highlight></codeline>
<codeline lineno="2186" refid="group__basic__not_1ga4b85a1479fb1a6d7d3cf679f33dc2da1" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__not_1ga4b85a1479fb1a6d7d3cf679f33dc2da1" kindref="member">hpm_dsp_not_u32</ref>(u32_t<sp/>*src,<sp/>u32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_not_32bit(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_not_u32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2203" refid="group__basic__not_1ga19b0159593c99a4f68989de10311f1e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__not_1ga19b0159593c99a4f68989de10311f1e6" kindref="member">hpm_dsp_not_u16</ref>(u16_t<sp/>*src,<sp/>u16_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_not_16bit(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_not_u16(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2220" refid="group__basic__not_1gadff02591cd4682b22b2bf714309da871" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__basic__not_1gadff02591cd4682b22b2bf714309da871" kindref="member">hpm_dsp_not_u8</ref>(u8_t<sp/>*src,<sp/>u8_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_not_8bit(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_not_u8(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244" refid="hpm__math_8h_1aeedb1b7b0263c67983e29c04c4aeec79" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="hpm__math_8h_1aeedb1b7b0263c67983e29c04c4aeec79" kindref="member">hpm_math_sw_reverse_bit8_lsb_to_msb</ref>(uint8_t<sp/>lsb);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252" refid="hpm__math_8h_1a7c1d8b6457af54fe4fe23588b1a49598" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="hpm__math_8h_1a7c1d8b6457af54fe4fe23588b1a49598" kindref="member">hpm_math_sw_reverse_bit8_msb_to_lsb</ref>(uint8_t<sp/>msb);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260" refid="hpm__math_8h_1ab4ed58cf6fdfd63f150761b54be81461" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="hpm__math_8h_1ab4ed58cf6fdfd63f150761b54be81461" kindref="member">hpm_math_sw_reverse_bit32_lsb_to_msb</ref>(uint32_t<sp/>lsb);</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268" refid="hpm__math_8h_1a6bf989051ab61f7dc37202cf89b03058" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="hpm__math_8h_1a6bf989051ab61f7dc37202cf89b03058" kindref="member">hpm_math_sw_reverse_bit32_msb_to_lsb</ref>(uint32_t<sp/>msb);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_COMPLEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_complex_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complex<sp/>Conjugate</highlight></codeline>
<codeline lineno="2298" refid="group__complex_1ga6279d9125ae054f847dcbbbe3ef97470" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga6279d9125ae054f847dcbbbe3ef97470" kindref="member">hpm_dsp_cconj_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_conj_f32(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cconj_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318" refid="group__complex_1ga17685c07c61c82b0e0f0a8ec18806df4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga17685c07c61c82b0e0f0a8ec18806df4" kindref="member">hpm_dsp_cconj_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_conj_q15(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cconj_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338" refid="group__complex_1gaa84045e328defa47c5c7eb7ab8902b6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gaa84045e328defa47c5c7eb7ab8902b6e" kindref="member">hpm_dsp_cconj_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_conj_q31(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cconj_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complex<sp/>Dot<sp/>Product</highlight></codeline>
<codeline lineno="2357" refid="group__complex_1gaae1a84f713d1770fab4cb7866c54d7a5" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gaae1a84f713d1770fab4cb7866c54d7a5" kindref="member">hpm_dsp_cdprod_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>float32_t<sp/>*dst)</highlight></codeline>
<codeline lineno="2358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cdprod_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>dst);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372" refid="group__complex_1gae862ce9eb2be037fecf298fc137529b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gae862ce9eb2be037fecf298fc137529b8" kindref="member">hpm_dsp_cdprod_typ2_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>float32_t<sp/>*rout,<sp/>float32_t<sp/>*iout)</highlight></codeline>
<codeline lineno="2373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_dot_prod_f32(rout,<sp/>iout,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cdprod_typ2_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>rout,<sp/>iout);</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393" refid="group__complex_1gab7b17001cfbaea2178eecbb5310740c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gab7b17001cfbaea2178eecbb5310740c7" kindref="member">hpm_dsp_cdprod_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>q15_t<sp/>*dst)</highlight></codeline>
<codeline lineno="2394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cdprod_q15(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>dst);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411" refid="group__complex_1gaed38faa72902fe73d0a66af546fabc12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gaed38faa72902fe73d0a66af546fabc12" kindref="member">hpm_dsp_cdprod_typ2_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>q31_t<sp/>*rout,<sp/>q31_t<sp/>*iout)</highlight></codeline>
<codeline lineno="2412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cdprod_typ2_q15(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>rout,<sp/>iout);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428" refid="group__complex_1ga5715eeb2e01429a1feaab66cb670ea22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga5715eeb2e01429a1feaab66cb670ea22" kindref="member">hpm_dsp_cdprod_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>q31_t<sp/>*dst)</highlight></codeline>
<codeline lineno="2429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cdprod_q31(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>dst);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447" refid="group__complex_1gabd35e9042e1980dd0bfefe64b881a239" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gabd35e9042e1980dd0bfefe64b881a239" kindref="member">hpm_dsp_cdprod_typ2_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>q63_t<sp/>*rout,<sp/>q63_t<sp/>*iout)</highlight></codeline>
<codeline lineno="2448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_dot_prod_q31(rout,<sp/>iout,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cdprod_typ2_q31(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>rout,<sp/>iout);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complex<sp/>Magnitude</highlight></codeline>
<codeline lineno="2465" refid="group__complex_1ga73e8a36fb1700c6d4aedb11735471fed" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga73e8a36fb1700c6d4aedb11735471fed" kindref="member">hpm_dsp_cmag_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mag_f32(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmag_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485" refid="group__complex_1ga76d1ccdf21d59caaff2d237dd4c248f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga76d1ccdf21d59caaff2d237dd4c248f5" kindref="member">hpm_dsp_cmag_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mag_q15(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmag_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505" refid="group__complex_1ga8c66d13cf354d53a7a386791b61d3913" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga8c66d13cf354d53a7a386791b61d3913" kindref="member">hpm_dsp_cmag_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mag_q31(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmag_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complex<sp/>Magnitude<sp/>Squared</highlight></codeline>
<codeline lineno="2524" refid="group__complex_1ga7e76928be457195f5653c5e12a6d5e0e" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga7e76928be457195f5653c5e12a6d5e0e" kindref="member">hpm_dsp_cmag_sqr_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mag_squared_f32(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmag_sqr_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544" refid="group__complex_1gac3b3bd14a0a65018bf16ce05645d1e57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gac3b3bd14a0a65018bf16ce05645d1e57" kindref="member">hpm_dsp_cmag_sqr_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mag_squared_q15(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmag_sqr_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564" refid="group__complex_1gada55d2942703610d2d9c4bed0fc33553" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gada55d2942703610d2d9c4bed0fc33553" kindref="member">hpm_dsp_cmag_sqr_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mag_squared_q31(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmag_sqr_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complex<sp/>Multiplication</highlight></codeline>
<codeline lineno="2583" refid="group__complex_1ga00885d375580a1993563af83376679f4" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga00885d375580a1993563af83376679f4" kindref="member">hpm_dsp_cmul_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mult_cmplx_f32(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmul_f32(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604" refid="group__complex_1ga73a51071d53fbc9e8744932c7068a0a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga73a51071d53fbc9e8744932c7068a0a4" kindref="member">hpm_dsp_cmul_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mult_cmplx_q15(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmul_q15(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625" refid="group__complex_1gace87468ca2a2a9cf06e8719ec18eb365" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gace87468ca2a2a9cf06e8719ec18eb365" kindref="member">hpm_dsp_cmul_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mult_cmplx_q31(dst,<sp/>src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmul_q31(src1,<sp/>src2,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complex-by-Real<sp/>Multiplication</highlight></codeline>
<codeline lineno="2644" refid="group__complex_1ga21ac7cbc44156c53adee7fd12569fd45" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga21ac7cbc44156c53adee7fd12569fd45" kindref="member">hpm_dsp_cmul_real_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*real,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mult_real_f32(dst,<sp/>src,<sp/>real,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmul_real_f32(src,<sp/>real,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2664" refid="group__complex_1gaeda77b2e8121a5ba2f3ca133e02eec97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1gaeda77b2e8121a5ba2f3ca133e02eec97" kindref="member">hpm_dsp_cmul_real_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*real,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mult_real_q15(dst,<sp/>src,<sp/>real,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmul_real_q15(src,<sp/>real,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684" refid="group__complex_1ga9cb61bdbab96f556c9a3d132eab891bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__complex_1ga9cb61bdbab96f556c9a3d132eab891bf" kindref="member">hpm_dsp_cmul_real_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*real,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cmplx_mult_real_q31(dst,<sp/>src,<sp/>real,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmul_real_q31(src,<sp/>real,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_CONTROLLER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_controller_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clarke<sp/>Transform</highlight></codeline>
<codeline lineno="2721" refid="group__controller_1ga9fb6ad9be5a088ca73f2da2a9f468598" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga9fb6ad9be5a088ca73f2da2a9f468598" kindref="member">hpm_dsp_clarke_f32</ref>(float32_t<sp/>a,<sp/>float32_t<sp/>b,<sp/>float32_t<sp/>*alpha,<sp/>float32_t<sp/>*beta)</highlight></codeline>
<codeline lineno="2722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_clarke_f32(a,<sp/>b,<sp/>alpha,<sp/>beta);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2737" refid="group__controller_1gacee02f319732b6480a20c9cab339b48d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1gacee02f319732b6480a20c9cab339b48d" kindref="member">hpm_dsp_clarke_q31</ref>(q31_t<sp/>a,<sp/>q31_t<sp/>b,<sp/>q31_t<sp/>*alpha,<sp/>q31_t<sp/>*beta)</highlight></codeline>
<codeline lineno="2738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_clarke_q31(a,<sp/>b,<sp/>alpha,<sp/>beta);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inverse<sp/>Clarke<sp/>Transform</highlight></codeline>
<codeline lineno="2752" refid="group__controller_1ga6bb47dbe724993fec899450d50c7604a" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga6bb47dbe724993fec899450d50c7604a" kindref="member">hpm_dsp_inv_clarke_f32</ref>(float32_t<sp/>alpha,<sp/>float32_t<sp/>beta,<sp/>float32_t<sp/>*a,<sp/>float32_t<sp/>*b)</highlight></codeline>
<codeline lineno="2753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_inv_clarke_f32(alpha,<sp/>beta,<sp/>a,<sp/>b);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2768" refid="group__controller_1ga6a2b3cdeb0c9389655c3a335061a2e6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga6a2b3cdeb0c9389655c3a335061a2e6e" kindref="member">hpm_dsp_inv_clarke_q31</ref>(q31_t<sp/>alpha,<sp/>q31_t<sp/>beta,<sp/>q31_t<sp/>*a,<sp/>q31_t<sp/>*b)</highlight></codeline>
<codeline lineno="2769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_inv_clarke_q31(alpha,<sp/>beta,<sp/>a,<sp/>b);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Park<sp/>Transform</highlight></codeline>
<codeline lineno="2785" refid="group__controller_1ga5fe2822268f4b84653c61a3ae6ec38ca" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga5fe2822268f4b84653c61a3ae6ec38ca" kindref="member">hpm_dsp_park_f32</ref>(float32_t<sp/>alpha,<sp/>float32_t<sp/>beta,<sp/>float32_t<sp/>*a,<sp/>float32_t<sp/>*b,<sp/>float32_t<sp/>sin,<sp/>float32_t<sp/>cos)</highlight></codeline>
<codeline lineno="2786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_park_f32(alpha,<sp/>beta,<sp/>a,<sp/>b,<sp/>sin,<sp/>cos);</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2804" refid="group__controller_1ga3d7d1b07ba8809cd226d719aff0e0485" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga3d7d1b07ba8809cd226d719aff0e0485" kindref="member">hpm_dsp_park_q31</ref>(q31_t<sp/>alpha,<sp/>q31_t<sp/>beta,<sp/>q31_t<sp/>*a,<sp/>q31_t<sp/>*b,<sp/>q31_t<sp/>sin,<sp/>q31_t<sp/>cos)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_park_q31(alpha,<sp/>beta,<sp/>a,<sp/>b,<sp/>sin,<sp/>cos);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inverse<sp/>Park<sp/>Transform</highlight></codeline>
<codeline lineno="2821" refid="group__controller_1gaa6924b7118d38d3a621a37ca767b9191" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1gaa6924b7118d38d3a621a37ca767b9191" kindref="member">hpm_dsp_inv_park_f32</ref>(float32_t<sp/>a,<sp/>float32_t<sp/>b,<sp/>float32_t<sp/>*alpha,<sp/>float32_t<sp/>*beta,<sp/>float32_t<sp/>sin,<sp/>float32_t<sp/>cos)</highlight></codeline>
<codeline lineno="2822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_inv_park_f32(a,<sp/>b,<sp/>alpha,<sp/>beta,<sp/>sin,<sp/>cos);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2839" refid="group__controller_1ga2fbf750b4987751910662d1fec2640a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga2fbf750b4987751910662d1fec2640a2" kindref="member">hpm_dsp_inv_park_q31</ref>(q31_t<sp/>a,<sp/>q31_t<sp/>b,<sp/>q31_t<sp/>*alpha,<sp/>q31_t<sp/>*beta,<sp/>q31_t<sp/>sin,<sp/>q31_t<sp/>cos)</highlight></codeline>
<codeline lineno="2840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_inv_park_q31(a,<sp/>b,<sp/>alpha,<sp/>beta,<sp/>sin,<sp/>cos);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2852" refid="group__controller_1gab9ea056f3d22196ba8547a48b8e885bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__controller_1gab9ea056f3d22196ba8547a48b8e885bb" kindref="member">hpm_dsp_pid_f32</ref>(riscv_dsp_pid_f32_t<sp/>*instance,<sp/>float32_t<sp/>src)</highlight></codeline>
<codeline lineno="2853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_pid_f32(instance,<sp/>src);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2870" refid="group__controller_1ga43e41afb00bdbc95a29e6af6fec55711" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga43e41afb00bdbc95a29e6af6fec55711" kindref="member">hpm_dsp_init_pid_f32</ref>(riscv_dsp_pid_f32_t<sp/>*instance,<sp/>int32_t<sp/>set)</highlight></codeline>
<codeline lineno="2871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_init_pid_f32(instance,<sp/>set);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884" refid="group__controller_1ga92efef20292a4c98663930a88c307be3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__controller_1ga92efef20292a4c98663930a88c307be3" kindref="member">hpm_dsp_pid_q31</ref>(riscv_dsp_pid_q31_t<sp/>*instance,<sp/>q31_t<sp/>src)</highlight></codeline>
<codeline lineno="2885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_pid_q31(instance,<sp/>src);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903" refid="group__controller_1ga6b1c10c89ae007fd8988b63f48c751d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga6b1c10c89ae007fd8988b63f48c751d1" kindref="member">hpm_dsp_init_pid_q31</ref>(riscv_dsp_pid_q31_t<sp/>*instance,<sp/>int32_t<sp/>set)</highlight></codeline>
<codeline lineno="2904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_init_pid_q31(instance,<sp/>set);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"></highlight></codeline>
<codeline lineno="2910" refid="group__controller_1ga1c3de0c7b4e2047ed22bc185b1b0773f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__controller_1ga1c3de0c7b4e2047ed22bc185b1b0773f" kindref="member">hpm_dsp_pid_q15</ref>(riscv_dsp_pid_q15_t<sp/>*instance,<sp/>q15_t<sp/>src)</highlight></codeline>
<codeline lineno="2911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_pid_q15(instance,<sp/>src);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2928" refid="group__controller_1ga1f305b87a9bdd5984d557818590d09f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__controller_1ga1f305b87a9bdd5984d557818590d09f3" kindref="member">hpm_dsp_init_pid_q15</ref>(riscv_dsp_pid_q15_t<sp/>*instance,<sp/>int32_t<sp/>set)</highlight></codeline>
<codeline lineno="2929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_init_pid_q15(instance,<sp/>set);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_DISTANCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_distance_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight></codeline>
<codeline lineno="2963" refid="group__dist_1ga5a6abe08096484cb89d22dfbd80bc569" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1ga5a6abe08096484cb89d22dfbd80bc569" kindref="member">hpm_dsp_dist_bray_curtis_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_braycurtis_distance_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_bray_curtis_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981" refid="group__dist_1ga714df26664048e46e18ca5eadf1fd96e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1ga714df26664048e46e18ca5eadf1fd96e" kindref="member">hpm_dsp_dist_canberra_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_canberra_distance_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_canberra_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="2999" refid="group__dist_1gac127b339f2731b79cbf59170a84b7509" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gac127b339f2731b79cbf59170a84b7509" kindref="member">hpm_dsp_dist_chebyshev_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_chebyshev_distance_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_chebyshev_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight></codeline>
<codeline lineno="3017" refid="group__dist_1ga208c98d954761743fe5ef445db4816a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1ga208c98d954761743fe5ef445db4816a3" kindref="member">hpm_dsp_dist_city_block_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cityblock_distance_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_city_block_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight></codeline>
<codeline lineno="3035" refid="group__dist_1gab6b54f5a20f39df53279c996201da518" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gab6b54f5a20f39df53279c996201da518" kindref="member">hpm_dsp_dist_corr_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_correlation_distance_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_corr_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053" refid="group__dist_1gaab9da8281a8704736e523c217adb24c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gaab9da8281a8704736e523c217adb24c5" kindref="member">hpm_dsp_dist_cos_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cosine_distance_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_cos_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071" refid="group__dist_1ga12919110a2f3793d32ca989b5562d864" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1ga12919110a2f3793d32ca989b5562d864" kindref="member">hpm_dsp_dist_euclidean_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_euclidean_distance_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_euclidean_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3089" refid="group__dist_1gafd27e5f5f91b5bfac687daaa069e9f53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gafd27e5f5f91b5bfac687daaa069e9f53" kindref="member">hpm_dsp_dist_jensen_shannon_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3090"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_jensenshannon_distance_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_jensen_shannon_f32(src1,<sp/>src2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3108" refid="group__dist_1gafcaa33bb903087a19042b13f2664d0fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gafcaa33bb903087a19042b13f2664d0fc" kindref="member">hpm_dsp_dist_minkowski_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>int32_t<sp/>order,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_minkowski_distance_f32(src1,<sp/>src2,<sp/>order,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_dist_minkowski_f32(src1,<sp/>src2,<sp/>order,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight></codeline>
<codeline lineno="3126" refid="group__dist_1gaf5579f9ff423846bedab52025d7cc263" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gaf5579f9ff423846bedab52025d7cc263" kindref="member">hpm_dsp_bdist_dice_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_dice_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_dice_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3144" refid="group__dist_1ga87f06b8b5ad96e7cefcc331c2d8dce4f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1ga87f06b8b5ad96e7cefcc331c2d8dce4f" kindref="member">hpm_dsp_bdist_hamming_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_hamming_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_hamming_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight></codeline>
<codeline lineno="3162" refid="group__dist_1ga689b8f31df314beb05857a24f7d17ef8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1ga689b8f31df314beb05857a24f7d17ef8" kindref="member">hpm_dsp_bdist_jaccard_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_jaccard_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_jaccard_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180" refid="group__dist_1ga5cd748234321898cb9955c45a6ed403c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1ga5cd748234321898cb9955c45a6ed403c" kindref="member">hpm_dsp_bdist_kulsinski_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_kulsinski_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_kulsinski_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198" refid="group__dist_1gaf747a6dc1fb0e397cba8229ed3683b22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gaf747a6dc1fb0e397cba8229ed3683b22" kindref="member">hpm_dsp_bdist_sokal_michener_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_sokalmichener_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_sokal_michener_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216" refid="group__dist_1ga2d91cb3c2ca9a232a237e52f3aa144e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1ga2d91cb3c2ca9a232a237e52f3aa144e8" kindref="member">hpm_dsp_bdist_sokal_sneath_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_sokalsneath_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_sokal_sneath_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"></highlight></codeline>
<codeline lineno="3234" refid="group__dist_1gad8d15a8a83cffe63fee37f78e8d5ab1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gad8d15a8a83cffe63fee37f78e8d5ab1d" kindref="member">hpm_dsp_bdist_rogers_tanimoto_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_rogerstanimoto_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_rogers_tanimoto_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"></highlight></codeline>
<codeline lineno="3252" refid="group__dist_1gada67127384f51e1dcaf9ac596b61e75e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gada67127384f51e1dcaf9ac596b61e75e" kindref="member">hpm_dsp_bdist_yule_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_yule_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_yule_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight></codeline>
<codeline lineno="3270" refid="group__dist_1gaeb3d304487c2ec1a6c493d280b3fe624" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__dist_1gaeb3d304487c2ec1a6c493d280b3fe624" kindref="member">hpm_dsp_bdist_russell_rao_u32_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src2,<sp/>uint32_t<sp/>numofbool)</highlight></codeline>
<codeline lineno="3271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_russellrao_distance(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_bdist_russell_rao_u32_f32(src1,<sp/>src2,<sp/>numofbool);</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_FILTERING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_filtering_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310" refid="group__filtering_1ga4d968e779b3ec4f7cd019742f1185da0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga4d968e779b3ec4f7cd019742f1185da0" kindref="member">hpm_dsp_fir_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_fir_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_fir_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight></codeline>
<codeline lineno="3331" refid="group__filtering_1ga9ab3ad7d2df866b79e10ca428b7a44b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga9ab3ad7d2df866b79e10ca428b7a44b5" kindref="member">hpm_dsp_fir_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_fir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_fir_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight></codeline>
<codeline lineno="3352" refid="group__filtering_1gac52cfd7df3aac9f85d641300cab54502" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gac52cfd7df3aac9f85d641300cab54502" kindref="member">hpm_dsp_fir_fast_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_fir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_fir_fast_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3372" refid="group__filtering_1ga67ea163e762468fc5a05756e6cf961ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga67ea163e762468fc5a05756e6cf961ea" kindref="member">hpm_dsp_fir_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_fir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_fir_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight></codeline>
<codeline lineno="3391" refid="group__filtering_1ga350f0ccb0e3163f9b2f2d80c1a4b4a1a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga350f0ccb0e3163f9b2f2d80c1a4b4a1a" kindref="member">hpm_dsp_fir_fast_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_fir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_fir_fast_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3410" refid="group__filtering_1gaff2707d5d0630c7f1632f61e4af38027" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gaff2707d5d0630c7f1632f61e4af38027" kindref="member">hpm_dsp_fir_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_fir_q7_t<sp/>*instance,<sp/>q7_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_fir_q7(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425" refid="group__filtering_1ga084e1fc0471ba324afa9d46cd8d23b4a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga084e1fc0471ba324afa9d46cd8d23b4a" kindref="member">hpm_dsp_lfir_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_lfir_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_lfir_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight></codeline>
<codeline lineno="3440" refid="group__filtering_1ga6c7bb5727770068ccc1a1cf60766a376" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga6c7bb5727770068ccc1a1cf60766a376" kindref="member">hpm_dsp_lfir_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_lfir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_lfir_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459" refid="group__filtering_1gaa22d3dcb0e2be301e857c55d6ba93469" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gaa22d3dcb0e2be301e857c55d6ba93469" kindref="member">hpm_dsp_lfir_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_lfir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_lfir_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3465" refid="group__filtering_1ga7ab17b494a8c99806cf85a3d681755ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga7ab17b494a8c99806cf85a3d681755ff" kindref="member">hpm_dsp_dcmfir_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_dcmfir_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dcmfir_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3471" refid="group__filtering_1ga8f6e7aa621aa0157b00bd30087477eee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga8f6e7aa621aa0157b00bd30087477eee" kindref="member">hpm_dsp_dcmfir_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_dcmfir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dcmfir_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3477" refid="group__filtering_1ga15f43341502c4c75ac5746052cc301db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga15f43341502c4c75ac5746052cc301db" kindref="member">hpm_dsp_dcmfir_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_dcmfir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dcmfir_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3483" refid="group__filtering_1ga954a36c85b530592265d3afdeafb5077" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga954a36c85b530592265d3afdeafb5077" kindref="member">hpm_dsp_dcmfir_fast_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_dcmfir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dcmfir_fast_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3489" refid="group__filtering_1ga46fdb018ead4e1c961dc6132f7d7bbf9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga46fdb018ead4e1c961dc6132f7d7bbf9" kindref="member">hpm_dsp_dcmfir_fast_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_dcmfir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/><sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dcmfir_fast_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3495" refid="group__filtering_1gaaefb1607ae2d58820a87b55a94305545" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gaaefb1607ae2d58820a87b55a94305545" kindref="member">hpm_dsp_upsplfir_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_upsplfir_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_upsplfir_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3501" refid="group__filtering_1ga8c437e69efb5744881da1e809a62464d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga8c437e69efb5744881da1e809a62464d" kindref="member">hpm_dsp_upsplfir_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_upsplfir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_upsplfir_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3507" refid="group__filtering_1ga8f417cd672b8c83898ca33355e045d58" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga8f417cd672b8c83898ca33355e045d58" kindref="member">hpm_dsp_upsplfir_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_upsplfir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_upsplfir_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3513" refid="group__filtering_1ga267fa5f1a6f0677861ceb55a04b46e8b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga267fa5f1a6f0677861ceb55a04b46e8b" kindref="member">hpm_dsp_spafir_f32</ref>(riscv_dsp_spafir_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>float32_t<sp/>*buf,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_spafir_f32(instance,<sp/>src,<sp/>dst,<sp/>buf,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3519" refid="group__filtering_1ga094681ae28d948821c54a56a1e49a9c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga094681ae28d948821c54a56a1e49a9c5" kindref="member">hpm_dsp_spafir_q15</ref>(riscv_dsp_spafir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>q15_t<sp/>*buf1,<sp/>q31_t<sp/>*buf2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_spafir_q15(instance,<sp/>src,<sp/>dst,<sp/>buf1,<sp/>buf2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3525" refid="group__filtering_1ga99ec238f09a360df15e5c071d69d79b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga99ec238f09a360df15e5c071d69d79b3" kindref="member">hpm_dsp_spafir_q31</ref>(riscv_dsp_spafir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>q31_t<sp/>*buf,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_spafir_q31(instance,<sp/>src,<sp/>dst,<sp/>buf,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3531" refid="group__filtering_1ga33994c90d0cfc5321f256741cc8d5399" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga33994c90d0cfc5321f256741cc8d5399" kindref="member">hpm_dsp_spafir_q7</ref>(riscv_dsp_spafir_q7_t<sp/>*instance,<sp/>q7_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>q7_t<sp/>*buf1,<sp/>q31_t<sp/>*buf2,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_spafir_q7(instance,<sp/>src,<sp/>dst,<sp/>buf1,<sp/>buf2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>LMS<sp/>filte</highlight></codeline>
<codeline lineno="3552" refid="group__filtering_1ga5c9fb175b6db030b8fca0f49134cbe66" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga5c9fb175b6db030b8fca0f49134cbe66" kindref="member">hpm_dsp_lms_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_lms_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*ref,<sp/>float32_t<sp/>*dst,<sp/>float32_t<sp/>*err,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_lms_f32(instance,<sp/>src,<sp/>ref,<sp/>dst,<sp/>err,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"></highlight></codeline>
<codeline lineno="3575" refid="group__filtering_1ga4b75751a1db8eaca9ed8988dcc7c762c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga4b75751a1db8eaca9ed8988dcc7c762c" kindref="member">hpm_dsp_lms_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_lms_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*ref,<sp/>q31_t<sp/>*dst,<sp/>q31_t<sp/>*err,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_lms_q31(instance,<sp/>src,<sp/>ref,<sp/>dst,<sp/>err,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight></codeline>
<codeline lineno="3598" refid="group__filtering_1gae67bd21265828239d887a5c64ad50965" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gae67bd21265828239d887a5c64ad50965" kindref="member">hpm_dsp_lms_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_lms_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*ref,<sp/>q15_t<sp/>*dst,<sp/>q15_t<sp/>*err,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_lms_q15(instance,<sp/>src,<sp/>ref,<sp/>dst,<sp/>err,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight></codeline>
<codeline lineno="3609" refid="group__filtering_1ga8afab7bf3bfed7c69dc198209a8ad678" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga8afab7bf3bfed7c69dc198209a8ad678" kindref="member">hpm_dsp_nlms_f32</ref>(riscv_dsp_nlms_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*ref,<sp/>float32_t<sp/>*dst,<sp/>float32_t<sp/>*err,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_nlms_f32(instance,<sp/>src,<sp/>ref,<sp/>dst,<sp/>err,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight></codeline>
<codeline lineno="3621" refid="group__filtering_1gaf5f1a55f89ebbcc1d79a19bfdf2b0ebf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gaf5f1a55f89ebbcc1d79a19bfdf2b0ebf" kindref="member">hpm_dsp_nlms_q31</ref>(riscv_dsp_nlms_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*ref,<sp/>q31_t<sp/>*dst,<sp/>q31_t<sp/>*err,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_nlms_q31(instance,<sp/>src,<sp/>ref,<sp/>dst,<sp/>err,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"></highlight></codeline>
<codeline lineno="3629" refid="group__filtering_1ga1a696fc5a1995fa1bbc20845c64ebb36" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga1a696fc5a1995fa1bbc20845c64ebb36" kindref="member">hpm_dsp_nlms_q15</ref>(riscv_dsp_nlms_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*ref,<sp/>q15_t<sp/>*dst,<sp/>q15_t<sp/>*err,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_nlms_q15(instance,<sp/>src,<sp/>ref,<sp/>dst,<sp/>err,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convolution</highlight></codeline>
<codeline lineno="3647" refid="group__filtering_1ga27e6a8cf544e653c582aa8588cc34f64" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga27e6a8cf544e653c582aa8588cc34f64" kindref="member">hpm_dsp_conv_f32</ref>(float32_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>float32_t<sp/>*dst)</highlight></codeline>
<codeline lineno="3648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_conv_f32(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2);</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_conv_f32(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight></codeline>
<codeline lineno="3673" refid="group__filtering_1ga8dab87c45b4a2e9fc8da0b2e64192dd2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga8dab87c45b4a2e9fc8da0b2e64192dd2" kindref="member">hpm_dsp_conv_q15</ref>(q15_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q15_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q15_t<sp/>*dst)</highlight></codeline>
<codeline lineno="3674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_conv_q15(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2);</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_conv_q15(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701" refid="group__filtering_1ga4fded11c34091870942bf1cdacfa143f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga4fded11c34091870942bf1cdacfa143f" kindref="member">hpm_dsp_conv_q31</ref>(q31_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q31_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q31_t<sp/>*dst)</highlight></codeline>
<codeline lineno="3702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_conv_q31(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2);</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_conv_q31(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst);</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3727" refid="group__filtering_1gacc74ec51c4ca00fec913db7123f2ab9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gacc74ec51c4ca00fec913db7123f2ab9a" kindref="member">hpm_dsp_conv_q7</ref>(q7_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q7_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q7_t<sp/>*dst)</highlight></codeline>
<codeline lineno="3728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_conv_q7(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2);</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_conv_q7(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst);</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3752" refid="group__filtering_1gab37867245ca9645f9114a47e8b656e0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__filtering_1gab37867245ca9645f9114a47e8b656e0f" kindref="member">hpm_dsp_conv_partial_f32</ref>(float32_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/>startindex,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_conv_partial_f32(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>startindex,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_conv_partial_f32(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst,<sp/>startindex,</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight></codeline>
<codeline lineno="3778" refid="group__filtering_1ga71441a91e0614a6ff7698fea8105077a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__filtering_1ga71441a91e0614a6ff7698fea8105077a" kindref="member">hpm_dsp_conv_partial_q15</ref>(q15_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q15_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>startindex,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_conv_partial_q15(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>startindex,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_conv_partial_q15(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst,<sp/>startindex,</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight></codeline>
<codeline lineno="3804" refid="group__filtering_1gab27a4b274c01206e3f70b75f8c86ec75" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__filtering_1gab27a4b274c01206e3f70b75f8c86ec75" kindref="member">hpm_dsp_conv_partial_q31</ref>(q31_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q31_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>startindex,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_conv_partial_q31(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>startindex,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_conv_partial_q31(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst,<sp/>startindex,</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight></codeline>
<codeline lineno="3830" refid="group__filtering_1gad5733aa4a0ad65f41de2c0cbcc7ae39f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__filtering_1gad5733aa4a0ad65f41de2c0cbcc7ae39f" kindref="member">hpm_dsp_conv_partial_q7</ref>(q7_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q7_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/>startindex,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_conv_partial_q7(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>startindex,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_conv_partial_q7(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst,<sp/>startindex,</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Correlation</highlight></codeline>
<codeline lineno="3853" refid="group__filtering_1ga65a88836464f37af1f450e9700015e9e" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga65a88836464f37af1f450e9700015e9e" kindref="member">hpm_dsp_corr_f32</ref>(float32_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>float32_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>float32_t<sp/>*dst)</highlight></codeline>
<codeline lineno="3854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_correlate_f32(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2);</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_corr_f32(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879" refid="group__filtering_1gad1f7dcf423229ee704843c3662a2a282" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gad1f7dcf423229ee704843c3662a2a282" kindref="member">hpm_dsp_corr_q15</ref>(q15_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q15_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q15_t<sp/>*dst)</highlight></codeline>
<codeline lineno="3880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_correlate_q15(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2);</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_corr_q15(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst);</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight></codeline>
<codeline lineno="3909" refid="group__filtering_1ga01227b2a5c3c1a9729d43d76cbd08a82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga01227b2a5c3c1a9729d43d76cbd08a82" kindref="member">hpm_dsp_corr_q31</ref>(q31_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q31_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q31_t<sp/>*dst)</highlight></codeline>
<codeline lineno="3910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_correlate_q31(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2);</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_corr_q31(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight></codeline>
<codeline lineno="3935" refid="group__filtering_1ga158701e4c93246b5c5386fd7a5acb09c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga158701e4c93246b5c5386fd7a5acb09c" kindref="member">hpm_dsp_corr_q7</ref>(q7_t<sp/>*src1,<sp/>uint32_t<sp/>len1,<sp/>q7_t<sp/>*src2,<sp/>uint32_t<sp/>len2,<sp/>q7_t<sp/>*dst)</highlight></codeline>
<codeline lineno="3936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_correlate_q7(dst,<sp/>src1,<sp/>len1,<sp/>src2,<sp/>len2);</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_corr_q7(src1,<sp/>len1,<sp/>src2,<sp/>len2,<sp/>dst);</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3943"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3945" refid="group__filtering_1ga1f8993a488451f5360a77eafdf7c0c6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga1f8993a488451f5360a77eafdf7c0c6b" kindref="member">hpm_dsp_bq_df1_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_df1_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_df1_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3951" refid="group__filtering_1gaccc9a7154e1ba085eb4fbc6641a488b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gaccc9a7154e1ba085eb4fbc6641a488b1" kindref="member">hpm_dsp_bq_df1_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_df1_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_df1_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3957" refid="group__filtering_1ga41d6c66ee80146c1d127e12258f4eca2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga41d6c66ee80146c1d127e12258f4eca2" kindref="member">hpm_dsp_bq_df1_fast_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_df1_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_df1_fast_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3963" refid="group__filtering_1gad9fa617a5e2b37b24ec11af415378d50" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gad9fa617a5e2b37b24ec11af415378d50" kindref="member">hpm_dsp_bq_df1_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_df1_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_df1_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3969" refid="group__filtering_1gacc95120b95f3f066dca0367dc648d174" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gacc95120b95f3f066dca0367dc648d174" kindref="member">hpm_dsp_bq_df1_fast_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_df1_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_df1_fast_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3975" refid="group__filtering_1ga05f9ac5550291bd6ac2cf46dbeb38325" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga05f9ac5550291bd6ac2cf46dbeb38325" kindref="member">hpm_dsp_bq_df1_32x64_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_df1_32x64_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_df1_32x64_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3981" refid="group__filtering_1ga53cf5366d6fb61264485bafa050bb5b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga53cf5366d6fb61264485bafa050bb5b0" kindref="member">hpm_dsp_bq_df2T_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_df2T_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_df2T_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3987" refid="group__filtering_1ga3a83d5794ebc3bfe9a45870101adf2d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga3a83d5794ebc3bfe9a45870101adf2d4" kindref="member">hpm_dsp_bq_df2T_f64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_df2T_f64_t<sp/>*instance,<sp/>float64_t<sp/>*src,<sp/>float64_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_df2T_f64(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3993" refid="group__filtering_1gaeb6bcbf2fd3f2173d2f8268f045a5837" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gaeb6bcbf2fd3f2173d2f8268f045a5837" kindref="member">hpm_dsp_bq_stereo_df2T_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_bq_stereo_df2T_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="3994"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_bq_stereo_df2T_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"></highlight></codeline>
<codeline lineno="4000" refid="group__filtering_1gac7d4aa7ae687f7be1439de813601246a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gac7d4aa7ae687f7be1439de813601246a" kindref="member">hpm_dsp_liir_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_liir_f32_t<sp/>*instance,<sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="4001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_liir_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4006" refid="group__filtering_1gab2c9912a4eb3cf9f83365aec9a83a4f4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gab2c9912a4eb3cf9f83365aec9a83a4f4" kindref="member">hpm_dsp_liir_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_liir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="4007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_liir_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4012" refid="group__filtering_1ga49d94f3232a999428c84fea54b517bec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga49d94f3232a999428c84fea54b517bec" kindref="member">hpm_dsp_liir_fast_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_liir_q31_t<sp/>*instance,<sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="4013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_liir_fast_q31(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4018" refid="group__filtering_1ga1ac87e633f1ffaf64c564bc42418774c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1ga1ac87e633f1ffaf64c564bc42418774c" kindref="member">hpm_dsp_liir_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_liir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="4019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_liir_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4024" refid="group__filtering_1gad570347c20680570d1b3638ce58589e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__filtering_1gad570347c20680570d1b3638ce58589e8" kindref="member">hpm_dsp_liir_fast_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_liir_q15_t<sp/>*instance,<sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="4025"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_liir_fast_q15(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_MATRIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_matrix_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"></highlight></codeline>
<codeline lineno="4069"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrix<sp/>Addition</highlight></codeline>
<codeline lineno="4078" refid="group__matrix_1ga9c803c210d7ac4b76fb44924660482b0" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga9c803c210d7ac4b76fb44924660482b0" kindref="member">hpm_dsp_mat_add_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_add_f32(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_add_f32(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"></highlight></codeline>
<codeline lineno="4099" refid="group__matrix_1gaa94129caac06a0bf0e755f3160f6ff57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gaa94129caac06a0bf0e755f3160f6ff57" kindref="member">hpm_dsp_mat_add_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4102"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_add_q15(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_add_q15(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"></highlight></codeline>
<codeline lineno="4120" refid="group__matrix_1ga37263640ebdd852d21bb736a562cbdd0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga37263640ebdd852d21bb736a562cbdd0" kindref="member">hpm_dsp_mat_add_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_add_q31(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_add_q31(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrix<sp/>Inverse</highlight></codeline>
<codeline lineno="4139" refid="group__matrix_1ga28939f8f448b65162dbe7b838443d04c" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__matrix_1ga28939f8f448b65162dbe7b838443d04c" kindref="member">hpm_dsp_mat_inv_f32</ref>(float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="4140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_inverse_f32(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_mat_inv_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4149" refid="group__matrix_1gaf7d1195891303f68429f9aeacc527354" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__matrix_1gaf7d1195891303f68429f9aeacc527354" kindref="member">hpm_dsp_mat_inv_f64</ref>(float64_t<sp/>*src,<sp/>float64_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="4150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4152"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_inverse_f64(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_mat_inv_f64(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrix<sp/>Multiplication</highlight></codeline>
<codeline lineno="4170" refid="group__matrix_1ga2694ba40e6702c8e09d75240e25e3b28" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga2694ba40e6702c8e09d75240e25e3b28" kindref="member">hpm_dsp_mat_mul_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_mult_f32(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_f32(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4181" refid="group__matrix_1ga3ed426c85b8cd96dca5053caa6b51a45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga3ed426c85b8cd96dca5053caa6b51a45" kindref="member">hpm_dsp_mat_mul_f64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float64_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float64_t<sp/>*src2,<sp/>float64_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_mult_f64(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_f64(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4201" refid="group__matrix_1ga2819c13d6a4ece1dde56f110538f12a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga2819c13d6a4ece1dde56f110538f12a1" kindref="member">hpm_dsp_cmat_mul_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4204"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_cmplx_mult_f32(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmat_mul_f32(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight></codeline>
<codeline lineno="4228" refid="group__matrix_1gae839a9b987734e96b8fd51643cbc01d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gae839a9b987734e96b8fd51643cbc01d4" kindref="member">hpm_dsp_mat_mul_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_mult_q15(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_q15(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4238" refid="group__matrix_1ga7c65498af11d1d5a4936a1f47d3342ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga7c65498af11d1d5a4936a1f47d3342ec" kindref="member">hpm_dsp_mat_mul_fast_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_mult_q15(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_fast_q15(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"></highlight></codeline>
<codeline lineno="4265" refid="group__matrix_1ga5ce2d2f57c1a36afdef01f60c81356ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga5ce2d2f57c1a36afdef01f60c81356ec" kindref="member">hpm_dsp_cmat_mul_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_cmplx_mult_q15(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmat_mul_q15(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight></codeline>
<codeline lineno="4292" refid="group__matrix_1ga59cf991946f20e6faee1c8d072817b48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga59cf991946f20e6faee1c8d072817b48" kindref="member">hpm_dsp_mat_mul_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4295"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_mult_q31(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_q31(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4302" refid="group__matrix_1ga505cc734fa70e616ce922a3773d7d058" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga505cc734fa70e616ce922a3773d7d058" kindref="member">hpm_dsp_mat_mul_fast_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_mult_q31(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_fast_q31(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"></highlight></codeline>
<codeline lineno="4329" refid="group__matrix_1ga6cbad2e069f4544598e4496b0b011a9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga6cbad2e069f4544598e4496b0b011a9e" kindref="member">hpm_dsp_cmat_mul_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_mat_cmplx_mult_q31(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cmat_mul_q31(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"></highlight></codeline>
<codeline lineno="4356" refid="group__matrix_1gab3821d447640e097bba2ea057bec2101" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gab3821d447640e097bba2ea057bec2101" kindref="member">hpm_dsp_mat_mul_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src2,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_q7(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4378" refid="group__matrix_1ga2be8e4b55feddf562f067c7f760da3c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga2be8e4b55feddf562f067c7f760da3c1" kindref="member">hpm_dsp_mat_mul_vxm_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<sp/>src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<sp/>src2,<sp/>q7_t<sp/>*<sp/>dst,<sp/>uint32_t<sp/>col,<sp/>uint32_t<sp/>col2)</highlight></codeline>
<codeline lineno="4379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_mul_mxv_q7(dst,<sp/>src1,<sp/>src2,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_vxm_q7(src1,<sp/>src2,<sp/>dst,<sp/>col,<sp/>col2);</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"></highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrix<sp/>Power<sp/>2<sp/>Function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>input<sp/>is<sp/>a<sp/>square<sp/>matrix<sp/>for<sp/>riscv_dsp_mat_pow2_cache_f64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4392" refid="group__matrix_1gac3359bda42ba8700416d0c264bf10f61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__matrix_1gac3359bda42ba8700416d0c264bf10f61" kindref="member">hpm_dsp_mat_pwr2_cache_f64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float64_t<sp/>*src,<sp/>float64_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="4393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_mat_pwr2_cache_f64(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrix<sp/>Scale</highlight></codeline>
<codeline lineno="4408" refid="group__matrix_1gaaff144f0790d2ba09cb379209ffc37f1" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gaaff144f0790d2ba09cb379209ffc37f1" kindref="member">hpm_dsp_mat_scale_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>scale,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_scale_f32(dst,<sp/>src,<sp/>row,<sp/>col,<sp/>scale);</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_scale_f32(src,<sp/>scale,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"></highlight></codeline>
<codeline lineno="4433" refid="group__matrix_1ga4f0aa12d7d196af65d3c18500a3e246d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga4f0aa12d7d196af65d3c18500a3e246d" kindref="member">hpm_dsp_mat_scale_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>scale_fract,<sp/>int32_t<sp/>shift,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_scale_q15(dst,<sp/>src,<sp/>row,<sp/>col,<sp/>scale_fract,<sp/>shift);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_scale_q15(src,<sp/>scale_fract,<sp/>shift,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"></highlight></codeline>
<codeline lineno="4458" refid="group__matrix_1gae9852e3b101f40e5942ea1f5d7efa51f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gae9852e3b101f40e5942ea1f5d7efa51f" kindref="member">hpm_dsp_mat_scale_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>scale_fract,<sp/>int32_t<sp/>shift,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_scale_q31(dst,<sp/>src,<sp/>row,<sp/>col,<sp/>scale_fract,<sp/>shift);</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_scale_q31(src,<sp/>scale_fract,<sp/>shift,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrix<sp/>Subtraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal"></highlight></codeline>
<codeline lineno="4480" refid="group__matrix_1ga980f22a064fdbde8e2ff587b71c9f117" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga980f22a064fdbde8e2ff587b71c9f117" kindref="member">hpm_dsp_mat_sub_f64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float64_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float64_t<sp/>*src2,</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_sub_f64(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_sub_f64(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight></codeline>
<codeline lineno="4500" refid="group__matrix_1ga1157c9dc698c5ae412cf2b3ed61de494" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga1157c9dc698c5ae412cf2b3ed61de494" kindref="member">hpm_dsp_mat_sub_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_sub_f32(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_sub_f32(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4508"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"></highlight></codeline>
<codeline lineno="4521" refid="group__matrix_1gafe8389f7178c599543913998896bbe33" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gafe8389f7178c599543913998896bbe33" kindref="member">hpm_dsp_mat_sub_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_sub_q15(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_sub_q15(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"></highlight></codeline>
<codeline lineno="4542" refid="group__matrix_1gaf1b3af7f3e77fb0d79f3ba00b16186dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gaf1b3af7f3e77fb0d79f3ba00b16186dd" kindref="member">hpm_dsp_mat_sub_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_sub_q31(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_sub_q31(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrix<sp/>Transpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"></highlight></codeline>
<codeline lineno="4563" refid="group__matrix_1ga5a129095818accd33181ad52ae0132c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga5a129095818accd33181ad52ae0132c6" kindref="member">hpm_dsp_mat_trans_f64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float64_t<sp/>*src,<sp/>float64_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_trans_f64(dst,<sp/>src,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_trans_f64(src,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"></highlight></codeline>
<codeline lineno="4581" refid="group__matrix_1ga6d6c9a3a6e628cc39703fb08f698ef63" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga6d6c9a3a6e628cc39703fb08f698ef63" kindref="member">hpm_dsp_mat_trans_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_trans_f32(src,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"></highlight></codeline>
<codeline lineno="4595" refid="group__matrix_1ga17ccb9100e8f31ce3c727ee4c3e32417" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga17ccb9100e8f31ce3c727ee4c3e32417" kindref="member">hpm_dsp_mat_trans_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_trans_q15(dst,<sp/>src,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_trans_q15(src,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4603"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight></codeline>
<codeline lineno="4613" refid="group__matrix_1ga8f103b765112d6f53f97b0a5048531d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga8f103b765112d6f53f97b0a5048531d8" kindref="member">hpm_dsp_mat_trans_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4616"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_trans_q31(dst,<sp/>src,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_trans_q31(src,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"></highlight></codeline>
<codeline lineno="4631" refid="group__matrix_1ga4b88fdfcba817cbe325a932ee25a344f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga4b88fdfcba817cbe325a932ee25a344f" kindref="member">hpm_dsp_mat_trans_u8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/>uint8_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_trans_u8(src,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"></highlight></codeline>
<codeline lineno="4646" refid="group__matrix_1gaee21507f92a3762e2a876c1a5016f05e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gaee21507f92a3762e2a876c1a5016f05e" kindref="member">hpm_dsp_mat_trans_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_trans_q7(src,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"></highlight></codeline>
<codeline lineno="4684" refid="group__matrix_1ga1572b3f4872e2fc8559f65172d600e94" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga1572b3f4872e2fc8559f65172d600e94" kindref="member">hpm_dsp_mat_oprod_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<sp/>src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<sp/>src2,</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q31_t<sp/>*<sp/>dst,<sp/>uint32_t<sp/>size1,<sp/>uint32_t<sp/>size2)</highlight></codeline>
<codeline lineno="4686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_oprod_q31(dst,<sp/>src1,<sp/>src2,<sp/>size1,<sp/>size2);</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_oprod_q31(src1,<sp/>src2,<sp/>dst,<sp/>size1,<sp/>size2);</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4693"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"></highlight></codeline>
<codeline lineno="4718" refid="group__matrix_1ga1cbd7d2efa0ea89ef9e13c11941917d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga1cbd7d2efa0ea89ef9e13c11941917d7" kindref="member">hpm_dsp_mat_mul_mxv_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src2,</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_mul_mxv_f32(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_mxv_f32(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4727"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4738" refid="group__matrix_1ga511423c60883438ad6527712fb578342" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga511423c60883438ad6527712fb578342" kindref="member">hpm_dsp_mat_mul_mxv_q15</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*src2,</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_mul_mxv_q15(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_mxv_q15(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4758" refid="group__matrix_1ga70dc9d3a349273b985194460e605a51a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1ga70dc9d3a349273b985194460e605a51a" kindref="member">hpm_dsp_mat_mul_mxv_q31</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*src2,</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4762"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_mul_mxv_q31(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_mxv_q31(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4778" refid="group__matrix_1gab231aaccfb8b2484bb5f38b6ac3c2a99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix_1gab231aaccfb8b2484bb5f38b6ac3c2a99" kindref="member">hpm_dsp_mat_mul_mxv_q7</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*src2,</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/>row,<sp/>uint32_t<sp/>col)</highlight></codeline>
<codeline lineno="4780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4782"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_mat_mul_mxv_q7(dst,<sp/>src1,<sp/>src2,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_mat_mul_mxv_q7(src1,<sp/>src2,<sp/>dst,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4787"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"></highlight></codeline>
<codeline lineno="4790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4791"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4798"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_SVM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"></highlight></codeline>
<codeline lineno="4806"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4807"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_svm_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4818" refid="group__svm_1ga1a59d30d42fe201e344ad948de30ef3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__svm_1ga1a59d30d42fe201e344ad948de30ef3e" kindref="member">hpm_dsp_svm_linear_est_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_svm_linear_f32_t<sp/>*instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>int32_t<sp/>*result)</highlight></codeline>
<codeline lineno="4819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_svm_linear_est_f32(instance,<sp/>src,<sp/>result);</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"></highlight></codeline>
<codeline lineno="4832" refid="group__svm_1gae9873850460ccea25cd3953c5255b98f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__svm_1gae9873850460ccea25cd3953c5255b98f" kindref="member">hpm_dsp_svm_sigmoid_est_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_svm_sigmoid_f32_t<sp/>*instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>int32_t<sp/>*result)</highlight></codeline>
<codeline lineno="4833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_svm_sigmoid_est_f32(instance,<sp/>src,<sp/>result);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4846" refid="group__svm_1gaa16df16028a3ed4909174b4607d4486f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__svm_1gaa16df16028a3ed4909174b4607d4486f" kindref="member">hpm_dsp_svm_rbf_est_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_svm_rbf_f32_t<sp/>*instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>int32_t<sp/>*result)</highlight></codeline>
<codeline lineno="4847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_svm_rbf_est_f32(instance,<sp/>src,<sp/>result);</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"></highlight></codeline>
<codeline lineno="4860" refid="group__svm_1gac05e2ecb8e33cb8f2eab649ac01a34aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__svm_1gac05e2ecb8e33cb8f2eab649ac01a34aa" kindref="member">hpm_dsp_svm_poly_est_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_svm_poly_f32_t<sp/>*instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/>int32_t<sp/>*result)</highlight></codeline>
<codeline lineno="4861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_svm_poly_est_f32(instance,<sp/>src,<sp/>result);</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"></highlight></codeline>
<codeline lineno="4867"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_TRANSFORM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4883"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_transform_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4916" refid="group__transform_1ga1ca5d48ae62a65107507c38c790e385e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga1ca5d48ae62a65107507c38c790e385e" kindref="member">hpm_dsp_cfft_rd2_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="4917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4919"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_f32(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cfft_rd2_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"></highlight></codeline>
<codeline lineno="4934" refid="group__transform_1ga8f8a9339650f53476e976474f3303129" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga8f8a9339650f53476e976474f3303129" kindref="member">hpm_dsp_cifft_rd2_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="4935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4937"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_f32(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cifft_rd2_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4942"><highlight class="normal"></highlight></codeline>
<codeline lineno="4943"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"></highlight></codeline>
<codeline lineno="4959" refid="group__transform_1gad0224df7d8e32c31149ce9cdf2c55707" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1gad0224df7d8e32c31149ce9cdf2c55707" kindref="member">hpm_dsp_cfft_rd2_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="4960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_q15(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cfft_rd2_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight></codeline>
<codeline lineno="4983" refid="group__transform_1gae7fb6317f565c4d11559678ff18ed955" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1gae7fb6317f565c4d11559678ff18ed955" kindref="member">hpm_dsp_cifft_rd2_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="4984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_q15(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cifft_rd2_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="5007" refid="group__transform_1ga8fc38e35f132462a9a4b34ab216b7196" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga8fc38e35f132462a9a4b34ab216b7196" kindref="member">hpm_dsp_cfft_rd2_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_q31(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cfft_rd2_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5015"><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5017"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"></highlight></codeline>
<codeline lineno="5032" refid="group__transform_1ga571b6dee2ca287f93d546a3e62df172e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga571b6dee2ca287f93d546a3e62df172e" kindref="member">hpm_dsp_cifft_rd2_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5035"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_q31(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cifft_rd2_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"></highlight></codeline>
<codeline lineno="5073" refid="group__transform_1gadffca35ffc5078eec074116a599225af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1gadffca35ffc5078eec074116a599225af" kindref="member">hpm_dsp_cfft_rd4_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5076"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_f32(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cfft_rd4_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"></highlight></codeline>
<codeline lineno="5082"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"></highlight></codeline>
<codeline lineno="5092" refid="group__transform_1ga7af4f1d3c15b67eed5f21726bb0f404c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga7af4f1d3c15b67eed5f21726bb0f404c" kindref="member">hpm_dsp_cifft_rd4_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_f32(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cifft_rd4_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"></highlight></codeline>
<codeline lineno="5116" refid="group__transform_1ga773ad5f6dbd964231307fed9a53d9b50" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga773ad5f6dbd964231307fed9a53d9b50" kindref="member">hpm_dsp_cfft_rd4_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_q15(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cfft_rd4_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"></highlight></codeline>
<codeline lineno="5140" refid="group__transform_1ga34edf2668cdf71c343eb37367b4f8d60" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga34edf2668cdf71c343eb37367b4f8d60" kindref="member">hpm_dsp_cifft_rd4_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_q15(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cifft_rd4_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"></highlight></codeline>
<codeline lineno="5164" refid="group__transform_1ga4fd0b94ec991439b7c6bd022fca0caae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga4fd0b94ec991439b7c6bd022fca0caae" kindref="member">hpm_dsp_cfft_rd4_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_q31(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cfft_rd4_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"></highlight></codeline>
<codeline lineno="5188" refid="group__transform_1gad85c0cf525a168fe33a2f14217926871" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1gad85c0cf525a168fe33a2f14217926871" kindref="member">hpm_dsp_cifft_rd4_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_cfft_q31(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cifft_rd4_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"></highlight></codeline>
<codeline lineno="5219" refid="group__transform_1ga6187157d51fd9cc481346deb207ac680" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga6187157d51fd9cc481346deb207ac680" kindref="member">hpm_dsp_cfft_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5222"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cfft_f32(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cfft_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"></highlight></codeline>
<codeline lineno="5236" refid="group__transform_1ga25328b55bccd5470a5241f207db32889" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga25328b55bccd5470a5241f207db32889" kindref="member">hpm_dsp_cfft_f64</ref>(float64_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cfft_f64(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cfft_f64(src,<sp/>m);</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"></highlight></codeline>
<codeline lineno="5253" refid="group__transform_1ga2d1b6b117ceffd15340befdc2459cd5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga2d1b6b117ceffd15340befdc2459cd5c" kindref="member">hpm_dsp_cifft_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cfft_f32(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cifft_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"></highlight></codeline>
<codeline lineno="5270" refid="group__transform_1ga80d30593248d81b533431bce10835bf3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga80d30593248d81b533431bce10835bf3" kindref="member">hpm_dsp_cifft_f64</ref>(float64_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5273"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cfft_f64(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cifft_f64(src,<sp/>m);</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"></highlight></codeline>
<codeline lineno="5281"><highlight class="normal"></highlight></codeline>
<codeline lineno="5294" refid="group__transform_1ga5ff435e352bd69171ebbc599e4e20b91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga5ff435e352bd69171ebbc599e4e20b91" kindref="member">hpm_dsp_cfft_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5297"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cfft_q15(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cfft_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"></highlight></codeline>
<codeline lineno="5317" refid="group__transform_1ga0965bc052276e874a04f766dc2263cd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga0965bc052276e874a04f766dc2263cd6" kindref="member">hpm_dsp_cifft_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5320"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cfft_q15(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cifft_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"></highlight></codeline>
<codeline lineno="5340" refid="group__transform_1ga853a2cba60d4ca179ed4ddb1dc59f564" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga853a2cba60d4ca179ed4ddb1dc59f564" kindref="member">hpm_dsp_cfft_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5343"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cfft_q31(src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cfft_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"></highlight></codeline>
<codeline lineno="5363" refid="group__transform_1ga777ed959fbe108e28adf4f8b941fba0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga777ed959fbe108e28adf4f8b941fba0d" kindref="member">hpm_dsp_cifft_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5366"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_cfft_q31(src,<sp/>m,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_cifft_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"></highlight></codeline>
<codeline lineno="5403" refid="group__transform_1gaedb73a0185a23a37fc3a62e5830d174c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1gaedb73a0185a23a37fc3a62e5830d174c" kindref="member">hpm_dsp_rfft_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5406"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_rfft_f32(src,<sp/>src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rfft_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"></highlight></codeline>
<codeline lineno="5421" refid="group__transform_1ga73d9e92c9fed62ba566d03c4887928d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga73d9e92c9fed62ba566d03c4887928d8" kindref="member">hpm_dsp_rfft_f64</ref>(float64_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5424"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_rfft_f64(src,<sp/>src,<sp/>m,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rfft_f64(src,<sp/>m);</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"></highlight></codeline>
<codeline lineno="5439" refid="group__transform_1ga4162f89a895be19f3a6115040caf68cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga4162f89a895be19f3a6115040caf68cc" kindref="member">hpm_dsp_rifft_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rifft_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"></highlight></codeline>
<codeline lineno="5453" refid="group__transform_1gac7fbf1b2ff9de4cdd41ac57f2f61218e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1gac7fbf1b2ff9de4cdd41ac57f2f61218e" kindref="member">hpm_dsp_rifft_f64</ref>(float64_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rifft_f64(src,<sp/>m);</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"></highlight></codeline>
<codeline lineno="5473" refid="group__transform_1gabc4c70ef2b76bb2d5f9ceee7eca852dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1gabc4c70ef2b76bb2d5f9ceee7eca852dc" kindref="member">hpm_dsp_rfft_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rfft_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"></highlight></codeline>
<codeline lineno="5493" refid="group__transform_1ga505fbc56b39ce54d16d4ebd0a5f96bff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga505fbc56b39ce54d16d4ebd0a5f96bff" kindref="member">hpm_dsp_rifft_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rifft_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"></highlight></codeline>
<codeline lineno="5513" refid="group__transform_1gaab3001c9fef7ae187ee349e86ceb99c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1gaab3001c9fef7ae187ee349e86ceb99c0" kindref="member">hpm_dsp_rfft_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rfft_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"></highlight></codeline>
<codeline lineno="5533" refid="group__transform_1ga626758fc27f839e2cf75fa53c405f918" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__transform_1ga626758fc27f839e2cf75fa53c405f918" kindref="member">hpm_dsp_rifft_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_rifft_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"></highlight></codeline>
<codeline lineno="5558" refid="group__transform_1ga7f8d458e22b61d58fb1800a728da2b9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga7f8d458e22b61d58fb1800a728da2b9a" kindref="member">hpm_dsp_dct_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dct_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"></highlight></codeline>
<codeline lineno="5571" refid="group__transform_1ga72de4b5b653430b7d6ceaa1a5d1e28b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga72de4b5b653430b7d6ceaa1a5d1e28b1" kindref="member">hpm_dsp_idct_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_idct_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"></highlight></codeline>
<codeline lineno="5590" refid="group__transform_1gaa17a75e3643c6539a835486a9ba2c7a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1gaa17a75e3643c6539a835486a9ba2c7a4" kindref="member">hpm_dsp_dct_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dct_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"></highlight></codeline>
<codeline lineno="5609" refid="group__transform_1ga6d883eaf5ba24d31dd7a9fea16db8124" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga6d883eaf5ba24d31dd7a9fea16db8124" kindref="member">hpm_dsp_idct_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_idct_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"></highlight></codeline>
<codeline lineno="5628" refid="group__transform_1ga677a6eb14053beb4034903b19e2b9138" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga677a6eb14053beb4034903b19e2b9138" kindref="member">hpm_dsp_dct_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dct_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"></highlight></codeline>
<codeline lineno="5647" refid="group__transform_1ga945efbfea727d0f813b5953316b36f92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga945efbfea727d0f813b5953316b36f92" kindref="member">hpm_dsp_idct_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_idct_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"></highlight></codeline>
<codeline lineno="5672" refid="group__transform_1gaf5ff7cda593cb1c4f299cd4af3048f6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1gaf5ff7cda593cb1c4f299cd4af3048f6e" kindref="member">hpm_dsp_dct4_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dct4_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"></highlight></codeline>
<codeline lineno="5685" refid="group__transform_1ga730dbfa7e1d4dbefa7ecb6b2754f6bba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga730dbfa7e1d4dbefa7ecb6b2754f6bba" kindref="member">hpm_dsp_idct4_f32</ref>(float32_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_idct4_f32(src,<sp/>m);</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"></highlight></codeline>
<codeline lineno="5704" refid="group__transform_1gac26604dc96991b421e2b222781d758bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1gac26604dc96991b421e2b222781d758bf" kindref="member">hpm_dsp_dct4_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dct4_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"></highlight></codeline>
<codeline lineno="5723" refid="group__transform_1gabeb2e269c1c024e993bcba4fd40f79c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1gabeb2e269c1c024e993bcba4fd40f79c5" kindref="member">hpm_dsp_idct4_q15</ref>(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_idct4_q15(src,<sp/>m);</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"></highlight></codeline>
<codeline lineno="5742" refid="group__transform_1ga1239d88d30b23ea5f088ac2999f45b9c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga1239d88d30b23ea5f088ac2999f45b9c" kindref="member">hpm_dsp_dct4_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dct4_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"></highlight></codeline>
<codeline lineno="5761" refid="group__transform_1ga28ba4965c2ec93d686de73a09e17f332" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1ga28ba4965c2ec93d686de73a09e17f332" kindref="member">hpm_dsp_idct4_q31</ref>(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_idct4_q31(src,<sp/>m);</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"></highlight></codeline>
<codeline lineno="5779" refid="group__transform_1gad95aa86da64b9d2875dd28fff34e051f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__transform_1gad95aa86da64b9d2875dd28fff34e051f" kindref="member">hpm_software_cfft_float</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/>uint32_t<sp/>m);</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"></highlight></codeline>
<codeline lineno="5781"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5782"><highlight class="normal"></highlight></codeline>
<codeline lineno="5783"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPMSOC_HAS_HPMSDK_FFA)<sp/>&amp;&amp;<sp/>defined(HPM_EN_MATH_DSP_LIB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal"></highlight></codeline>
<codeline lineno="5785"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__ffa__drv_8h" kindref="compound">hpm_ffa_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5786"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5799"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hpm_ffa_cfft_q15(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfft__xfer__t" kindref="compound">fft_xfer_t</ref><sp/>xfer<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aabc5e2b787b94a3afae6d3921b813b84" kindref="member">num_points</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>m;</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aa4b974dce33b66abaaef4be51271faaf" kindref="member">src</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a2075c0e96c978e459154b954e8f55677" kindref="member">dst</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1adac9cc3117e3f47d5284e6b315acfe1b" kindref="member">is_ifft</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a9b19379228151d11b0e8ebed2b5b8efc" kindref="member">src_data_type</ref><sp/>=<sp/><ref refid="group__ffa__interface_1ga96970b166721a9bc66dceb65e9466a34" kindref="member">FFA_DATA_TYPE_COMPLEX_Q15</ref>;</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a528a4a741cc494d5e1c41a2c4a7e7373" kindref="member">dst_data_type</ref><sp/>=<sp/><ref refid="group__ffa__interface_1ga96970b166721a9bc66dceb65e9466a34" kindref="member">FFA_DATA_TYPE_COMPLEX_Q15</ref>;</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ffa__interface_1ga77d761e7ed7aeabd0c567debde5e78b2" kindref="member">ffa_calculate_fft_blocking</ref>(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>&amp;xfer);</highlight></codeline>
<codeline lineno="5809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hpm_ffa_cfft_q31(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfft__xfer__t" kindref="compound">fft_xfer_t</ref><sp/>xfer<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aabc5e2b787b94a3afae6d3921b813b84" kindref="member">num_points</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>m;</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aa4b974dce33b66abaaef4be51271faaf" kindref="member">src</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a2075c0e96c978e459154b954e8f55677" kindref="member">dst</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1adac9cc3117e3f47d5284e6b315acfe1b" kindref="member">is_ifft</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a9b19379228151d11b0e8ebed2b5b8efc" kindref="member">src_data_type</ref><sp/>=<sp/><ref refid="group__ffa__interface_1ga606c07bcff8d952376e87009f7f27f4d" kindref="member">FFA_DATA_TYPE_COMPLEX_Q31</ref>;</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a528a4a741cc494d5e1c41a2c4a7e7373" kindref="member">dst_data_type</ref><sp/>=<sp/><ref refid="group__ffa__interface_1ga606c07bcff8d952376e87009f7f27f4d" kindref="member">FFA_DATA_TYPE_COMPLEX_Q31</ref>;</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ffa__interface_1ga77d761e7ed7aeabd0c567debde5e78b2" kindref="member">ffa_calculate_fft_blocking</ref>(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>&amp;xfer);</highlight></codeline>
<codeline lineno="5828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"></highlight></codeline>
<codeline lineno="5830"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_FFA_FP32)<sp/>&amp;&amp;<sp/>HPM_IP_FEATURE_FFA_FP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5831"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hpm_ffa_cfft_f32(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfft__xfer__t" kindref="compound">fft_xfer_t</ref><sp/>xfer<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aabc5e2b787b94a3afae6d3921b813b84" kindref="member">num_points</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>m;</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aa4b974dce33b66abaaef4be51271faaf" kindref="member">src</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a2075c0e96c978e459154b954e8f55677" kindref="member">dst</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1adac9cc3117e3f47d5284e6b315acfe1b" kindref="member">is_ifft</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a9b19379228151d11b0e8ebed2b5b8efc" kindref="member">src_data_type</ref><sp/>=<sp/>FFA_DATA_TYPE_COMPLEX_FP32;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a528a4a741cc494d5e1c41a2c4a7e7373" kindref="member">dst_data_type</ref><sp/>=<sp/>FFA_DATA_TYPE_COMPLEX_FP32;</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/><sp/>ffa_enable_fp_bias(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>);</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/><sp/>ffa_set_coef_max_index(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/>ffa_set_output_max_index(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>20);</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/>ffa_set_input_max_index(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>20<sp/>-<sp/><sp/>m);</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ffa__interface_1ga77d761e7ed7aeabd0c567debde5e78b2" kindref="member">ffa_calculate_fft_blocking</ref>(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>&amp;xfer);</highlight></codeline>
<codeline lineno="5845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5855"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hpm_ffa_cifft_q15(q15_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfft__xfer__t" kindref="compound">fft_xfer_t</ref><sp/>xfer<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aabc5e2b787b94a3afae6d3921b813b84" kindref="member">num_points</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>m;</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aa4b974dce33b66abaaef4be51271faaf" kindref="member">src</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a2075c0e96c978e459154b954e8f55677" kindref="member">dst</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1adac9cc3117e3f47d5284e6b315acfe1b" kindref="member">is_ifft</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a9b19379228151d11b0e8ebed2b5b8efc" kindref="member">src_data_type</ref><sp/>=<sp/><ref refid="group__ffa__interface_1ga96970b166721a9bc66dceb65e9466a34" kindref="member">FFA_DATA_TYPE_COMPLEX_Q15</ref>;</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a528a4a741cc494d5e1c41a2c4a7e7373" kindref="member">dst_data_type</ref><sp/>=<sp/><ref refid="group__ffa__interface_1ga96970b166721a9bc66dceb65e9466a34" kindref="member">FFA_DATA_TYPE_COMPLEX_Q15</ref>;</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ffa__interface_1ga77d761e7ed7aeabd0c567debde5e78b2" kindref="member">ffa_calculate_fft_blocking</ref>(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>&amp;xfer);</highlight></codeline>
<codeline lineno="5865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"></highlight></codeline>
<codeline lineno="5875"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hpm_ffa_cifft_q31(q31_t<sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfft__xfer__t" kindref="compound">fft_xfer_t</ref><sp/>xfer<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aabc5e2b787b94a3afae6d3921b813b84" kindref="member">num_points</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>m;</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aa4b974dce33b66abaaef4be51271faaf" kindref="member">src</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a2075c0e96c978e459154b954e8f55677" kindref="member">dst</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1adac9cc3117e3f47d5284e6b315acfe1b" kindref="member">is_ifft</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a9b19379228151d11b0e8ebed2b5b8efc" kindref="member">src_data_type</ref><sp/>=<sp/><ref refid="group__ffa__interface_1ga606c07bcff8d952376e87009f7f27f4d" kindref="member">FFA_DATA_TYPE_COMPLEX_Q31</ref>;</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a528a4a741cc494d5e1c41a2c4a7e7373" kindref="member">dst_data_type</ref><sp/>=<sp/><ref refid="group__ffa__interface_1ga606c07bcff8d952376e87009f7f27f4d" kindref="member">FFA_DATA_TYPE_COMPLEX_Q31</ref>;</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ffa__interface_1ga77d761e7ed7aeabd0c567debde5e78b2" kindref="member">ffa_calculate_fft_blocking</ref>(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>&amp;xfer);</highlight></codeline>
<codeline lineno="5885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"></highlight></codeline>
<codeline lineno="5887"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_FFA_FP32)<sp/>&amp;&amp;<sp/>HPM_IP_FEATURE_FFA_FP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hpm_ffa_cifft_f32(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/>uint32_t<sp/>m)</highlight></codeline>
<codeline lineno="5889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfft__xfer__t" kindref="compound">fft_xfer_t</ref><sp/>xfer<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aabc5e2b787b94a3afae6d3921b813b84" kindref="member">num_points</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>m;</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1aa4b974dce33b66abaaef4be51271faaf" kindref="member">src</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a2075c0e96c978e459154b954e8f55677" kindref="member">dst</ref><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1adac9cc3117e3f47d5284e6b315acfe1b" kindref="member">is_ifft</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a9b19379228151d11b0e8ebed2b5b8efc" kindref="member">src_data_type</ref><sp/>=<sp/>FFA_DATA_TYPE_COMPLEX_FP32;</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/><sp/>xfer.<ref refid="structfft__xfer__t_1a528a4a741cc494d5e1c41a2c4a7e7373" kindref="member">dst_data_type</ref><sp/>=<sp/>FFA_DATA_TYPE_COMPLEX_FP32;</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/>ffa_enable_fp_bias(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>);</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/>ffa_set_coef_max_index(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>0x0);</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/>ffa_set_output_max_index(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/>ffa_set_input_max_index(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>20);</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ffa__interface_1ga77d761e7ed7aeabd0c567debde5e78b2" kindref="member">ffa_calculate_fft_blocking</ref>(<ref refid="HPM6300_2HPM6330_2hpm__soc_8h_1a4fbfe78649ae9a59cfa40e2ee4283083" kindref="member">HPM_FFA</ref>,<sp/>&amp;xfer);</highlight></codeline>
<codeline lineno="5902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5904"><highlight class="normal"></highlight></codeline>
<codeline lineno="5905"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5906"><highlight class="normal"></highlight></codeline>
<codeline lineno="5907"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5908"><highlight class="normal"></highlight></codeline>
<codeline lineno="5914"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_UTILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5915"><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5925"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5926"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tpt_math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5927"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5928"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_utils_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cosine<sp/>and<sp/>Sine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5930" refid="group__utils_1ga7e4bbcbd760fc14de077c38234ac538f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1ga7e4bbcbd760fc14de077c38234ac538f" kindref="member">hpm_dsp_cos_f32</ref>(float32_t<sp/>src)</highlight></codeline>
<codeline lineno="5931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cos_f32(src);</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5936" refid="group__utils_1ga468215784f4d4400defaa6acef8a0401" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__utils_1ga468215784f4d4400defaa6acef8a0401" kindref="member">hpm_dsp_cos_q31</ref>(q31_t<sp/>src)</highlight></codeline>
<codeline lineno="5937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cos_q31(src);</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5942" refid="group__utils_1ga773f3965784f075a04bf66bef78c9e78" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__utils_1ga773f3965784f075a04bf66bef78c9e78" kindref="member">hpm_dsp_cos_q15</ref>(q15_t<sp/>src)</highlight></codeline>
<codeline lineno="5943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_cos_q15(src);</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"></highlight></codeline>
<codeline lineno="5949" refid="group__utils_1ga175ff455536e5b77ae1308600c848ae3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1ga175ff455536e5b77ae1308600c848ae3" kindref="member">hpm_dsp_sin_f32</ref>(float32_t<sp/>src)</highlight></codeline>
<codeline lineno="5950"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sin_f32(src);</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"></highlight></codeline>
<codeline lineno="5956"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__riscv_zfh)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5961"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float16_t<sp/>hpm_dsp_sin_f16(float16_t<sp/>src)</highlight></codeline>
<codeline lineno="5962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sin_f16(src);</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5968"><highlight class="normal"></highlight></codeline>
<codeline lineno="5969" refid="group__utils_1ga3d112d6fd3a522e74f1e3548feab0566" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__utils_1ga3d112d6fd3a522e74f1e3548feab0566" kindref="member">hpm_dsp_sin_q31</ref>(q31_t<sp/>src)</highlight></codeline>
<codeline lineno="5970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sin_q31(src);</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5975" refid="group__utils_1ga69d4a783fcc2abb2015cc390beb031f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__utils_1ga69d4a783fcc2abb2015cc390beb031f1" kindref="member">hpm_dsp_sin_q15</ref>(q15_t<sp/>src)</highlight></codeline>
<codeline lineno="5976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5977"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sin_q15(src);</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"></highlight></codeline>
<codeline lineno="5982"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arc<sp/>tangent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5983" refid="group__utils_1gafe5ada05928262a89504aaee8ba417da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1gafe5ada05928262a89504aaee8ba417da" kindref="member">hpm_dsp_atan_f32</ref>(float32_t<sp/>src)</highlight></codeline>
<codeline lineno="5984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_atan_f32(src);</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5989" refid="group__utils_1gac23fd38f9e6a406dbb8ac3fc479e3245" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__utils_1gac23fd38f9e6a406dbb8ac3fc479e3245" kindref="member">hpm_dsp_atan_q31</ref>(q31_t<sp/>src)</highlight></codeline>
<codeline lineno="5990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_atan_q31(src);</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5995" refid="group__utils_1ga393a80de559a7d1ee610ce5e04eb24af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__utils_1ga393a80de559a7d1ee610ce5e04eb24af" kindref="member">hpm_dsp_atan_q15</ref>(q15_t<sp/>src)</highlight></codeline>
<codeline lineno="5996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_atan_q15(src);</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6001" refid="group__utils_1ga04dc117b2de11d75a69902a54e7fded3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1ga04dc117b2de11d75a69902a54e7fded3" kindref="member">hpm_dsp_atan2_f32</ref>(float32_t<sp/>srcy,<sp/>float32_t<sp/>src2)</highlight></codeline>
<codeline lineno="6002"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_atan2_f32(srcy,<sp/>src2);</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6007" refid="group__utils_1ga908c1dc32ff4e098feb32fb3408d14b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__utils_1ga908c1dc32ff4e098feb32fb3408d14b8" kindref="member">hpm_dsp_atan2_q15</ref>(q15_t<sp/>srcy,<sp/>q15_t<sp/>src2)</highlight></codeline>
<codeline lineno="6008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_atan2_q15(srcy,<sp/>src2);</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6013" refid="group__utils_1ga51b478a0a928d8f7afd96f26e88e9479" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__utils_1ga51b478a0a928d8f7afd96f26e88e9479" kindref="member">hpm_dsp_atan2_q31</ref>(q31_t<sp/>srcy,<sp/>q31_t<sp/>src2)</highlight></codeline>
<codeline lineno="6014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_atan2_q31(srcy,<sp/>src2);</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"></highlight></codeline>
<codeline lineno="6020"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Square<sp/>Root</highlight></codeline>
<codeline lineno="6026" refid="group__utils_1gaf14c35d88ea97bd853ec49823f30f1da" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1gaf14c35d88ea97bd853ec49823f30f1da" kindref="member">hpm_dsp_sqrt_f32</ref>(float32_t<sp/>src)</highlight></codeline>
<codeline lineno="6027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sqrt_f32(src);</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"></highlight></codeline>
<codeline lineno="6038" refid="group__utils_1gae743c9c18307a7aecfa85b394635fbe5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q31_t<sp/><ref refid="group__utils_1gae743c9c18307a7aecfa85b394635fbe5" kindref="member">hpm_dsp_sqrt_q31</ref>(q31_t<sp/>src)</highlight></codeline>
<codeline lineno="6039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sqrt_q31(src);</highlight></codeline>
<codeline lineno="6042"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"></highlight></codeline>
<codeline lineno="6050" refid="group__utils_1gaf7cdd087a8aed0fcf491accd9c2d8f30" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>q15_t<sp/><ref refid="group__utils_1gaf7cdd087a8aed0fcf491accd9c2d8f30" kindref="member">hpm_dsp_sqrt_q15</ref>(q15_t<sp/>src)</highlight></codeline>
<codeline lineno="6051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sqrt_q15(src);</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"></highlight></codeline>
<codeline lineno="6057"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>function</highlight></codeline>
<codeline lineno="6064" refid="group__utils_1gaaa78e6411115c7842b2df043321e424a" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gaaa78e6411115c7842b2df043321e424a" kindref="member">hpm_dsp_convert_f32_q15</ref>(float32_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_f32_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"></highlight></codeline>
<codeline lineno="6077" refid="group__utils_1ga4387b63088cf9467c4e0c91896cafb27" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga4387b63088cf9467c4e0c91896cafb27" kindref="member">hpm_dsp_convert_f32_q31</ref>(float32_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6080"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_f32_to_q31(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_f32_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6085"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"></highlight></codeline>
<codeline lineno="6094" refid="group__utils_1gadc52cf24308d6a988d3b250f4118fc40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gadc52cf24308d6a988d3b250f4118fc40" kindref="member">hpm_dsp_convert_f32_q7</ref>(float32_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_f32_q7(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"></highlight></codeline>
<codeline lineno="6107" refid="group__utils_1gad35ebf4471d2f19b92c396fe1f69d395" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gad35ebf4471d2f19b92c396fe1f69d395" kindref="member">hpm_dsp_convert_q15_f32</ref>(q15_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q15_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"></highlight></codeline>
<codeline lineno="6120" refid="group__utils_1ga74a78cb4250a1315245ef9a368c013e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga74a78cb4250a1315245ef9a368c013e5" kindref="member">hpm_dsp_convert_q15_q31</ref>(q15_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q15_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"></highlight></codeline>
<codeline lineno="6133" refid="group__utils_1ga6098e340f118a4696d20f69355813dfd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga6098e340f118a4696d20f69355813dfd" kindref="member">hpm_dsp_convert_q15_q7</ref>(q15_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q15_q7(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"></highlight></codeline>
<codeline lineno="6146" refid="group__utils_1ga349c51d4a58ab780a0f6f5a678e9c4a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga349c51d4a58ab780a0f6f5a678e9c4a5" kindref="member">hpm_dsp_convert_q31_f32</ref>(q31_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_q31_to_f32(dst,<sp/>src,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q31_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"></highlight></codeline>
<codeline lineno="6163" refid="group__utils_1ga08053411718969882cc6188cab69fb8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga08053411718969882cc6188cab69fb8c" kindref="member">hpm_dsp_convert_q31_q15</ref>(q31_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q31_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"></highlight></codeline>
<codeline lineno="6176" refid="group__utils_1ga970243b781a73347cf0ae83dd1c136f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga970243b781a73347cf0ae83dd1c136f3" kindref="member">hpm_dsp_convert_q31_q7</ref>(q31_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q31_q7(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"></highlight></codeline>
<codeline lineno="6189" refid="group__utils_1gacae3332ad6528f43e3d2f0ce0048bf05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gacae3332ad6528f43e3d2f0ce0048bf05" kindref="member">hpm_dsp_convert_q7_f32</ref>(q7_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q7_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"></highlight></codeline>
<codeline lineno="6202" refid="group__utils_1ga927e0599008aaf6f24445ddd6d5e6336" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga927e0599008aaf6f24445ddd6d5e6336" kindref="member">hpm_dsp_convert_q7_q15</ref>(q7_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q7_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"></highlight></codeline>
<codeline lineno="6215" refid="group__utils_1gac3264c4acd4ba63309f31e72e9d9c052" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gac3264c4acd4ba63309f31e72e9d9c052" kindref="member">hpm_dsp_convert_q7_q31</ref>(q7_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_convert_q7_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"></highlight></codeline>
<codeline lineno="6222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Duplicate<sp/>function</highlight></codeline>
<codeline lineno="6229" refid="group__utils_1ga00cdf474183312115ef1e7f44246ebcf" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga00cdf474183312115ef1e7f44246ebcf" kindref="member">hpm_dsp_dup_f32</ref>(float32_t<sp/>*src,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dup_f32(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"></highlight></codeline>
<codeline lineno="6242" refid="group__utils_1ga6a412067cd4782b28c899146e9e64861" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga6a412067cd4782b28c899146e9e64861" kindref="member">hpm_dsp_dup_q15</ref>(q15_t<sp/>*src,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dup_q15(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"></highlight></codeline>
<codeline lineno="6255" refid="group__utils_1ga5553c018cd0f0db9ee6794ddb200f235" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga5553c018cd0f0db9ee6794ddb200f235" kindref="member">hpm_dsp_dup_q31</ref>(q31_t<sp/>*src,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dup_q31(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"></highlight></codeline>
<codeline lineno="6268" refid="group__utils_1gaf33ce8d451a7ba6b2ceb3fc38eea943e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gaf33ce8d451a7ba6b2ceb3fc38eea943e" kindref="member">hpm_dsp_dup_q7</ref>(q7_t<sp/>*src,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_dup_q7(src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"></highlight></codeline>
<codeline lineno="6275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>function</highlight></codeline>
<codeline lineno="6282" refid="group__utils_1ga03172fd7f53ce18f8e5953d8ebf84d2b" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga03172fd7f53ce18f8e5953d8ebf84d2b" kindref="member">hpm_dsp_set_f32</ref>(float32_t<sp/>val,<sp/>float32_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_set_f32(val,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"></highlight></codeline>
<codeline lineno="6295" refid="group__utils_1ga10c74d0d6d3e46004c03388e5a267c15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga10c74d0d6d3e46004c03388e5a267c15" kindref="member">hpm_dsp_set_q15</ref>(q15_t<sp/>val,<sp/>q15_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_set_q15(val,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"></highlight></codeline>
<codeline lineno="6308" refid="group__utils_1ga6520fc013982084f5f721dd8071ab37a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga6520fc013982084f5f721dd8071ab37a" kindref="member">hpm_dsp_set_q31</ref>(q31_t<sp/>val,<sp/>q31_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_set_q31(val,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"></highlight></codeline>
<codeline lineno="6321" refid="group__utils_1gabed5d5c4392107745b6617f93c6a5216" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gabed5d5c4392107745b6617f93c6a5216" kindref="member">hpm_dsp_set_q7</ref>(q7_t<sp/>val,<sp/>q7_t<sp/>*dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_set_q7(val,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"></highlight></codeline>
<codeline lineno="6336" refid="group__utils_1gadaeb1d0e7fd56b71aad305e5d9d45fbe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1gadaeb1d0e7fd56b71aad305e5d9d45fbe" kindref="member">hpm_dsp_weighted_sum_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*weight,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_weighted_sum_f32(src,<sp/>weight,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"></highlight></codeline>
<codeline lineno="6352" refid="group__utils_1ga8830ad04914db72dc489c1b8cf9428cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__utils_1ga8830ad04914db72dc489c1b8cf9428cf" kindref="member">hpm_dsp_barycenter_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*weights,<sp/>float32_t<sp/>*out,<sp/>uint32_t<sp/>numofvec,<sp/>uint32_t<sp/>dimofvec)</highlight></codeline>
<codeline lineno="6353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_barycenter_f32(src,<sp/>weights,<sp/>out,<sp/>numofvec,<sp/>dimofvec);</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"></highlight></codeline>
<codeline lineno="6364" refid="group__utils_1ga11f689a21e3d687fbd563dc7668479ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1ga11f689a21e3d687fbd563dc7668479ad" kindref="member">hpm_dsp_exp_f32</ref>(float32_t<sp/>src)</highlight></codeline>
<codeline lineno="6365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6366"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_exp_f32(src);</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__riscv_zfh)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6377"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float16_t<sp/>hpm_dsp_exp_f16(float16_t<sp/>src)</highlight></codeline>
<codeline lineno="6378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_exp_f16(src);</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6384"><highlight class="normal"></highlight></codeline>
<codeline lineno="6390" refid="group__utils_1ga1db99f790f92ddd01f677abb9e14e788" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1ga1db99f790f92ddd01f677abb9e14e788" kindref="member">hpm_dsp_sigmoid_f32</ref>(float32_t<sp/>src)</highlight></codeline>
<codeline lineno="6391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sigmoid_f32(src);</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6396"><highlight class="normal"></highlight></codeline>
<codeline lineno="6397"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__riscv_zfh)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float16_t<sp/>hpm_dsp_sigmoid_f16(float16_t<sp/>src)</highlight></codeline>
<codeline lineno="6404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_sigmoid_f16(src);</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6410"><highlight class="normal"></highlight></codeline>
<codeline lineno="6416" refid="group__utils_1gaccf222717774a2e7f2fc3f8944a41653" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float32_t<sp/><ref refid="group__utils_1gaccf222717774a2e7f2fc3f8944a41653" kindref="member">hpm_dsp_log_f32</ref>(float32_t<sp/>src)</highlight></codeline>
<codeline lineno="6417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_log_f32(src);</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"></highlight></codeline>
<codeline lineno="6423"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__riscv_zfh)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6429"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>float16_t<sp/>hpm_dsp_log_f16(float16_t<sp/>src)</highlight></codeline>
<codeline lineno="6430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_dsp_log_f16(src);</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6436"><highlight class="normal"></highlight></codeline>
<codeline lineno="6443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6445"><highlight class="normal"></highlight></codeline>
<codeline lineno="6446"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_DSP_SORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6447"><highlight class="normal"></highlight></codeline>
<codeline lineno="6458"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6459"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_dsp_sort_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6482" refid="group__sort_1gabf8425ef3f2fd273785642b7e7b1aa8b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sort_1gabf8425ef3f2fd273785642b7e7b1aa8b" kindref="member">hpm_dsp_sort_init_f32</ref>(riscv_dsp_sort_f32_t<sp/>*<sp/>instance,<sp/>riscv_dsp_sort_alg<sp/>alg,<sp/>riscv_dsp_sort_order<sp/>order)</highlight></codeline>
<codeline lineno="6483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sort_init_f32(instance,<sp/>alg,<sp/>order);</highlight></codeline>
<codeline lineno="6486"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6488"><highlight class="normal"></highlight></codeline>
<codeline lineno="6529" refid="group__sort_1ga1d9fc7c29e5a7d2033fd25894047682e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sort_1ga1d9fc7c29e5a7d2033fd25894047682e" kindref="member">hpm_dsp_sort_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_sort_f32_t<sp/>*<sp/>instance,float32_t<sp/>*<sp/>src,<sp/>float32_t<sp/>*<sp/>dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sort_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"></highlight></codeline>
<codeline lineno="6551" refid="group__sort_1ga0b681489294a482ee601d49a1fee29d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sort_1ga0b681489294a482ee601d49a1fee29d8" kindref="member">hpm_dsp_sort_merge_init_f32</ref>(riscv_dsp_sort_merge_f32_t<sp/>*<sp/>instance,<sp/>riscv_dsp_sort_order<sp/>order,<sp/>float32_t<sp/>*<sp/>buf)</highlight></codeline>
<codeline lineno="6552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6553"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sort_merge_init_f32(instance,<sp/>order,<sp/>buf);</highlight></codeline>
<codeline lineno="6555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6557"><highlight class="normal"></highlight></codeline>
<codeline lineno="6591" refid="group__sort_1ga6251837945f09f43d0a67afa1d02e96a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sort_1ga6251837945f09f43d0a67afa1d02e96a" kindref="member">hpm_dsp_sort_merge_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>riscv_dsp_sort_merge_f32_t<sp/>*<sp/>instance,<sp/>float32_t<sp/>*<sp/>src,<sp/>float32_t<sp/>*<sp/>dst,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HPM_DSP_CORE<sp/>==<sp/>HPM_DSP_HW_NDS32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_dsp_sort_merge_f32(instance,<sp/>src,<sp/>dst,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6597"><highlight class="normal"></highlight></codeline>
<codeline lineno="6598"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6600"><highlight class="normal"></highlight></codeline>
<codeline lineno="6601"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_TINYENGINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6602"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_DSP_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6603"><highlight class="normal"></highlight></codeline>
<codeline lineno="6604"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_math_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6605"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6606"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_simd_convert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6607"><highlight class="normal"></highlight></codeline>
<codeline lineno="6608" refid="group__sort_1ga2953f124ae444ebdd2b2a0873ac36b7e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEFT_SHIFT(_shift)<sp/><sp/>(_shift<sp/>&gt;<sp/>0<sp/>?<sp/>_shift<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6609" refid="group__sort_1ga26af54489c1401b91595bf0c92ef87c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RIGHT_SHIFT(_shift)<sp/>(_shift<sp/>&gt;<sp/>0<sp/>?<sp/>0<sp/>:<sp/>-_shift)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6610"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__zcc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6611" refid="group__sort_1ga468734b237f1c95a31715aa2b60a576e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Q31_MAX<sp/><sp/><sp/>((q31_t)(0x7FFFFFFFL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6612" refid="group__sort_1ga1eb725c94dbb052aa24b62321be0445b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Q31_MIN<sp/><sp/><sp/>((q31_t)(0x80000000L))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6614"><highlight class="normal"></highlight></codeline>
<codeline lineno="6615" refid="group__sort_1gab973a2a30b2016648bea995f4a737553" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sort_1gab973a2a30b2016648bea995f4a737553" kindref="member">write_q15x2_ia</ref>(</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><sp/><sp/><sp/><sp/>q15_t<sp/>**pQ15,</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><sp/><sp/>value)</highlight></codeline>
<codeline lineno="6618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>val<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/>(*pQ15)[0]<sp/>=<sp/>(val<sp/>&amp;<sp/>0x0FFFF);</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/><sp/><sp/>(*pQ15)[1]<sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0FFFF;</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/><sp/>*pQ15<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="6623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"></highlight></codeline>
<codeline lineno="6631" refid="group__sort_1gacd7f0bd117301b1be9027be69dee5ca8" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/>q31_t<sp/><ref refid="group__sort_1gacd7f0bd117301b1be9027be69dee5ca8" kindref="member">hpm_nn_read_q15x2_ia</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>**in_q15)</highlight></codeline>
<codeline lineno="6632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>val;</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"></highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>*(q31_t<sp/>*)(*in_q15);</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/><sp/><sp/>*in_q15<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"></highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="6639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"></highlight></codeline>
<codeline lineno="6649" refid="group__sort_1gac2a74c274ace586d087007e626b31232" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/>q31_t<sp/><ref refid="group__sort_1gac2a74c274ace586d087007e626b31232" kindref="member">hpm_nn_sat_doubling_high_mult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>m2)</highlight></codeline>
<codeline lineno="6650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/><sp/><sp/>q63_t<sp/>mult<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>30;</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"></highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m1<sp/>&lt;<sp/>0)<sp/>^<sp/>(m2<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mult<sp/>=<sp/>1<sp/>-<sp/>mult;</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6657"><highlight class="normal"><sp/><sp/><sp/><sp/>mult<sp/>=<sp/>mult<sp/>+<sp/>(q63_t)m1<sp/>*<sp/>m2;</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>mult<sp/>/<sp/>(1UL<sp/>&lt;&lt;<sp/>31);</highlight></codeline>
<codeline lineno="6659"><highlight class="normal"></highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m1<sp/>==<sp/>m2)<sp/>&amp;&amp;<sp/>(m1<sp/>==<sp/>(int32_t)<ref refid="group__sort_1ga1eb725c94dbb052aa24b62321be0445b" kindref="member">Q31_MIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="group__sort_1ga468734b237f1c95a31715aa2b60a576e" kindref="member">Q31_MAX</ref>;</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6665"><highlight class="normal"></highlight></codeline>
<codeline lineno="6674" refid="group__sort_1ga436801bba206264415e0dd7053fd6c3e" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/>q31_t<sp/><ref refid="group__sort_1ga436801bba206264415e0dd7053fd6c3e" kindref="member">hpm_nn_divide_by_power_of_two</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>dividend,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>exponent)</highlight></codeline>
<codeline lineno="6675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"></highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>remainder_mask<sp/>=<sp/>(1l<sp/>&lt;&lt;<sp/>exponent)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>remainder<sp/>=<sp/>remainder_mask<sp/>&amp;<sp/>dividend;</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"></highlight></codeline>
<codeline lineno="6681"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>dividend<sp/>&gt;&gt;<sp/>exponent;</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>threshold<sp/>=<sp/>remainder_mask<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold++;</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remainder<sp/>&gt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result++;</highlight></codeline>
<codeline lineno="6688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6689"><highlight class="normal"></highlight></codeline>
<codeline lineno="6690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"></highlight></codeline>
<codeline lineno="6693" refid="group__sort_1ga32e31fcb5f8c099f4d2ef3179c24d875" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/>q31_t<sp/><ref refid="group__sort_1ga32e31fcb5f8c099f4d2ef3179c24d875" kindref="member">hpm_nn_requantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>multiplier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>shift)</highlight></codeline>
<codeline lineno="6694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__sort_1ga436801bba206264415e0dd7053fd6c3e" kindref="member">hpm_nn_divide_by_power_of_two</ref>(<ref refid="group__sort_1gac2a74c274ace586d087007e626b31232" kindref="member">hpm_nn_sat_doubling_high_mult</ref>(val<sp/>*<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="group__sort_1ga2953f124ae444ebdd2b2a0873ac36b7e" kindref="member">LEFT_SHIFT</ref>(shift)),<sp/>multiplier),</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sort_1ga26af54489c1401b91595bf0c92ef87c4" kindref="member">RIGHT_SHIFT</ref>(shift));</highlight></codeline>
<codeline lineno="6697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"></highlight></codeline>
<codeline lineno="6704" refid="group__sort_1gab003dc83165a70a246a3f1aac74eb664" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/>q31_t<sp/><ref refid="group__sort_1gab003dc83165a70a246a3f1aac74eb664" kindref="member">hpm_nn_read_q7x4_ia</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>**in_q7)</highlight></codeline>
<codeline lineno="6705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/>val;</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"></highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>*(q31_t<sp/>*)(*in_q7);</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/><sp/><sp/>*in_q7<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"></highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="6712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6713"><highlight class="normal"></highlight></codeline>
<codeline lineno="6718" refid="group__sort_1ga9d1f0db58852a4dc34933e1210bc8aad" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__sort_1ga9d1f0db58852a4dc34933e1210bc8aad" kindref="member">read_and_pad_reordered</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*source,<sp/>q31_t<sp/>*out1,<sp/>q31_t<sp/>*out2)</highlight></codeline>
<codeline lineno="6719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><sp/><sp/><sp/><sp/>inA<sp/>=<sp/><ref refid="group__sort_1gab003dc83165a70a246a3f1aac74eb664" kindref="member">hpm_nn_read_q7x4_ia</ref>(&amp;source);</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"></highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/>*out2<sp/>=<sp/>__SXTB16_ROR(inA,<sp/>8);</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/><sp/><sp/>*out1<sp/>=<sp/>__SXTB16(inA);</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"></highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>source;</highlight></codeline>
<codeline lineno="6726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"></highlight></codeline>
<codeline lineno="6732" refid="group__sort_1ga6a2c6bcfe2b10ede675aa740c24ea59d" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__sort_1ga6a2c6bcfe2b10ede675aa740c24ea59d" kindref="member">read_and_pad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*source,<sp/>q31_t<sp/>*out1,<sp/>q31_t<sp/>*out2)</highlight></codeline>
<codeline lineno="6733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><sp/><sp/><sp/><sp/>inA<sp/>=<sp/><ref refid="group__sort_1gab003dc83165a70a246a3f1aac74eb664" kindref="member">hpm_nn_read_q7x4_ia</ref>(&amp;source);</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><sp/><sp/><sp/><sp/>inAbuf1<sp/>=<sp/>__SXTB16_ROR(inA,<sp/>8);</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/><sp/>q31_t<sp/><sp/><sp/><sp/><sp/>inAbuf2<sp/>=<sp/>__SXTB16(inA);</highlight></codeline>
<codeline lineno="6737"><highlight class="normal"></highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/>*out2<sp/>=<sp/>__PKHTB(inAbuf1,<sp/>inAbuf2,<sp/>16);</highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/>*out1<sp/>=<sp/>__PKHBT(inAbuf2,<sp/>inAbuf1,<sp/>16);</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"></highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>source;</highlight></codeline>
<codeline lineno="6742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6743"><highlight class="normal"></highlight></codeline>
<codeline lineno="6749" refid="group__sort_1ga1ac7adf059e961b703a237ecc917570c" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/>int32_t<sp/><ref refid="group__sort_1ga1ac7adf059e961b703a237ecc917570c" kindref="member">hpm_nn_read_s8x4_ia</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>**in_s8)</highlight></codeline>
<codeline lineno="6750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>val;</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"></highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>*(int32_t<sp/>*)(*in_s8);</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/><sp/><sp/>*in_s8<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"></highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="6757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"></highlight></codeline>
<codeline lineno="6759" refid="group__sort_1ga2c643d3f7228d3c26dbe8db3289cd3d8" refkind="member"><highlight class="normal">__STATIC_FORCEINLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sort_1ga2c643d3f7228d3c26dbe8db3289cd3d8" kindref="member">hpm_nn_q7_to_q15_with_offset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*src,<sp/>int16_t<sp/>*dst,<sp/>int32_t<sp/>block_size,<sp/>int16_t<sp/>offset)</highlight></codeline>
<codeline lineno="6760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>block_cnt;</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"></highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Run<sp/>the<sp/>below<sp/>code<sp/>for<sp/>cores<sp/>that<sp/>support<sp/>SIMD<sp/>instructions<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>in_q7x4;</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>in_q15x2_1;</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>in_q15x2_2;</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>out_q15x2_1;</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>out_q15x2_2;</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"></highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*loop<sp/>unrolling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/><sp/><sp/>block_cnt<sp/>=<sp/>block_size<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"></highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>part<sp/>of<sp/>the<sp/>processing<sp/>with<sp/>loop<sp/>unrolling.<sp/><sp/>Compute<sp/>4<sp/>outputs<sp/>at<sp/>a<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>offset_q15x2<sp/>=<sp/>__PKHBT(offset,<sp/>offset,<sp/>16);</highlight></codeline>
<codeline lineno="6775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(block_cnt<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>from<sp/>s8<sp/>to<sp/>s16<sp/>and<sp/>then<sp/>store<sp/>the<sp/>results<sp/>in<sp/>the<sp/>destination<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_q7x4<sp/>=<sp/><ref refid="group__sort_1ga1ac7adf059e961b703a237ecc917570c" kindref="member">hpm_nn_read_s8x4_ia</ref>(&amp;src);</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"></highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extract<sp/>and<sp/>sign<sp/>extend<sp/>each<sp/>of<sp/>the<sp/>four<sp/>s8<sp/>values<sp/>to<sp/>s16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_q15x2_1<sp/>=<sp/>__SXTAB16(offset_q15x2,<sp/>__ROR(in_q7x4,<sp/>8));</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_q15x2_2<sp/>=<sp/>__SXTAB16(offset_q15x2,<sp/>in_q7x4);</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"></highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_q15x2_2<sp/>=<sp/>__PKHTB(in_q15x2_1,<sp/>in_q15x2_2,<sp/>16);</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_q15x2_1<sp/>=<sp/>__PKHBT(in_q15x2_2,<sp/>in_q15x2_1,<sp/>16);</highlight></codeline>
<codeline lineno="6785"><highlight class="normal"></highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sort_1gab973a2a30b2016648bea995f4a737553" kindref="member">write_q15x2_ia</ref>(&amp;dst,<sp/>out_q15x2_1);</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sort_1gab973a2a30b2016648bea995f4a737553" kindref="member">write_q15x2_ia</ref>(&amp;dst,<sp/>out_q15x2_2);</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"></highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_cnt--;</highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>left<sp/>over<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/>block_cnt<sp/>=<sp/>block_size<sp/>%<sp/>0x4;</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"></highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(block_cnt<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>(int16_t)*src++<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="6796"><highlight class="normal"></highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_cnt--;</highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"></highlight></codeline>
<codeline lineno="6802"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6804"><highlight class="normal"></highlight></codeline>
<codeline lineno="6805"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_ACTIVATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6806"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6807"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6808"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_activation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6809"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6810"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_activation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6811"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6843" refid="group__nnactivation_1gac909d6f396f354938fd91f745b41f4fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnactivation_1gac909d6f396f354938fd91f745b41f4fd" kindref="member">hpm_nn_activate_s8</ref>(q7_t<sp/>*in_out,</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>int_bits,</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riscv_nn_activation_fun<sp/>act_fun)</highlight></codeline>
<codeline lineno="6847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_activate_s8(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>int_bits,<sp/>act_fun);</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_activate_s8(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>int_bits,<sp/>act_fun);</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6854"><highlight class="normal"></highlight></codeline>
<codeline lineno="6870" refid="group__nnactivation_1ga11bb53fefef60cb8c979319e638fddec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnactivation_1ga11bb53fefef60cb8c979319e638fddec" kindref="member">hpm_nn_activate_s16</ref>(q15_t<sp/>*in_out,</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>int_bits,</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riscv_nn_activation_fun<sp/>act_fun)</highlight></codeline>
<codeline lineno="6874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_activate_s16(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>int_bits,<sp/>act_fun);</highlight></codeline>
<codeline lineno="6877"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_activate_s16(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>int_bits,<sp/>act_fun);</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6881"><highlight class="normal"></highlight></codeline>
<codeline lineno="6899" refid="group__nnactivation_1ga377120517dc98545840980dfe5c871ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnactivation_1ga377120517dc98545840980dfe5c871ab" kindref="member">hpm_nn_leaky_relu_s8</ref>(q7_t<sp/>*in_out,</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/><ref refid="group__nnactivation_1gae45c0213e0185b0a3bffc49ea24f5744" kindref="member">slope</ref>)</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_leaky_relu_s8(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnactivation_1gae45c0213e0185b0a3bffc49ea24f5744" kindref="member">slope</ref>);</highlight></codeline>
<codeline lineno="6904"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6905" refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_leaky_relu_s8(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnactivation_1gae45c0213e0185b0a3bffc49ea24f5744" kindref="member">slope</ref>);</highlight></codeline>
<codeline lineno="6906"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6908"><highlight class="normal"></highlight></codeline>
<codeline lineno="6916" refid="group__nnactivation_1gae7c27f21813b3ed5303c17cbf37da14e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnactivation_1gae7c27f21813b3ed5303c17cbf37da14e" kindref="member">hpm_nn_relu_any_s8</ref>(q7_t<sp/>*data,<sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>q7_t<sp/>max_val)</highlight></codeline>
<codeline lineno="6917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_relu_any_s8(data,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>max_val);</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6921"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_relu_any_s8(data,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>max_val);</highlight></codeline>
<codeline lineno="6922"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6924"><highlight class="normal"></highlight></codeline>
<codeline lineno="6941" refid="group__nnactivation_1gaf8ac0b3f5c47200437be14a9099b97e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnactivation_1gaf8ac0b3f5c47200437be14a9099b97e0" kindref="member">hpm_nn_relu_s8</ref>(q7_t<sp/>*in_out,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6943"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6944"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_relu_s8(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6945"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_relu_s8(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6947"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6949"><highlight class="normal"></highlight></codeline>
<codeline lineno="6956" refid="group__nnactivation_1ga3d562b326764a17af405c2d2ddb8cbb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnactivation_1ga3d562b326764a17af405c2d2ddb8cbb9" kindref="member">hpm_nn_relu_s16</ref>(q15_t<sp/>*in_out,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="6957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_relu_s16(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_relu_s16(in_out,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"></highlight></codeline>
<codeline lineno="6965"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__riscv_zfh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6975"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>hpm_nn_sigmoid_f16(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>)</highlight></codeline>
<codeline lineno="6978"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_sigmoid_f16(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_sigmoid_f16(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6985"><highlight class="normal"></highlight></codeline>
<codeline lineno="6994"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>hpm_nn_tanh_f16(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>)</highlight></codeline>
<codeline lineno="6997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_tanh_f16(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_tanh_f16(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7005"><highlight class="normal"></highlight></codeline>
<codeline lineno="7009"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7010"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7011"><highlight class="normal"></highlight></codeline>
<codeline lineno="7012"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_BASIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7013"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7014"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7015"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_basic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7016"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7017"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_basic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7018"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7064" refid="group__nnbasic_1ga6d7992c8de4387220a5be4106a61a690" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnbasic_1ga6d7992c8de4387220a5be4106a61a690" kindref="member">hpm_nn_add_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor1,</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor2,</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>*scale1,</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>*scale2,</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out)</highlight></codeline>
<codeline lineno="7073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_add_s8_sym(in_tensor1,<sp/>in_tensor2,<sp/>scale1,<sp/>scale2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/>out);</highlight></codeline>
<codeline lineno="7077"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_add_s8_sym(in_tensor1,<sp/>in_tensor2,<sp/>scale1,<sp/>scale2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="7079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/>out);</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"></highlight></codeline>
<codeline lineno="7102" refid="group__nnbasic_1gafe1a64a3acdd254eaf9fd192048433fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnbasic_1gafe1a64a3acdd254eaf9fd192048433fb" kindref="member">hpm_nn_add_s8_sym_round</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor1,</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor2,</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>scale1,</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>scale2,</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out)</highlight></codeline>
<codeline lineno="7111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_add_s8_sym_round(in_tensor1,<sp/>in_tensor2,<sp/>scale1,<sp/>scale2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out);</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_add_s8_sym_round(in_tensor1,<sp/>in_tensor2,<sp/>scale1,<sp/>scale2,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out);</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"></highlight></codeline>
<codeline lineno="7172" refid="group__nnbasic_1gac031be61d74c569dfa159b05cb236e64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nnbasic_1gac031be61d74c569dfa159b05cb236e64" kindref="member">hpm_nn_ew_add_s8_asym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor1,</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor2,</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset1,</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_scale1,</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_rshift1,</highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset2,</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_scale2,</highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_rshift2,</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>lshift,</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out,</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="7188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_ew_add_s8_asym(in_tensor1,<sp/>in_tensor2,<sp/>in_offset1,<sp/>in_scale1,</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_rshift1,<sp/>in_offset2,<sp/>in_scale2,<sp/>in_rshift2,</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lshift,<sp/>out,<sp/>out_offset,<sp/>out_scale,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act_min,<sp/>act_max,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="7194"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_ew_add_s8_asym(in_tensor1,<sp/>in_tensor2,<sp/>in_offset1,<sp/>in_scale1,</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_rshift1,<sp/>in_offset2,<sp/>in_scale2,<sp/>in_rshift2,</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lshift,<sp/>out,<sp/>out_offset,<sp/>out_scale,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act_min,<sp/>act_max,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="7199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7201"><highlight class="normal"></highlight></codeline>
<codeline lineno="7241" refid="group__nnbasic_1gad7837374c646ceb828a86e29261c777e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nnbasic_1gad7837374c646ceb828a86e29261c777e" kindref="member">hpm_nn_ew_mul_s8_asym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor1,</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor2,</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset1,</highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset2,</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out,</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_shift,</highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="7252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7253"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_ew_mul_s8_asym(in_tensor1,<sp/>in_tensor2,<sp/>in_offset1,<sp/>in_offset2,</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/>out_offset,<sp/>out_scale,<sp/>out_shift,<sp/>act_min,</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act_max,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_ew_mul_s8_asym(in_tensor1,<sp/>in_tensor2,<sp/>in_offset1,<sp/>in_offset2,</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/>out_offset,<sp/>out_scale,<sp/>out_shift,<sp/>act_min,</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act_max,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"></highlight></codeline>
<codeline lineno="7268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7269"><highlight class="normal"></highlight></codeline>
<codeline lineno="7270"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_RVP32_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7271"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7272"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_basic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7273"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7274"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_basic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7276"><highlight class="normal"></highlight></codeline>
<codeline lineno="7329"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nnbasic_1gac031be61d74c569dfa159b05cb236e64" kindref="member">hpm_nn_ew_add_s8_asym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor1,</highlight></codeline>
<codeline lineno="7330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor2,</highlight></codeline>
<codeline lineno="7331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset1,</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_scale1,</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_rshift1,</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset2,</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_scale2,</highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_rshift2,</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>lshift,</highlight></codeline>
<codeline lineno="7338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out,</highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="7345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_ew_add_s8_asym(in_tensor1,<sp/>in_tensor2,<sp/>in_offset1,<sp/>in_scale1,</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_rshift1,<sp/>in_offset2,<sp/>in_scale2,<sp/>in_rshift2,</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lshift,<sp/>out,<sp/>out_offset,<sp/>out_scale,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act_min,<sp/>act_max,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_ew_add_s8_asym(in_tensor1,<sp/>in_tensor2,<sp/>in_offset1,<sp/>in_scale1,</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_rshift1,<sp/>in_offset2,<sp/>in_scale2,<sp/>in_rshift2,</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lshift,<sp/>out,<sp/>out_offset,<sp/>out_scale,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act_min,<sp/>act_max,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"></highlight></codeline>
<codeline lineno="7359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7360"><highlight class="normal"></highlight></codeline>
<codeline lineno="7361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7362"><highlight class="normal"></highlight></codeline>
<codeline lineno="7363"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_CONCATENATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7365"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7366"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_concatenation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7367"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7368"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_concatenation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7370"><highlight class="normal"></highlight></codeline>
<codeline lineno="7396" refid="group__nnconcatenation_1gac482d9b3bd28f3f5f7f5a6be1d8367b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnconcatenation_1gac482d9b3bd28f3f5f7f5a6be1d8367b4" kindref="member">hpm_nn_concate_s8_w</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_x,</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_y,</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_w,</highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>out_offset_w)</highlight></codeline>
<codeline lineno="7403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_concate_s8_w(in_tensor,<sp/>in_tensor_x,<sp/>in_tensor_y,<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_w,<sp/>out_tensor,<sp/>out_offset_w);</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_concate_s8_w(in_tensor,<sp/>in_tensor_x,<sp/>in_tensor_y,<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_w,<sp/>out_tensor,<sp/>out_offset_w);</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7412"><highlight class="normal"></highlight></codeline>
<codeline lineno="7431" refid="group__nnconcatenation_1ga647b8909aef5526efef7c01d530094ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnconcatenation_1ga647b8909aef5526efef7c01d530094ac" kindref="member">hpm_nn_concate_s8_x</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_x,</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_y,</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_w,</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_x,</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>out_offset_x)</highlight></codeline>
<codeline lineno="7439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_concate_s8_x(in_tensor,<sp/>in_tensor_x,<sp/>in_tensor_y,<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_w,<sp/>out_tensor,<sp/>out_tensor_x,<sp/>out_offset_x);</highlight></codeline>
<codeline lineno="7443"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_concate_s8_x(in_tensor,<sp/>in_tensor_x,<sp/>in_tensor_y,<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_w,<sp/>out_tensor,<sp/>out_tensor_x,<sp/>out_offset_x);</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7448"><highlight class="normal"></highlight></codeline>
<codeline lineno="7466" refid="group__nnconcatenation_1gab70f453cbcb29ea754c10f11563c763b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnconcatenation_1gab70f453cbcb29ea754c10f11563c763b" kindref="member">hpm_nn_concate_s8_y</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_x,</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_y,</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_w,</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_y,</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>out_offset_y)</highlight></codeline>
<codeline lineno="7474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_concate_s8_y(in_tensor,<sp/>in_tensor_x,<sp/>in_tensor_y,<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_w,<sp/>out_tensor,<sp/>out_tensor_y,<sp/>out_offset_y);</highlight></codeline>
<codeline lineno="7478"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7479"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_concate_s8_y(in_tensor,<sp/>in_tensor_x,<sp/>in_tensor_y,<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_w,<sp/>out_tensor,<sp/>out_tensor_y,<sp/>out_offset_y);</highlight></codeline>
<codeline lineno="7481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7483"><highlight class="normal"></highlight></codeline>
<codeline lineno="7501" refid="group__nnconcatenation_1ga0d92b806c0ec613df97185ce6ba8156f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnconcatenation_1ga0d92b806c0ec613df97185ce6ba8156f" kindref="member">hpm_nn_concate_s8_z</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_x,</highlight></codeline>
<codeline lineno="7503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_y,</highlight></codeline>
<codeline lineno="7504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_w,</highlight></codeline>
<codeline lineno="7506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_z,</highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>out_offset_z)</highlight></codeline>
<codeline lineno="7509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_concate_s8_z(in_tensor,<sp/>in_tensor_x,<sp/>in_tensor_y,<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_w,<sp/>out_tensor,<sp/>out_tensor_z,<sp/>out_offset_z);</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_concate_s8_z(in_tensor,<sp/>in_tensor_x,<sp/>in_tensor_y,<sp/>in_tensor_z,</highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_w,<sp/>out_tensor,<sp/>out_tensor_z,<sp/>out_offset_z);</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7518"><highlight class="normal"></highlight></codeline>
<codeline lineno="7523"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7525"><highlight class="normal"></highlight></codeline>
<codeline lineno="7526"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_CONVOLUTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7527"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7528"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7529"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_convolution.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7530"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7531"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_convolution.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7532"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7533"><highlight class="normal"></highlight></codeline>
<codeline lineno="7621" refid="group__nnconvolution_1gaf6fad182b1496ef1d5651b6628701293" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaf6fad182b1496ef1d5651b6628701293" kindref="member">hpm_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="7629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="7633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="7634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="7635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="7639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="7641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any(</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any(</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="7653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="7654"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7656"><highlight class="normal"></highlight></codeline>
<codeline lineno="7708" refid="group__nnconvolution_1ga48801812baf4ac44d8f420656e0d344e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga48801812baf4ac44d8f420656e0d344e" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="7710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="7712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="7713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="7714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="7722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_RGB_sft_bias(</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_RGB_sft_bias(</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="7731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="7733"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7735"><highlight class="normal"></highlight></codeline>
<codeline lineno="7787" refid="group__nnconvolution_1gacb280da3e5ee9dae757454a6f9fde55a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gacb280da3e5ee9dae757454a6f9fde55a" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="7789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="7791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="7792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="7793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="7795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="7801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7802"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast(</highlight></codeline>
<codeline lineno="7804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast(</highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="7810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="7812"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7814"><highlight class="normal"></highlight></codeline>
<codeline lineno="7815"><highlight class="normal"></highlight></codeline>
<codeline lineno="7866" refid="group__nnconvolution_1ga4289d8b8bf7de39fe2ec6716aeb1fb21" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga4289d8b8bf7de39fe2ec6716aeb1fb21" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_sft_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="7868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="7869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="7870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="7871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="7873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="7874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="7875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="7876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="7881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7882"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_sft_bias(</highlight></codeline>
<codeline lineno="7884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="7885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="7886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="7887"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_sft_bias(</highlight></codeline>
<codeline lineno="7889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="7890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="7892"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7894"><highlight class="normal"></highlight></codeline>
<codeline lineno="7956" refid="group__nnconvolution_1gaa3bea4019638b22edc46a625f5cf7cce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnconvolution_1gaa3bea4019638b22edc46a625f5cf7cce" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_sft_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="7957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="7958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="7959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="7960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="7961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="7962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="7963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="7964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="7965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="7966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="7967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="7968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="7969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="7970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="7971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="7972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="7973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="7974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="7975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="7976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7977"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7978"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_conv_HWC_s8_s8_s8_sft_bias_any(</highlight></codeline>
<codeline lineno="7979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="7981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="7982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="7983"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7984"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_conv_HWC_s8_s8_s8_sft_bias_any(</highlight></codeline>
<codeline lineno="7985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="7986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="7987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="7988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="7989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7991"><highlight class="normal"></highlight></codeline>
<codeline lineno="8044" refid="group__nnconvolution_1gad9c7a0bfeedea12c13702a7b85f6045b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gad9c7a0bfeedea12c13702a7b85f6045b" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="8046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="8050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="8051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="8052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="8054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="8055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="8057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="8058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="8059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8060"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_sft_bias_fast(</highlight></codeline>
<codeline lineno="8062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="8064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8065"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_sft_bias_fast(</highlight></codeline>
<codeline lineno="8067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="8069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8070"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8072"><highlight class="normal"></highlight></codeline>
<codeline lineno="8139" refid="group__nnconvolution_1ga6ebc094b7ca8a8eb46c249c165dc0990" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga6ebc094b7ca8a8eb46c249c165dc0990" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="8141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="8142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="8146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="8147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="8148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="8149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="8150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="8151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="8153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="8154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="8157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="8158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="8159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any(</highlight></codeline>
<codeline lineno="8162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8166"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any(</highlight></codeline>
<codeline lineno="8168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8174"><highlight class="normal"></highlight></codeline>
<codeline lineno="8175"><highlight class="normal"></highlight></codeline>
<codeline lineno="8226" refid="group__nnconvolution_1gae45d9ea581aa690f6bc604878b7ff56a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gae45d9ea581aa690f6bc604878b7ff56a" kindref="member">hpm_nn_conv_HWC_s16_s16_s16_sft_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="8228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="8232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="8233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="8234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="8236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="8237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="8239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="8240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="8241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8242"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s16_s16_s16_sft_bias(</highlight></codeline>
<codeline lineno="8244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="8246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8247"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s16_s16_s16_sft_bias(</highlight></codeline>
<codeline lineno="8249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="8251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8254"><highlight class="normal"></highlight></codeline>
<codeline lineno="8307" refid="group__nnconvolution_1ga2ad7e5bbd56df8f95bd183850900ff56" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga2ad7e5bbd56df8f95bd183850900ff56" kindref="member">hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="8309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="8313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="8314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="8315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="8317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="8318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="8320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="8321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="8322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8323"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s16_s16_s16_sft_bias_fast(</highlight></codeline>
<codeline lineno="8325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="8327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8328"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s16_s16_s16_sft_bias_fast(</highlight></codeline>
<codeline lineno="8330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="8332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8335"><highlight class="normal"></highlight></codeline>
<codeline lineno="8402" refid="group__nnconvolution_1gab92665e531cb2e24620d923c487f5697" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gab92665e531cb2e24620d923c487f5697" kindref="member">hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="8404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="8405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="8409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="8410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="8411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="8412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="8413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="8414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="8416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="8417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="8420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="8421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="8422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8423"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any(</highlight></codeline>
<codeline lineno="8425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8429"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any(</highlight></codeline>
<codeline lineno="8431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8437"><highlight class="normal"></highlight></codeline>
<codeline lineno="8489" refid="group__nnconvolution_1ga14a5303eb12476d8342725b778f3d60f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga14a5303eb12476d8342725b778f3d60f" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="8491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="8495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="8496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="8497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="8499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="8500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="8502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="8503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="8504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8505"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_sft_bias(</highlight></codeline>
<codeline lineno="8507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="8509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8510"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_sft_bias(</highlight></codeline>
<codeline lineno="8512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="8514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8517"><highlight class="normal"></highlight></codeline>
<codeline lineno="8580" refid="group__nnconvolution_1gacbd18e7251df9494ddf4619156237efd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gacbd18e7251df9494ddf4619156237efd" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="8582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="8583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="8587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="8588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="8589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="8590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="8591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="8592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="8594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="8595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="8598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="8599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="8600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8601"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any(</highlight></codeline>
<codeline lineno="8603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8607"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any(</highlight></codeline>
<codeline lineno="8609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="8613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8615"><highlight class="normal"></highlight></codeline>
<codeline lineno="8661" refid="group__nnconvolution_1ga291d3433cfdeac37ddedd621e0cea855" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga291d3433cfdeac37ddedd621e0cea855" kindref="member">hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="8663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="8664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="8668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="8669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="8670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="8671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="8672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="8673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="8675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="8676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="8677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="8680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="8681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8682"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="8684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="8688"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="8690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="8694"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8696"><highlight class="normal"></highlight></codeline>
<codeline lineno="8743" refid="group__nnconvolution_1gab36c58937982cb251a299463e48ff357" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gab36c58937982cb251a299463e48ff357" kindref="member">hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="8745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="8746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="8750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="8751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="8752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="8753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="8754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="8755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="8757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="8758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="8759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="8762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="8763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8764"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="8766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="8770"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="8772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="8776"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8778"><highlight class="normal"></highlight></codeline>
<codeline lineno="8824" refid="group__nnconvolution_1gad97f5d188a38e067ca8afe1d26a3f9e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gad97f5d188a38e067ca8afe1d26a3f9e6" kindref="member">hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="8826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="8827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="8831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="8832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="8833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="8834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="8835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="8836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="8838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="8839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="8840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="8843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="8844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8845"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="8847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="8851"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="8853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="8857"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8859"><highlight class="normal"></highlight></codeline>
<codeline lineno="8906" refid="group__nnconvolution_1ga1ee3747f0f50187370bb25d91b412447" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga1ee3747f0f50187370bb25d91b412447" kindref="member">hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="8908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="8909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="8913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="8914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="8915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="8916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="8917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="8918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="8919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="8920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="8921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="8922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="8923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="8925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="8926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8927"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="8929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="8933"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="8935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="8936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="8937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="8938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="8939"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8941"><highlight class="normal"></highlight></codeline>
<codeline lineno="8988" refid="group__nnconvolution_1gac7a64479b1a28db67739740f7797c0ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gac7a64479b1a28db67739740f7797c0ad" kindref="member">hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="8989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="8990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="8991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="8992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="8993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="8994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="8995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="8996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="8997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="8998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="8999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="9000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="9001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="9007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="9008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9009"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="9011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9015"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="9017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9021"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9023"><highlight class="normal"></highlight></codeline>
<codeline lineno="9068" refid="group__nnconvolution_1ga1353634c6dd78e51d72ad649f1851741" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga1353634c6dd78e51d72ad649f1851741" kindref="member">hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="9070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="9071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="9072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="9075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="9076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="9077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="9078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="9079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="9080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="9086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="9087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9088"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9094"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9102"><highlight class="normal"></highlight></codeline>
<codeline lineno="9148" refid="group__nnconvolution_1ga40b28637cd642db0f36e19b0c5008433" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga40b28637cd642db0f36e19b0c5008433" kindref="member">hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="9150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="9151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="9152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="9155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="9156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="9157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="9158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="9159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="9160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="9166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="9167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9168"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9174"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9182"><highlight class="normal"></highlight></codeline>
<codeline lineno="9227" refid="group__nnconvolution_1ga1a24af57ab9a2be65f085e36c0c80520" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga1a24af57ab9a2be65f085e36c0c80520" kindref="member">hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="9229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="9230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="9231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="9234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="9235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="9236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="9237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="9238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="9239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="9245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="9246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9253"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9261"><highlight class="normal"></highlight></codeline>
<codeline lineno="9307" refid="group__nnconvolution_1ga13dceb3700caa3c22c53bd7f6017a40d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga13dceb3700caa3c22c53bd7f6017a40d" kindref="member">hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="9309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="9310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="9311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="9314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="9315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="9316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="9317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="9318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="9319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="9325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="9326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9327"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9333"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9341"><highlight class="normal"></highlight></codeline>
<codeline lineno="9387" refid="group__nnconvolution_1ga2e95b6dd2dc0ebe0fb31b4ce4e97b5c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga2e95b6dd2dc0ebe0fb31b4ce4e97b5c0" kindref="member">hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="9389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="9390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="9391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="9394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="9395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="9396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="9397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="9398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="9399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="9405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="9406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9407"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9413"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="9415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="9416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="9417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="9418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="9419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9421"><highlight class="normal"></highlight></codeline>
<codeline lineno="9453" refid="group__nnconvolution_1gaeed17db639b9ce3a896bc2bfeaaeb8ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaeed17db639b9ce3a896bc2bfeaaeb8ed" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="9461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9469"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9474"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9479"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9481"><highlight class="normal"></highlight></codeline>
<codeline lineno="9514" refid="group__nnconvolution_1gadbb401015033df936d4547841e0c6778" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gadbb401015033df936d4547841e0c6778" kindref="member">hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="9522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9530"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9535"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9540"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9542"><highlight class="normal"></highlight></codeline>
<codeline lineno="9574" refid="group__nnconvolution_1gae84e818d001cf7ea2c4331924f36e35e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gae84e818d001cf7ea2c4331924f36e35e" kindref="member">hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="9582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9590"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9595"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9602"><highlight class="normal"></highlight></codeline>
<codeline lineno="9634" refid="group__nnconvolution_1ga02b99a74afdae934fc45f491a59d2214" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga02b99a74afdae934fc45f491a59d2214" kindref="member">hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="9642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9650"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9655"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9660"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9662"><highlight class="normal"></highlight></codeline>
<codeline lineno="9695" refid="group__nnconvolution_1ga3fbca4e04cca9289834c84a10a913a88" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga3fbca4e04cca9289834c84a10a913a88" kindref="member">hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="9703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9711"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9716"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast(</highlight></codeline>
<codeline lineno="9718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9723"><highlight class="normal"></highlight></codeline>
<codeline lineno="9754" refid="group__nnconvolution_1gac66363c7f5934113644361412bcf3afc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gac66363c7f5934113644361412bcf3afc" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9768"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9769"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="9771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9774"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="9776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9781"><highlight class="normal"></highlight></codeline>
<codeline lineno="9812" refid="group__nnconvolution_1ga760c3e28022de0cc9781549ec67b472a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga760c3e28022de0cc9781549ec67b472a" kindref="member">hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9827"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s16_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="9829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9832"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s16_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="9834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9837"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9839"><highlight class="normal"></highlight></codeline>
<codeline lineno="9870" refid="group__nnconvolution_1ga546898208090a68e33f99ced79470f5f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga546898208090a68e33f99ced79470f5f" kindref="member">hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9885"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_u8_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="9887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9890"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_u8_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="9892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9895"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9897"><highlight class="normal"></highlight></codeline>
<codeline lineno="9928" refid="group__nnconvolution_1ga2f5d213d0023ff26d9ce168bfefa2a40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga2f5d213d0023ff26d9ce168bfefa2a40" kindref="member">hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="9942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9943"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s8_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="9945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9948"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s8_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="9950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="9951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="9953"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9955"><highlight class="normal"></highlight></codeline>
<codeline lineno="9986" refid="group__nnconvolution_1ga30719ccfc86c77e8b4fde37011f8d543" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga30719ccfc86c77e8b4fde37011f8d543" kindref="member">hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="9987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="9988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="9989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="9990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="9991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="9992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="9993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="9994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="9995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="9996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="9997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="9998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="9999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_tmp_buf)</highlight></codeline>
<codeline lineno="10000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10001"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s16_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="10003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="10004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="10006"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s16_s8_RGB_sym_fast(</highlight></codeline>
<codeline lineno="10008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim,<sp/>pad,<sp/>stride,</highlight></codeline>
<codeline lineno="10009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>wt_tmp_buf);</highlight></codeline>
<codeline lineno="10011"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10013"><highlight class="normal"></highlight></codeline>
<codeline lineno="10044" refid="group__nnconvolution_1ga0bc1ef1d72db702cc49be0016a4180f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga0bc1ef1d72db702cc49be0016a4180f8" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10060"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10065"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10070"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10072"><highlight class="normal"></highlight></codeline>
<codeline lineno="10103" refid="group__nnconvolution_1gaa32181a4fa9730dd1aaff34473aad105" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaa32181a4fa9730dd1aaff34473aad105" kindref="member">hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10119"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s16_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10124"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s16_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10131"><highlight class="normal"></highlight></codeline>
<codeline lineno="10162" refid="group__nnconvolution_1gab00822cf6d1b355344c6385a2555dab4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gab00822cf6d1b355344c6385a2555dab4" kindref="member">hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_u8_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10183"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_u8_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10190"><highlight class="normal"></highlight></codeline>
<codeline lineno="10221" refid="group__nnconvolution_1ga7cd15bdefc9684fc8c6dc5740bd973e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga7cd15bdefc9684fc8c6dc5740bd973e6" kindref="member">hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10237"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s8_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10242"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s8_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10249"><highlight class="normal"></highlight></codeline>
<codeline lineno="10280" refid="group__nnconvolution_1ga14a05c18351cdbb2158cf1978e508f8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga14a05c18351cdbb2158cf1978e508f8c" kindref="member">hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10296"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s16_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10301"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s16_s8_sym_bias_fast(</highlight></codeline>
<codeline lineno="10303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10308"><highlight class="normal"></highlight></codeline>
<codeline lineno="10338" refid="group__nnconvolution_1gaf85f4310b5b177044f48ea61614aaf10" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaf85f4310b5b177044f48ea61614aaf10" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10353"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_sym_fast(</highlight></codeline>
<codeline lineno="10355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10358"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_sym_fast(</highlight></codeline>
<codeline lineno="10360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10363"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10365"><highlight class="normal"></highlight></codeline>
<codeline lineno="10395" refid="group__nnconvolution_1gaba554ffd11e415541ebab72f6161915d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaba554ffd11e415541ebab72f6161915d" kindref="member">hpm_nn_conv_HWC_s8_s16_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10410"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s16_s8_sym_fast(</highlight></codeline>
<codeline lineno="10412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10415"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s16_s8_sym_fast(</highlight></codeline>
<codeline lineno="10417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10420"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10422"><highlight class="normal"></highlight></codeline>
<codeline lineno="10452" refid="group__nnconvolution_1ga44f3d234a8ffe93b8cbc31e19ed49cc3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga44f3d234a8ffe93b8cbc31e19ed49cc3" kindref="member">hpm_nn_conv_HWC_u8_u8_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10467"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_u8_s8_sym_fast(</highlight></codeline>
<codeline lineno="10469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10472"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_u8_s8_sym_fast(</highlight></codeline>
<codeline lineno="10474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10479"><highlight class="normal"></highlight></codeline>
<codeline lineno="10509" refid="group__nnconvolution_1ga681fd01c3db04f540acb48e080682acc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga681fd01c3db04f540acb48e080682acc" kindref="member">hpm_nn_conv_HWC_u8_s8_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10524"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s8_s8_sym_fast(</highlight></codeline>
<codeline lineno="10526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10529"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s8_s8_sym_fast(</highlight></codeline>
<codeline lineno="10531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10534"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10536"><highlight class="normal"></highlight></codeline>
<codeline lineno="10566" refid="group__nnconvolution_1ga6ca86332aeecf3be577bfb87f554d178" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga6ca86332aeecf3be577bfb87f554d178" kindref="member">hpm_nn_conv_HWC_u8_s16_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="10568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="10572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="10573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="10574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="10579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10581"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s16_s8_sym_fast(</highlight></codeline>
<codeline lineno="10583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10586"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s16_s8_sym_fast(</highlight></codeline>
<codeline lineno="10588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="10590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10593"><highlight class="normal"></highlight></codeline>
<codeline lineno="10630" refid="group__nnconvolution_1gaa733b3587ec4a987004946f46fdf4d8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaa733b3587ec4a987004946f46fdf4d8e" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="10632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="10633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="10637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="10638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="10639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="10640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="10641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="10642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="10649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10651"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10657"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10663"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10665"><highlight class="normal"></highlight></codeline>
<codeline lineno="10703" refid="group__nnconvolution_1gafa3b832483993fd1609f2744a7a1c6d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gafa3b832483993fd1609f2744a7a1c6d5" kindref="member">hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="10705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="10706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="10710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="10711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="10712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="10713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="10714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="10715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="10722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10724"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10730"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10738"><highlight class="normal"></highlight></codeline>
<codeline lineno="10775" refid="group__nnconvolution_1gaa245691db40029df9384b7e50b79fde4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaa245691db40029df9384b7e50b79fde4" kindref="member">hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="10777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="10778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="10782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="10783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="10784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="10785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="10786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="10787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="10794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10796"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10802"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10808"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10810"><highlight class="normal"></highlight></codeline>
<codeline lineno="10848" refid="group__nnconvolution_1gae65c6f8353b1d3eb0ad4f6bbdb89c4cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gae65c6f8353b1d3eb0ad4f6bbdb89c4cc" kindref="member">hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="10850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="10851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="10855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="10856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="10857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="10858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="10859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="10860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="10867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10869"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10875"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10881"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10883"><highlight class="normal"></highlight></codeline>
<codeline lineno="10921" refid="group__nnconvolution_1ga1ba10db375981d7dfba5902aea8de0ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga1ba10db375981d7dfba5902aea8de0ff" kindref="member">hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="10923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="10924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="10928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="10929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="10930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="10931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="10932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="10933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="10934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="10935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="10936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="10937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="10938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="10940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="10941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10942"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10948"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any(</highlight></codeline>
<codeline lineno="10950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="10951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="10952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="10953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="10954"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10956"><highlight class="normal"></highlight></codeline>
<codeline lineno="10992" refid="group__nnconvolution_1gaf210756844a35322033afcc20325eae5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaf210756844a35322033afcc20325eae5" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="10993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="10994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="10995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="10996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="10997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="10998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="10999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="11000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="11001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="11002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="11003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="11004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="11010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11011"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11012"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11018"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11024"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11026"><highlight class="normal"></highlight></codeline>
<codeline lineno="11062" refid="group__nnconvolution_1gaea70ea34cd3a6e45bc89ada5e110e698" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaea70ea34cd3a6e45bc89ada5e110e698" kindref="member">hpm_nn_conv_HWC_s8_s16_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="11064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="11065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="11069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="11070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="11071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="11072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="11073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="11074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="11080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11082"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s16_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11088"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s16_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11094"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11096"><highlight class="normal"></highlight></codeline>
<codeline lineno="11132" refid="group__nnconvolution_1gad00d5ffdfffd45ad20e15c41da36a31b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gad00d5ffdfffd45ad20e15c41da36a31b" kindref="member">hpm_nn_conv_HWC_u8_u8_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="11134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="11135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="11139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="11140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="11141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="11142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="11143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="11144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="11150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11152"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_u8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11158"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_u8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11166"><highlight class="normal"></highlight></codeline>
<codeline lineno="11202" refid="group__nnconvolution_1gad463faadd1a58de1fabc5f05a396f025" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gad463faadd1a58de1fabc5f05a396f025" kindref="member">hpm_nn_conv_HWC_u8_s8_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="11204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="11205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="11209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="11210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="11211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="11212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="11213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="11214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="11220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11222"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11228"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s8_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11236"><highlight class="normal"></highlight></codeline>
<codeline lineno="11272" refid="group__nnconvolution_1ga7bb79b1cd25ff4e15ddfff5ac9336d3f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga7bb79b1cd25ff4e15ddfff5ac9336d3f" kindref="member">hpm_nn_conv_HWC_u8_s16_s8_sym_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="11274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="11275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="11279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="11280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="11281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="11282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="11283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="11284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="11290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11292"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_u8_s16_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11298"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_u8_s16_s8_sym_fast_any(</highlight></codeline>
<codeline lineno="11300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11306"><highlight class="normal"></highlight></codeline>
<codeline lineno="11307"><highlight class="normal"></highlight></codeline>
<codeline lineno="11338" refid="group__nnconvolution_1gaa2232c5f84cbe4d40d4201756d87c308" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaa2232c5f84cbe4d40d4201756d87c308" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="11347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11354"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_sym_bias(</highlight></codeline>
<codeline lineno="11356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11359"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_sym_bias(</highlight></codeline>
<codeline lineno="11361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11366"><highlight class="normal"></highlight></codeline>
<codeline lineno="11397" refid="group__nnconvolution_1ga3c6fcf87e6f94a46600aab9b8154e747" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga3c6fcf87e6f94a46600aab9b8154e747" kindref="member">hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="11406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11413"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s16_s8_sym_bias(</highlight></codeline>
<codeline lineno="11415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11418"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s16_s8_sym_bias(</highlight></codeline>
<codeline lineno="11420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11423"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11425"><highlight class="normal"></highlight></codeline>
<codeline lineno="11456" refid="group__nnconvolution_1ga88f4d9ab1a22cc7d551664bf37c11f4a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga88f4d9ab1a22cc7d551664bf37c11f4a" kindref="member">hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="11465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11472"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_u8_s8_sym_bias(</highlight></codeline>
<codeline lineno="11474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11477"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_u8_s8_sym_bias(</highlight></codeline>
<codeline lineno="11479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11482"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11484"><highlight class="normal"></highlight></codeline>
<codeline lineno="11515" refid="group__nnconvolution_1ga3c07fe5b1305f89f094eb44de887288e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga3c07fe5b1305f89f094eb44de887288e" kindref="member">hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="11524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11531"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_s8_s8_sym_bias(</highlight></codeline>
<codeline lineno="11533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11536"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_s8_s8_sym_bias(</highlight></codeline>
<codeline lineno="11538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11543"><highlight class="normal"></highlight></codeline>
<codeline lineno="11574" refid="group__nnconvolution_1gae3cdb24a3bc9374cc98a97d1cf66d713" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gae3cdb24a3bc9374cc98a97d1cf66d713" kindref="member">hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="11583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11590"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_s16_s8_sym_bias(</highlight></codeline>
<codeline lineno="11592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11595"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_s16_s8_sym_bias(</highlight></codeline>
<codeline lineno="11597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11602"><highlight class="normal"></highlight></codeline>
<codeline lineno="11632" refid="group__nnconvolution_1gaddf5ec832e3e3306da2089d5bb742aee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaddf5ec832e3e3306da2089d5bb742aee" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11647"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_sym(</highlight></codeline>
<codeline lineno="11649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11652"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_sym(</highlight></codeline>
<codeline lineno="11654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11659"><highlight class="normal"></highlight></codeline>
<codeline lineno="11689" refid="group__nnconvolution_1gacb88aa3904d0374b532ac0dfae36d0ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gacb88aa3904d0374b532ac0dfae36d0ae" kindref="member">hpm_nn_conv_dw_HWC_s8_s16_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11704"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s16_s8_sym(</highlight></codeline>
<codeline lineno="11706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11709"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s16_s8_sym(</highlight></codeline>
<codeline lineno="11711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11714"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11716"><highlight class="normal"></highlight></codeline>
<codeline lineno="11746" refid="group__nnconvolution_1ga11e8db5b74e51807c0f6c264ceb88a3f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga11e8db5b74e51807c0f6c264ceb88a3f" kindref="member">hpm_nn_conv_dw_HWC_u8_u8_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11761"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_u8_s8_sym(</highlight></codeline>
<codeline lineno="11763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11766"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_u8_s8_sym(</highlight></codeline>
<codeline lineno="11768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11771"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11773"><highlight class="normal"></highlight></codeline>
<codeline lineno="11803" refid="group__nnconvolution_1ga8021fde290f091b9348e56ae24fdf912" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga8021fde290f091b9348e56ae24fdf912" kindref="member">hpm_nn_conv_dw_HWC_u8_s8_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11818"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_s8_s8_sym(</highlight></codeline>
<codeline lineno="11820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11823"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_s8_s8_sym(</highlight></codeline>
<codeline lineno="11825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11828"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11830"><highlight class="normal"></highlight></codeline>
<codeline lineno="11860" refid="group__nnconvolution_1ga19633dab07a1ccb79712b58dbf7e9a51" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga19633dab07a1ccb79712b58dbf7e9a51" kindref="member">hpm_nn_conv_dw_HWC_u8_s16_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="11862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="11866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="11867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="11868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="11873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11875"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_s16_s8_sym(</highlight></codeline>
<codeline lineno="11877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11880"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_s16_s8_sym(</highlight></codeline>
<codeline lineno="11882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="11884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11885"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11887"><highlight class="normal"></highlight></codeline>
<codeline lineno="11924" refid="group__nnconvolution_1ga425531141b804498f1b04ab9203c35c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga425531141b804498f1b04ab9203c35c3" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="11926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="11927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="11928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="11929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="11930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="11931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="11932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="11933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="11934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="11935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="11936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="11937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="11938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="11939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="11940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="11941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="11943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="11944"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11945"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="11947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11951"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="11953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="11954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="11955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="11956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="11957"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11959"><highlight class="normal"></highlight></codeline>
<codeline lineno="11997" refid="group__nnconvolution_1ga0a8c643e8c77051213ccf469486ddccb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga0a8c643e8c77051213ccf469486ddccb" kindref="member">hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="11998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="11999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="12010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12018"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="12020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12024"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="12026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12030"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12032"><highlight class="normal"></highlight></codeline>
<codeline lineno="12069" refid="group__nnconvolution_1ga048ff15cdd4652c25b9b250f8356f335" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga048ff15cdd4652c25b9b250f8356f335" kindref="member">hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="12082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12090"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="12092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12096"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="12098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12104"><highlight class="normal"></highlight></codeline>
<codeline lineno="12142" refid="group__nnconvolution_1gab6af36649c64102a6e1c80e623bed9f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gab6af36649c64102a6e1c80e623bed9f3" kindref="member">hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="12155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="12165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12169"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="12171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12177"><highlight class="normal"></highlight></codeline>
<codeline lineno="12215" refid="group__nnconvolution_1ga24277b452593c20ae17ff2086fb8253a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga24277b452593c20ae17ff2086fb8253a" kindref="member">hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="12228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12236"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="12238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12242"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any(</highlight></codeline>
<codeline lineno="12244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12250"><highlight class="normal"></highlight></codeline>
<codeline lineno="12286" refid="group__nnconvolution_1gae8250ca3c328de6b4ea93e4f62bcf541" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gae8250ca3c328de6b4ea93e4f62bcf541" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_sym_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12306"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_sym_any(</highlight></codeline>
<codeline lineno="12308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12312"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_sym_any(</highlight></codeline>
<codeline lineno="12314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12320"><highlight class="normal"></highlight></codeline>
<codeline lineno="12357" refid="group__nnconvolution_1ga6bf168c41fda67552bd4b5f5c200a268" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga6bf168c41fda67552bd4b5f5c200a268" kindref="member">hpm_nn_conv_dw_HWC_s8_s16_s8_sym_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12377"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s16_s8_sym_any(</highlight></codeline>
<codeline lineno="12379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12383"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s16_s8_sym_any(</highlight></codeline>
<codeline lineno="12385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12391"><highlight class="normal"></highlight></codeline>
<codeline lineno="12427" refid="group__nnconvolution_1gab5cb8f3dc2985f57b742036399164798" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gab5cb8f3dc2985f57b742036399164798" kindref="member">hpm_nn_conv_dw_HWC_u8_u8_s8_sym_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12447"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_u8_s8_sym_any(</highlight></codeline>
<codeline lineno="12449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12453"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_u8_s8_sym_any(</highlight></codeline>
<codeline lineno="12455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12461"><highlight class="normal"></highlight></codeline>
<codeline lineno="12498" refid="group__nnconvolution_1gac080214be9e1938ba324ca42c0aade2c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gac080214be9e1938ba324ca42c0aade2c" kindref="member">hpm_nn_conv_dw_HWC_u8_s8_s8_sym_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12518"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_s8_s8_sym_any(</highlight></codeline>
<codeline lineno="12520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12524"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_s8_s8_sym_any(</highlight></codeline>
<codeline lineno="12526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12532"><highlight class="normal"></highlight></codeline>
<codeline lineno="12569" refid="group__nnconvolution_1gae9744bde30c4e26b17ef6dc89acb16d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gae9744bde30c4e26b17ef6dc89acb16d7" kindref="member">hpm_nn_conv_dw_HWC_u8_s16_s8_sym_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="12582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="12583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="12584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12589"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_s16_s8_sym_any(</highlight></codeline>
<codeline lineno="12591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12595"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_s16_s8_sym_any(</highlight></codeline>
<codeline lineno="12597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="12599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/>out_tensor,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12601"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12603"><highlight class="normal"></highlight></codeline>
<codeline lineno="12650" refid="group__nnconvolution_1ga2420b518e254e3fd4abe27f16a2a7901" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga2420b518e254e3fd4abe27f16a2a7901" kindref="member">hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_group,</highlight></codeline>
<codeline lineno="12655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="12662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="12664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="12665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="12666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="12667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="12668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="12669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="12672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12673"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any(</highlight></codeline>
<codeline lineno="12675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_group,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,</highlight></codeline>
<codeline lineno="12677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_offset,<sp/>in_offset,</highlight></codeline>
<codeline lineno="12678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="12679"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any(</highlight></codeline>
<codeline lineno="12681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_group,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,</highlight></codeline>
<codeline lineno="12683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_offset,<sp/>in_offset,</highlight></codeline>
<codeline lineno="12684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="12685"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12687"><highlight class="normal"></highlight></codeline>
<codeline lineno="12694" refid="group__nnconvolution_1gaa7a9c1eab5556db05cfa3d05dfa4c71c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaa7a9c1eab5556db05cfa3d05dfa4c71c" kindref="member">hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch)</highlight></codeline>
<codeline lineno="12695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12696"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size(</highlight></codeline>
<codeline lineno="12698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch);</highlight></codeline>
<codeline lineno="12699"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size(</highlight></codeline>
<codeline lineno="12701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch);</highlight></codeline>
<codeline lineno="12702"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12704"><highlight class="normal"></highlight></codeline>
<codeline lineno="12743" refid="group__nnconvolution_1gae1c62cb7f29063bf12498148562fdca7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nnconvolution_1gae1c62cb7f29063bf12498148562fdca7" kindref="member">hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_group,</highlight></codeline>
<codeline lineno="12747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="12753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="12755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="12756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="12757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="12758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="12759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="12760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12763"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="12765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_ch,<sp/>in_tensor_group,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>pad_x,<sp/>stride_x,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,</highlight></codeline>
<codeline lineno="12767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12769"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="12771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_ch,<sp/>in_tensor_group,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>pad_x,<sp/>stride_x,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,</highlight></codeline>
<codeline lineno="12773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12777"><highlight class="normal"></highlight></codeline>
<codeline lineno="12787" refid="group__nnconvolution_1ga1e0aac3f254eb048c027362e2fa40c0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga1e0aac3f254eb048c027362e2fa40c0a" kindref="member">hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y)</highlight></codeline>
<codeline lineno="12790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12791"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size(</highlight></codeline>
<codeline lineno="12793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="12794"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size(</highlight></codeline>
<codeline lineno="12796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="12797"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12799"><highlight class="normal"></highlight></codeline>
<codeline lineno="12841" refid="group__nnconvolution_1gafcbbcd4692c657df2ab93d7529fc0adb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gafcbbcd4692c657df2ab93d7529fc0adb" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_group,</highlight></codeline>
<codeline lineno="12846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="12850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="12855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="12857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="12858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="12859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="12860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="12861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="12862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="12865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12866"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="12868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_group,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,</highlight></codeline>
<codeline lineno="12870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pad_y,<sp/>stride_x,<sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,</highlight></codeline>
<codeline lineno="12871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12873"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="12875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_group,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,</highlight></codeline>
<codeline lineno="12877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pad_y,<sp/>stride_x,<sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,</highlight></codeline>
<codeline lineno="12878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="12880"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12882"><highlight class="normal"></highlight></codeline>
<codeline lineno="12891" refid="group__nnconvolution_1ga89509f5499197a1f65bc7e29ff471f2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga89509f5499197a1f65bc7e29ff471f2a" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="12893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y)</highlight></codeline>
<codeline lineno="12894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12895"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size(</highlight></codeline>
<codeline lineno="12897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="12898"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size(</highlight></codeline>
<codeline lineno="12900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="12901"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12903"><highlight class="normal"></highlight></codeline>
<codeline lineno="12943" refid="group__nnconvolution_1ga9cfa87c1ba0068ad397a429d1ac1aab2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga9cfa87c1ba0068ad397a429d1ac1aab2" kindref="member">hpm_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="12944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="12945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="12946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="12947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="12948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="12949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="12950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="12951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="12952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="12953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="12954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="12955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="12956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="12957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="12958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="12959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="12960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="12961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="12962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="12963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>dilation_x,</highlight></codeline>
<codeline lineno="12964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>dilation_y,</highlight></codeline>
<codeline lineno="12965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="12966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12967"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="12969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="12971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>out_offset,</highlight></codeline>
<codeline lineno="12972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,<sp/>dilation_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="12973"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="12975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="12976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,</highlight></codeline>
<codeline lineno="12977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>out_offset,</highlight></codeline>
<codeline lineno="12978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,<sp/>dilation_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="12979"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12981"><highlight class="normal"></highlight></codeline>
<codeline lineno="13029" refid="group__nnconvolution_1ga455407b84cfc71528b0dd8680c64a8b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga455407b84cfc71528b0dd8680c64a8b3" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="13032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ch_mult,</highlight></codeline>
<codeline lineno="13036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="13038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="13040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="13042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="13045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="13046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="13048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="13049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="13050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="13051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="13052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>dilation_y,</highlight></codeline>
<codeline lineno="13054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="13055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13056"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="13058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ch_mult,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,</highlight></codeline>
<codeline lineno="13060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13063"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="13065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ch_mult,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,</highlight></codeline>
<codeline lineno="13067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13070"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13072"><highlight class="normal"></highlight></codeline>
<codeline lineno="13117" refid="group__nnconvolution_1gad954df9be69373bdc385362c70b140dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gad954df9be69373bdc385362c70b140dc" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="13120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="13125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="13127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="13129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="13132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="13133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="13135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="13136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="13137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="13138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="13139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>dilation_y,</highlight></codeline>
<codeline lineno="13141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="13142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13143"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any(</highlight></codeline>
<codeline lineno="13145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="13147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="13150"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any(</highlight></codeline>
<codeline lineno="13152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="13154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="13157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13159"><highlight class="normal"></highlight></codeline>
<codeline lineno="13168" refid="group__nnconvolution_1gad9339201eff1c27fd41039bfc4a4756c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gad9339201eff1c27fd41039bfc4a4756c" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y)</highlight></codeline>
<codeline lineno="13171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13172"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="13175"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="13178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13180"><highlight class="normal"></highlight></codeline>
<codeline lineno="13221" refid="group__nnconvolution_1ga0b9ce54b2ac422932e71b67b66d657c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga0b9ce54b2ac422932e71b67b66d657c1" kindref="member">hpm_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="13224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="13228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>ch_mult,</highlight></codeline>
<codeline lineno="13229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="13231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="13233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>dilation_y,</highlight></codeline>
<codeline lineno="13235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="13237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>ker_offset,</highlight></codeline>
<codeline lineno="13238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="13239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="13242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="13243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="13244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_shift,</highlight></codeline>
<codeline lineno="13245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_scale)</highlight></codeline>
<codeline lineno="13246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any(</highlight></codeline>
<codeline lineno="13249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>ch_mult,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="13251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_x,<sp/>dilation_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>in_offset,<sp/>ker_offset,<sp/>out_offset,</highlight></codeline>
<codeline lineno="13252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>act_min,<sp/>act_max,</highlight></codeline>
<codeline lineno="13253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_shift,<sp/>out_scale);</highlight></codeline>
<codeline lineno="13254"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any(</highlight></codeline>
<codeline lineno="13256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>ch_mult,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="13258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_x,<sp/>dilation_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>in_offset,<sp/>ker_offset,<sp/>out_offset,</highlight></codeline>
<codeline lineno="13259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>act_min,<sp/>act_max,</highlight></codeline>
<codeline lineno="13260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_shift,<sp/>out_scale);</highlight></codeline>
<codeline lineno="13261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13263"><highlight class="normal"></highlight></codeline>
<codeline lineno="13264"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__riscv_zfh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>hpm_nn_conv_1x1_HWC_f16_f16_f16_bias_any(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="13303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="13308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="13310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="13312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="13316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="13318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13319"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_f16_f16_f16_bias_any(</highlight></codeline>
<codeline lineno="13321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="13323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13325"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_f16_f16_f16_bias_any(</highlight></codeline>
<codeline lineno="13327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="13329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13333"><highlight class="normal"></highlight></codeline>
<codeline lineno="13355"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>hpm_nn_conv_HWC_f16_f16_f16_bias(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="13357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="13361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="13362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="13363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="13366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="13368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13369"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_f16_f16_f16_bias(</highlight></codeline>
<codeline lineno="13371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13374"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_f16_f16_f16_bias(</highlight></codeline>
<codeline lineno="13376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13381"><highlight class="normal"></highlight></codeline>
<codeline lineno="13403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>hpm_nn_conv_dw_HWC_f16_f16_f16_bias(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="13405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="13409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="13410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="13411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="13414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="13416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13417"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_f16_f16_f16_bias(</highlight></codeline>
<codeline lineno="13419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13422"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_f16_f16_f16_bias(</highlight></codeline>
<codeline lineno="13424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_weight,<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim,<sp/>pad,<sp/>stride,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="13426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13430"><highlight class="normal"></highlight></codeline>
<codeline lineno="13435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13436"><highlight class="normal"></highlight></codeline>
<codeline lineno="13437"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_RVP32_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13438"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13439"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_convolution.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13440"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13441"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_convolution.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13443"><highlight class="normal"></highlight></codeline>
<codeline lineno="13485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gafcbbcd4692c657df2ab93d7529fc0adb" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="13488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_group,</highlight></codeline>
<codeline lineno="13490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="13494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="13496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="13498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="13501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="13502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="13503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="13504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="13505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="13506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="13508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="13509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13510"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="13512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_group,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,</highlight></codeline>
<codeline lineno="13514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pad_y,<sp/>stride_x,<sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,</highlight></codeline>
<codeline lineno="13515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="13517"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="13519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_group,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,</highlight></codeline>
<codeline lineno="13521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pad_y,<sp/>stride_x,<sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,</highlight></codeline>
<codeline lineno="13522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="13524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13526"><highlight class="normal"></highlight></codeline>
<codeline lineno="13573"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga2420b518e254e3fd4abe27f16a2a7901" kindref="member">hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="13576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_group,</highlight></codeline>
<codeline lineno="13578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="13582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="13584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="13587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="13588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="13589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="13590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="13591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="13592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="13594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="13595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13596"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any(</highlight></codeline>
<codeline lineno="13598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_group,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,</highlight></codeline>
<codeline lineno="13600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_offset,<sp/>in_offset,</highlight></codeline>
<codeline lineno="13601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13602"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any(</highlight></codeline>
<codeline lineno="13604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_group,<sp/>ker_weight,<sp/>out_tensor_ch,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,</highlight></codeline>
<codeline lineno="13606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_offset,<sp/>in_offset,</highlight></codeline>
<codeline lineno="13607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13610"><highlight class="normal"></highlight></codeline>
<codeline lineno="13658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga455407b84cfc71528b0dd8680c64a8b3" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="13661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ch_mult,</highlight></codeline>
<codeline lineno="13665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="13667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="13669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="13671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="13674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="13675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="13677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="13678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="13679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="13680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="13681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>dilation_y,</highlight></codeline>
<codeline lineno="13683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="13684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13685"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="13687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ch_mult,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,</highlight></codeline>
<codeline lineno="13689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13692"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="13694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ch_mult,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,</highlight></codeline>
<codeline lineno="13696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_y,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="13699"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13701"><highlight class="normal"></highlight></codeline>
<codeline lineno="13741"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nnconvolution_1gae1c62cb7f29063bf12498148562fdca7" kindref="member">hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_group,</highlight></codeline>
<codeline lineno="13745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="13753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="13754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="13755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="13756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="13757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="13758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="13760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13761"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="13763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_ch,<sp/>in_tensor_group,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>pad_x,<sp/>stride_x,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,</highlight></codeline>
<codeline lineno="13765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="13767"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any(</highlight></codeline>
<codeline lineno="13769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_ch,<sp/>in_tensor_group,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>pad_x,<sp/>stride_x,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,</highlight></codeline>
<codeline lineno="13771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="13773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13775"><highlight class="normal"></highlight></codeline>
<codeline lineno="13820"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gad954df9be69373bdc385362c70b140dc" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="13821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="13822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="13823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*ker_weight,</highlight></codeline>
<codeline lineno="13825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_ch,</highlight></codeline>
<codeline lineno="13826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="13828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="13829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="13830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="13831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="13832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="13833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="13834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_shift,</highlight></codeline>
<codeline lineno="13835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*out_scale,</highlight></codeline>
<codeline lineno="13836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="13838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="13839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="13840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="13841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="13842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>dilation_y,</highlight></codeline>
<codeline lineno="13844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="13845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13846"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any(</highlight></codeline>
<codeline lineno="13848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="13850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="13853"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any(</highlight></codeline>
<codeline lineno="13855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_weight,</highlight></codeline>
<codeline lineno="13856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,</highlight></codeline>
<codeline lineno="13857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/>out_tensor,<sp/>out_shift,<sp/>out_scale,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="13858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/>out_offset,<sp/>in_offset,<sp/>act_min,<sp/>act_max,<sp/>dilation_x,</highlight></codeline>
<codeline lineno="13859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dilation_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="13860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13862"><highlight class="normal"></highlight></codeline>
<codeline lineno="13869"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gaa7a9c1eab5556db05cfa3d05dfa4c71c" kindref="member">hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch)</highlight></codeline>
<codeline lineno="13870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13871"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch);</highlight></codeline>
<codeline lineno="13874"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch);</highlight></codeline>
<codeline lineno="13877"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13879"><highlight class="normal"></highlight></codeline>
<codeline lineno="13888"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1gad9339201eff1c27fd41039bfc4a4756c" kindref="member">hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y)</highlight></codeline>
<codeline lineno="13891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13892"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="13895"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="13898"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13900"><highlight class="normal"></highlight></codeline>
<codeline lineno="13910"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga1e0aac3f254eb048c027362e2fa40c0a" kindref="member">hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y)</highlight></codeline>
<codeline lineno="13913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13914"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="13917"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="13920"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13922"><highlight class="normal"></highlight></codeline>
<codeline lineno="13931"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnconvolution_1ga89509f5499197a1f65bc7e29ff471f2a" kindref="member">hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="13932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="13933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y)</highlight></codeline>
<codeline lineno="13934"><highlight class="normal"></highlight></codeline>
<codeline lineno="13935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13936"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="13939"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size(</highlight></codeline>
<codeline lineno="13941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>ker_dim_x,<sp/>ker_dim_y);</highlight></codeline>
<codeline lineno="13942"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13944"><highlight class="normal"></highlight></codeline>
<codeline lineno="13945"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13946"><highlight class="normal"></highlight></codeline>
<codeline lineno="13947"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13948"><highlight class="normal"></highlight></codeline>
<codeline lineno="13949"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_CONNECTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13950"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13951"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13952"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_fully_connected.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13953"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13954"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_fully_connected.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13956"><highlight class="normal"></highlight></codeline>
<codeline lineno="14000" refid="group__nnfullyconnect_1gab45ed3f14c58cab4076e6967ad30a332" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gab45ed3f14c58cab4076e6967ad30a332" kindref="member">hpm_nn_fc_s8_s8_s8_sft_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="14005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="14006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14009"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_sft_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14013"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14014" refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_sft_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14015" refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14016" refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14017"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14019"><highlight class="normal"></highlight></codeline>
<codeline lineno="14041" refid="group__nnfullyconnect_1gaa1f855aee9b668ef4769eda1f60554d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gaa1f855aee9b668ef4769eda1f60554d0" kindref="member">hpm_nn_fc_s8_s8_s8_sft_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="14046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="14047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14051"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_sft_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14055"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_sft_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14059"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14061"><highlight class="normal"></highlight></codeline>
<codeline lineno="14076" refid="group__nnfullyconnect_1ga20798f89906e5c61d8a6be867a1b72c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga20798f89906e5c61d8a6be867a1b72c3" kindref="member">hpm_nn_fc_s16_s16_s16_sft_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="14081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="14082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="14085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14086"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s16_s16_s16_sft_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="14090"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s16_s16_s16_sft_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="14094"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14096"><highlight class="normal"></highlight></codeline>
<codeline lineno="14119" refid="group__nnfullyconnect_1gaf1c0f1e99248d06ca8fed702e44aabb0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gaf1c0f1e99248d06ca8fed702e44aabb0" kindref="member">hpm_nn_fc_s16_s16_s16_sft_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="14124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="14125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s16_s16_s16_sft_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14133"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s16_s16_s16_sft_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14139"><highlight class="normal"></highlight></codeline>
<codeline lineno="14155" refid="group__nnfullyconnect_1ga69f5f40bb7c91659a061155d8ae0c910" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga69f5f40bb7c91659a061155d8ae0c910" kindref="member">hpm_nn_fc_mat_vec_s16_s16_s8_sft_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="14160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="14161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="14164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14165"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_mat_vec_s16_s16_s8_sft_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="14169"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_mat_vec_s16_s16_s8_sft_bias(</highlight></codeline>
<codeline lineno="14171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="14173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14175"><highlight class="normal"></highlight></codeline>
<codeline lineno="14197" refid="group__nnfullyconnect_1ga69a40656d6f2b497351607cd83054310" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga69a40656d6f2b497351607cd83054310" kindref="member">hpm_nn_fc_mat_vec_s16_s16_s8_sft_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,</highlight></codeline>
<codeline lineno="14202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,</highlight></codeline>
<codeline lineno="14203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="14206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14207"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_mat_vec_s16_s16_s8_sft_bias_fast(</highlight></codeline>
<codeline lineno="14209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="14211"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_mat_vec_s16_s16_s8_sft_bias_fast(</highlight></codeline>
<codeline lineno="14213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/><ref refid="group__nnfullyconnect_1gad09cca4af5af99ea8c169222a235b87f" kindref="member">bias_lshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga8dd64794329e763d76515d7434831c97" kindref="member">out_rshift</ref>,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buf);</highlight></codeline>
<codeline lineno="14215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14217"><highlight class="normal"></highlight></codeline>
<codeline lineno="14242" refid="group__nnfullyconnect_1gac6598c54f33cd2156828ba76e3116839" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gac6598c54f33cd2156828ba76e3116839" kindref="member">hpm_nn_fc_s8_s8_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14253"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14257"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14263"><highlight class="normal"></highlight></codeline>
<codeline lineno="14288" refid="group__nnfullyconnect_1ga56b2443d32bacffe5f4e733336180656" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga56b2443d32bacffe5f4e733336180656" kindref="member">hpm_nn_fc_s8_s16_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14299"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s16_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14303"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s16_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14309"><highlight class="normal"></highlight></codeline>
<codeline lineno="14334" refid="group__nnfullyconnect_1gac8fab5daa0ee54009b57c00ab40dda29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gac8fab5daa0ee54009b57c00ab40dda29" kindref="member">hpm_nn_fc_u8_u8_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14345"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_u8_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14349"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_u8_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14355"><highlight class="normal"></highlight></codeline>
<codeline lineno="14380" refid="group__nnfullyconnect_1gaab54ef128ef0662f974717b3c0ea4b08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gaab54ef128ef0662f974717b3c0ea4b08" kindref="member">hpm_nn_fc_u8_s8_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14391"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_s8_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14395"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_s8_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14399"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14401"><highlight class="normal"></highlight></codeline>
<codeline lineno="14426" refid="group__nnfullyconnect_1ga233a097c1621243f515aa429b86d135a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga233a097c1621243f515aa429b86d135a" kindref="member">hpm_nn_fc_u8_s16_s8_sym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14437"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_s16_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14441"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_s16_s8_sym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14447"><highlight class="normal"></highlight></codeline>
<codeline lineno="14471" refid="group__nnfullyconnect_1ga78586a92a1f2e8095cefd3496f0d723d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga78586a92a1f2e8095cefd3496f0d723d" kindref="member">hpm_nn_fc_s8_s8_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14481"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14484"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14489"><highlight class="normal"></highlight></codeline>
<codeline lineno="14513" refid="group__nnfullyconnect_1ga4dc06edf735a14d76827e261d78f1481" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga4dc06edf735a14d76827e261d78f1481" kindref="member">hpm_nn_fc_s8_s16_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14523"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s16_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14526"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s16_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14531"><highlight class="normal"></highlight></codeline>
<codeline lineno="14555" refid="group__nnfullyconnect_1gaeb6989af38515f0d357b865e63b5796a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gaeb6989af38515f0d357b865e63b5796a" kindref="member">hpm_nn_fc_u8_u8_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14565"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_u8_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14568"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_u8_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14573"><highlight class="normal"></highlight></codeline>
<codeline lineno="14597" refid="group__nnfullyconnect_1gaf53c113ab8461fa61dfff43d3a85ab36" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gaf53c113ab8461fa61dfff43d3a85ab36" kindref="member">hpm_nn_fc_u8_s8_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14607"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_s8_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14610"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_s8_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14615"><highlight class="normal"></highlight></codeline>
<codeline lineno="14639" refid="group__nnfullyconnect_1gae1938542936cfccfecf9e0141106cc90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gae1938542936cfccfecf9e0141106cc90" kindref="member">hpm_nn_fc_u8_s16_s8_sym</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14649"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_s16_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14652"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_s16_s8_sym(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>post_rshift,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14655"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14657"><highlight class="normal"></highlight></codeline>
<codeline lineno="14682" refid="group__nnfullyconnect_1gabd5c90ebea7d508aa4454fc001ca9df4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gabd5c90ebea7d508aa4454fc001ca9df4" kindref="member">hpm_nn_fc_s8_s8_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14693"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14697"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14701"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14703"><highlight class="normal"></highlight></codeline>
<codeline lineno="14729" refid="group__nnfullyconnect_1gaf0d42131487c8ec9d25a473af238f911" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gaf0d42131487c8ec9d25a473af238f911" kindref="member">hpm_nn_fc_s8_s16_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14740"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s16_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14744"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s16_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14750"><highlight class="normal"></highlight></codeline>
<codeline lineno="14775" refid="group__nnfullyconnect_1ga8efcbba79326680456a3a8a23aa5319b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga8efcbba79326680456a3a8a23aa5319b" kindref="member">hpm_nn_fc_u8_u8_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14786"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_u8_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14790"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_u8_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14794"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14796"><highlight class="normal"></highlight></codeline>
<codeline lineno="14822" refid="group__nnfullyconnect_1ga2c82d87df2361eff0f7c540c6576bbc3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga2c82d87df2361eff0f7c540c6576bbc3" kindref="member">hpm_nn_fc_u8_s8_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14833"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_s8_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14837"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_s8_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14841"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14843"><highlight class="normal"></highlight></codeline>
<codeline lineno="14869" refid="group__nnfullyconnect_1ga821032d36266a3897b68b10c84f3efa2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga821032d36266a3897b68b10c84f3efa2" kindref="member">hpm_nn_fc_u8_s16_s8_sym_bias_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q31_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="14877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14880"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_s16_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14884"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_s16_s8_sym_bias_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14888"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14890"><highlight class="normal"></highlight></codeline>
<codeline lineno="14914" refid="group__nnfullyconnect_1ga9a4cf02a4752fa6386ef8d81dd311672" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga9a4cf02a4752fa6386ef8d81dd311672" kindref="member">hpm_nn_fc_s8_s8_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14924"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14928"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14932"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14934"><highlight class="normal"></highlight></codeline>
<codeline lineno="14959" refid="group__nnfullyconnect_1ga6ff14c83b69467ce756baa5d3f41ad2b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga6ff14c83b69467ce756baa5d3f41ad2b" kindref="member">hpm_nn_fc_s8_s16_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="14960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="14961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="14962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="14964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="14965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="14967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="14968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14969"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s16_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14973"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s16_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="14975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="14976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="14977"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14979"><highlight class="normal"></highlight></codeline>
<codeline lineno="15003" refid="group__nnfullyconnect_1gaee46f4d3087336e2a8234ee58f49d49c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gaee46f4d3087336e2a8234ee58f49d49c" kindref="member">hpm_nn_fc_u8_u8_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="15004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="15005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="15008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="15009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="15011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="15012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15013"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_u8_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="15017"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_u8_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="15021"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15023"><highlight class="normal"></highlight></codeline>
<codeline lineno="15048" refid="group__nnfullyconnect_1gaedb16fe5dc6f61eb7efd55f6b5965c0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1gaedb16fe5dc6f61eb7efd55f6b5965c0d" kindref="member">hpm_nn_fc_u8_s8_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="15049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="15050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="15053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="15054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="15056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="15057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15058"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_s8_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="15062"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_s8_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="15066"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15068"><highlight class="normal"></highlight></codeline>
<codeline lineno="15093" refid="group__nnfullyconnect_1ga5bb8c127b68f039232af600b33346c08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga5bb8c127b68f039232af600b33346c08" kindref="member">hpm_nn_fc_u8_s16_s8_sym_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="15094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="15095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pre_rshift,</highlight></codeline>
<codeline lineno="15098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="15099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="15101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>)</highlight></codeline>
<codeline lineno="15102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_u8_s16_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="15107"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_u8_s16_s8_sym_fast(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_rshift,<sp/>out_scale,<sp/>post_rshift,</highlight></codeline>
<codeline lineno="15110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>);</highlight></codeline>
<codeline lineno="15111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15113"><highlight class="normal"></highlight></codeline>
<codeline lineno="15124" refid="group__nnfullyconnect_1ga78982f976203af0b163475fae6dee696" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnfullyconnect_1ga78982f976203af0b163475fae6dee696" kindref="member">hpm_nn_fc_s8_wt_converter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="15125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*wt_mat_out)</highlight></codeline>
<codeline lineno="15128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15130"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_fc_s8_wt_converter(<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>wt_mat_out);</highlight></codeline>
<codeline lineno="15131"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15132"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_fc_s8_wt_converter(<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>wt_mat_out);</highlight></codeline>
<codeline lineno="15133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15135"><highlight class="normal"></highlight></codeline>
<codeline lineno="15146" refid="group__nnfullyconnect_1gad293a3d04091a9e12e517ab0f6199633" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnfullyconnect_1gad293a3d04091a9e12e517ab0f6199633" kindref="member">hpm_nn_fc_s16_wt_converter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="15147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*wt_mat_out)</highlight></codeline>
<codeline lineno="15150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15152"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_fc_s16_wt_converter(<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>wt_mat_out);</highlight></codeline>
<codeline lineno="15153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15154"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_fc_s16_wt_converter(<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>wt_mat_out);</highlight></codeline>
<codeline lineno="15155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15157"><highlight class="normal"></highlight></codeline>
<codeline lineno="15167" refid="group__nnfullyconnect_1ga6e99539191303a876f6679af20140717" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnfullyconnect_1ga6e99539191303a876f6679af20140717" kindref="member">hpm_nn_fc_mat_vec_s8_wt_converter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="15168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,</highlight></codeline>
<codeline lineno="15170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*wt_mat_out)</highlight></codeline>
<codeline lineno="15171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15172"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15173"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_fc_mat_vec_s8_wt_converter(<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>wt_mat_out);</highlight></codeline>
<codeline lineno="15174"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15175"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_fc_mat_vec_s8_wt_converter(<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1gac16d1989d1be934bdcc79bc2609d7b5d" kindref="member">wt_row_num</ref>,<sp/>wt_mat_out);</highlight></codeline>
<codeline lineno="15176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15178"><highlight class="normal"></highlight></codeline>
<codeline lineno="15209" refid="group__nnfullyconnect_1ga71ae5d2dc28459f2b8cad2c6f762bc03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga71ae5d2dc28459f2b8cad2c6f762bc03" kindref="member">hpm_nn_fc_s8_s8_s8_asym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="15210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="15211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_vec_col,</highlight></codeline>
<codeline lineno="15212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>wt_mat_row,</highlight></codeline>
<codeline lineno="15213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_vec_group,</highlight></codeline>
<codeline lineno="15214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="15215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>wt_offset,</highlight></codeline>
<codeline lineno="15216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="15217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_shift,</highlight></codeline>
<codeline lineno="15218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="15219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="15220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="15221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="15222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="15223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="15224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15225"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_asym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/>in_vec_col,<sp/>wt_mat_row,</highlight></codeline>
<codeline lineno="15227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_vec_group,<sp/>in_offset,<sp/>wt_offset,</highlight></codeline>
<codeline lineno="15228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>out_shift,<sp/>out_offset,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="15229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/>act_min,<sp/>act_max,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="15230"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_asym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/>in_vec_col,<sp/>wt_mat_row,</highlight></codeline>
<codeline lineno="15232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_vec_group,<sp/>in_offset,<sp/>wt_offset,</highlight></codeline>
<codeline lineno="15233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>out_shift,<sp/>out_offset,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="15234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/>act_min,<sp/>act_max,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="15235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15237"><highlight class="normal"></highlight></codeline>
<codeline lineno="15245" refid="group__nnfullyconnect_1ga8c0bf58b24a77830b306be989754ff69" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga8c0bf58b24a77830b306be989754ff69" kindref="member">hpm_nn_fc_s8_s8_s8_asym_bias_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_vec_col)</highlight></codeline>
<codeline lineno="15246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_asym_bias_get_buffer_size(in_vec_col);</highlight></codeline>
<codeline lineno="15249"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_asym_bias_get_buffer_size(in_vec_col);</highlight></codeline>
<codeline lineno="15251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15253"><highlight class="normal"></highlight></codeline>
<codeline lineno="15258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15259"><highlight class="normal"></highlight></codeline>
<codeline lineno="15260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_RVP32_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15261"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15262"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_fully_connected.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15263"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15264"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_fully_connected.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15266"><highlight class="normal"></highlight></codeline>
<codeline lineno="15297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga71ae5d2dc28459f2b8cad2c6f762bc03" kindref="member">hpm_nn_fc_s8_s8_s8_asym_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="15298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*<ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,</highlight></codeline>
<codeline lineno="15299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_vec_col,</highlight></codeline>
<codeline lineno="15300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>wt_mat_row,</highlight></codeline>
<codeline lineno="15301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_vec_group,</highlight></codeline>
<codeline lineno="15302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_offset,</highlight></codeline>
<codeline lineno="15303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>wt_offset,</highlight></codeline>
<codeline lineno="15304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_scale,</highlight></codeline>
<codeline lineno="15305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_shift,</highlight></codeline>
<codeline lineno="15306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>out_offset,</highlight></codeline>
<codeline lineno="15307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*<ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="15308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,</highlight></codeline>
<codeline lineno="15309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_min,</highlight></codeline>
<codeline lineno="15310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>act_max,</highlight></codeline>
<codeline lineno="15311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*tmp_buf)</highlight></codeline>
<codeline lineno="15312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15313"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_asym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/>in_vec_col,<sp/>wt_mat_row,</highlight></codeline>
<codeline lineno="15315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_vec_group,<sp/>in_offset,<sp/>wt_offset,</highlight></codeline>
<codeline lineno="15316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>out_shift,<sp/>out_offset,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="15317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/>act_min,<sp/>act_max,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="15318"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_asym_bias(in_vec,<sp/><ref refid="group__nnfullyconnect_1gae152194946e9497e8f4317b4d91aa0ec" kindref="member">wt_mat</ref>,<sp/>in_vec_col,<sp/>wt_mat_row,</highlight></codeline>
<codeline lineno="15320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_vec_group,<sp/>in_offset,<sp/>wt_offset,</highlight></codeline>
<codeline lineno="15321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_scale,<sp/>out_shift,<sp/>out_offset,<sp/><ref refid="group__nnfullyconnect_1ga602e28fc157c370e73e4df5712f9df84" kindref="member">bias</ref>,</highlight></codeline>
<codeline lineno="15322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>,<sp/>act_min,<sp/>act_max,<sp/>tmp_buf);</highlight></codeline>
<codeline lineno="15323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15325"><highlight class="normal"></highlight></codeline>
<codeline lineno="15333"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnfullyconnect_1ga8c0bf58b24a77830b306be989754ff69" kindref="member">hpm_nn_fc_s8_s8_s8_asym_bias_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_vec_col)</highlight></codeline>
<codeline lineno="15334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15335"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_fc_s8_s8_s8_asym_bias_get_buffer_size(in_vec_col);</highlight></codeline>
<codeline lineno="15337"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_fc_s8_s8_s8_asym_bias_get_buffer_size(in_vec_col);</highlight></codeline>
<codeline lineno="15339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15341"><highlight class="normal"></highlight></codeline>
<codeline lineno="15342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_EN_MATH_NN_RVP32_LIB<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15343"><highlight class="normal"></highlight></codeline>
<codeline lineno="15344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15345"><highlight class="normal"></highlight></codeline>
<codeline lineno="15346"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_POOLING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15347"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15348"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15349"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_pooling.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15350"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15351"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_pooling.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15353"><highlight class="normal"></highlight></codeline>
<codeline lineno="15396" refid="group__nnpooling_1gad43e5ccb5728bc0e0b094259dd152082" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnpooling_1gad43e5ccb5728bc0e0b094259dd152082" kindref="member">hpm_nn_avepool_HWC_s8</ref>(q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="15398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="15399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="15400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="15401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="15402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="15403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="15404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor)</highlight></codeline>
<codeline lineno="15405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15406"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15407"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_avepool_HWC_s8(in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_dim,<sp/>pad,</highlight></codeline>
<codeline lineno="15408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15409"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15410"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_avepool_HWC_s8(in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_dim,<sp/>pad,</highlight></codeline>
<codeline lineno="15411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15414"><highlight class="normal"></highlight></codeline>
<codeline lineno="15461" refid="group__nnpooling_1gaf6fedec35524e63e29627562f32f347f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnpooling_1gaf6fedec35524e63e29627562f32f347f" kindref="member">hpm_nn_avepool_HWC_s8_any</ref>(q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="15463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="15464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="15465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="15466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="15467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="15468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="15469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="15470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="15471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="15473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="15474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="15475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_lshift)</highlight></codeline>
<codeline lineno="15476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15477"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15478"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_avepool_HWC_s8_any(</highlight></codeline>
<codeline lineno="15479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="15480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor,<sp/>out_lshift);</highlight></codeline>
<codeline lineno="15482"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15483"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_avepool_HWC_s8_any(</highlight></codeline>
<codeline lineno="15484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor,<sp/>in_tensor_dim_x,<sp/>in_tensor_dim_y,<sp/>in_tensor_ch,<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="15485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ker_dim_y,<sp/>pad_x,<sp/>pad_y,<sp/>stride_x,<sp/>stride_y,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_tensor_dim_y,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor,<sp/>out_lshift);</highlight></codeline>
<codeline lineno="15487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15489"><highlight class="normal"></highlight></codeline>
<codeline lineno="15518" refid="group__nnpooling_1ga3b15c5bc734a4136c74eee7785e3e958" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnpooling_1ga3b15c5bc734a4136c74eee7785e3e958" kindref="member">hpm_nn_avepool_HWC_s8_any_act</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="15519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="15520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="15521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="15523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="15524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="15525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="15526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_y,</highlight></codeline>
<codeline lineno="15527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_x,</highlight></codeline>
<codeline lineno="15528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>act_min,</highlight></codeline>
<codeline lineno="15529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>act_max,</highlight></codeline>
<codeline lineno="15530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="15531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="15533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor)</highlight></codeline>
<codeline lineno="15534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15535"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_avepool_HWC_s8_any_act(</highlight></codeline>
<codeline lineno="15537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_dim_y,<sp/>in_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/>stride_x,<sp/>ker_dim_y,<sp/>ker_dim_x,<sp/>pad_y,<sp/>pad_x,<sp/>act_min,<sp/>act_max,</highlight></codeline>
<codeline lineno="15539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>in_tensor,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15540"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_avepool_HWC_s8_any_act(</highlight></codeline>
<codeline lineno="15542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_dim_y,<sp/>in_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/>stride_x,<sp/>ker_dim_y,<sp/>ker_dim_x,<sp/>pad_y,<sp/>pad_x,<sp/>act_min,<sp/>act_max,</highlight></codeline>
<codeline lineno="15544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>in_tensor,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15545"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15547"><highlight class="normal"></highlight></codeline>
<codeline lineno="15556" refid="group__nnpooling_1gada121e066cbae4b8157f2f05d2bd2445" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnpooling_1gada121e066cbae4b8157f2f05d2bd2445" kindref="member">hpm_nn_avepool_HWC_s8_any_act_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_tensor_dim_x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_tensor_ch)</highlight></codeline>
<codeline lineno="15557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15558"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_avepool_HWC_s8_any_act_get_buffer_size(out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch);</highlight></codeline>
<codeline lineno="15561"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_avepool_HWC_s8_any_act_get_buffer_size(out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch);</highlight></codeline>
<codeline lineno="15564"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15566"><highlight class="normal"></highlight></codeline>
<codeline lineno="15596" refid="group__nnpooling_1ga6ed1130644bb9611b2d8964796858a22" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnpooling_1ga6ed1130644bb9611b2d8964796858a22" kindref="member">hpm_nn_maxpool_HWC_s8</ref>(q7_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim,</highlight></codeline>
<codeline lineno="15598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="15599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim,</highlight></codeline>
<codeline lineno="15600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad,</highlight></codeline>
<codeline lineno="15601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride,</highlight></codeline>
<codeline lineno="15602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim,</highlight></codeline>
<codeline lineno="15603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="15604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*out_tensor)</highlight></codeline>
<codeline lineno="15605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15606"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15607"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_maxpool_HWC_s8(in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_dim,<sp/>pad,</highlight></codeline>
<codeline lineno="15608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15609"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15610"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_maxpool_HWC_s8(in_tensor,<sp/>in_tensor_dim,<sp/>in_tensor_ch,<sp/>ker_dim,<sp/>pad,</highlight></codeline>
<codeline lineno="15611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride,<sp/>out_tensor_dim,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15614"><highlight class="normal"></highlight></codeline>
<codeline lineno="15641" refid="group__nnpooling_1ga8a897ddb16290c428acb826d7c290c2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnpooling_1ga8a897ddb16290c428acb826d7c290c2a" kindref="member">hpm_nn_maxpool_HWC_s8_any_act</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="15642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="15643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="15644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_y,</highlight></codeline>
<codeline lineno="15646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>stride_x,</highlight></codeline>
<codeline lineno="15647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="15648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="15649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_y,</highlight></codeline>
<codeline lineno="15650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pad_x,</highlight></codeline>
<codeline lineno="15651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>act_min,</highlight></codeline>
<codeline lineno="15652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>act_max,</highlight></codeline>
<codeline lineno="15653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="15654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*tmp_buffer,</highlight></codeline>
<codeline lineno="15656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor)</highlight></codeline>
<codeline lineno="15657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15658"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_maxpool_HWC_s8_any_act(</highlight></codeline>
<codeline lineno="15660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_dim_y,<sp/>in_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/>stride_x,<sp/>ker_dim_y,<sp/>ker_dim_x,<sp/>pad_y,<sp/>pad_x,<sp/>act_min,<sp/>act_max,</highlight></codeline>
<codeline lineno="15662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>in_tensor,<sp/>tmp_buffer,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15663"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_maxpool_HWC_s8_any_act(</highlight></codeline>
<codeline lineno="15665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_dim_y,<sp/>in_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/>stride_x,<sp/>ker_dim_y,<sp/>ker_dim_x,<sp/>pad_y,<sp/>pad_x,<sp/>act_min,<sp/>act_max,</highlight></codeline>
<codeline lineno="15667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>in_tensor,<sp/>tmp_buffer,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15668"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15670"><highlight class="normal"></highlight></codeline>
<codeline lineno="15675"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15676"><highlight class="normal"></highlight></codeline>
<codeline lineno="15677"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_RVP32_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15678"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15679"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_pooling.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15680"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15681"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_pooling.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15682"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15683"><highlight class="normal"></highlight></codeline>
<codeline lineno="15712"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnpooling_1ga3b15c5bc734a4136c74eee7785e3e958" kindref="member">hpm_nn_avepool_HWC_s8_any_act</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_tensor_dim_y,</highlight></codeline>
<codeline lineno="15713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_tensor_dim_x,</highlight></codeline>
<codeline lineno="15714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_tensor_dim_y,</highlight></codeline>
<codeline lineno="15715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="15717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="15718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ker_dim_y,</highlight></codeline>
<codeline lineno="15719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ker_dim_x,</highlight></codeline>
<codeline lineno="15720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_y,</highlight></codeline>
<codeline lineno="15721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_x,</highlight></codeline>
<codeline lineno="15722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>act_min,</highlight></codeline>
<codeline lineno="15723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>act_max,</highlight></codeline>
<codeline lineno="15724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_tensor_ch,</highlight></codeline>
<codeline lineno="15725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*<ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,</highlight></codeline>
<codeline lineno="15727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor)</highlight></codeline>
<codeline lineno="15728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15729"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_avepool_HWC_s8_any_act(</highlight></codeline>
<codeline lineno="15731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_dim_y,<sp/>in_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/>stride_x,<sp/>ker_dim_y,<sp/>ker_dim_x,<sp/>pad_y,<sp/>pad_x,<sp/>act_min,<sp/>act_max,</highlight></codeline>
<codeline lineno="15733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>in_tensor,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15734"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_avepool_HWC_s8_any_act(</highlight></codeline>
<codeline lineno="15736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_dim_y,<sp/>in_tensor_dim_x,<sp/>out_tensor_dim_y,<sp/>out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride_y,<sp/>stride_x,<sp/>ker_dim_y,<sp/>ker_dim_x,<sp/>pad_y,<sp/>pad_x,<sp/>act_min,<sp/>act_max,</highlight></codeline>
<codeline lineno="15738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch,<sp/>in_tensor,<sp/><ref refid="group__nnfullyconnect_1ga4972f5e62722e743bc2e14d86e130148" kindref="member">in_tmp_buf</ref>,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15739"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15741"><highlight class="normal"></highlight></codeline>
<codeline lineno="15750"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnpooling_1gada121e066cbae4b8157f2f05d2bd2445" kindref="member">hpm_nn_avepool_HWC_s8_any_act_get_buffer_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_tensor_dim_x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_tensor_ch)</highlight></codeline>
<codeline lineno="15751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15752"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_avepool_HWC_s8_any_act_get_buffer_size(out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch);</highlight></codeline>
<codeline lineno="15755"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_avepool_HWC_s8_any_act_get_buffer_size(out_tensor_dim_x,</highlight></codeline>
<codeline lineno="15757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_tensor_ch);</highlight></codeline>
<codeline lineno="15758"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15760"><highlight class="normal"></highlight></codeline>
<codeline lineno="15761"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15762"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15763"><highlight class="normal"></highlight></codeline>
<codeline lineno="15764"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_SOFTMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15765"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15766"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15767"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_softmax.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15768"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15769"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_softmax.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15771"><highlight class="normal"></highlight></codeline>
<codeline lineno="15796" refid="group__nnsoftmax_1ga8a6ade9f71c2a881445c85a0c998887c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnsoftmax_1ga8a6ade9f71c2a881445c85a0c998887c" kindref="member">hpm_nn_softmax_s8_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="15797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>)</highlight></codeline>
<codeline lineno="15799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15800"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15801"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_softmax_s8_fast(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="15802"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15803"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_softmax_s8_fast(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="15804"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15806"><highlight class="normal"></highlight></codeline>
<codeline lineno="15814" refid="group__nnsoftmax_1gaff3136d670da611c3e107256596efd1b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnsoftmax_1gaff3136d670da611c3e107256596efd1b" kindref="member">hpm_nn_softmax_s16_fast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q15_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="15815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>)</highlight></codeline>
<codeline lineno="15817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15818"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15819"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_softmax_s16_fast(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="15820"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15821"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_softmax_s16_fast(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="15822"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15824"><highlight class="normal"></highlight></codeline>
<codeline lineno="15839" refid="group__nnsoftmax_1ga11ab4f2a71735cfd5348319c00d440ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnsoftmax_1ga11ab4f2a71735cfd5348319c00d440ca" kindref="member">hpm_nn_softmax_s8_hp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_row,</highlight></codeline>
<codeline lineno="15841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_col,</highlight></codeline>
<codeline lineno="15842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="15843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>lshift,</highlight></codeline>
<codeline lineno="15844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>diff_min,</highlight></codeline>
<codeline lineno="15845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor)</highlight></codeline>
<codeline lineno="15846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15847"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15848"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_softmax_s8_hp(in_tensor,<sp/>in_tensor_row,<sp/>in_tensor_col,<sp/>scale,<sp/>lshift,</highlight></codeline>
<codeline lineno="15849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_min,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15850"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15851"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_softmax_s8_hp(in_tensor,<sp/>in_tensor_row,<sp/>in_tensor_col,<sp/>scale,<sp/>lshift,</highlight></codeline>
<codeline lineno="15852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_min,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15853"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15855"><highlight class="normal"></highlight></codeline>
<codeline lineno="15870" refid="group__nnsoftmax_1ga1631ad53a279f4839d39b43cdf563f8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnsoftmax_1ga1631ad53a279f4839d39b43cdf563f8d" kindref="member">hpm_nn_softmax_u8_hp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_row,</highlight></codeline>
<codeline lineno="15872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_col,</highlight></codeline>
<codeline lineno="15873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="15874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>lshift,</highlight></codeline>
<codeline lineno="15875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>diff_min,</highlight></codeline>
<codeline lineno="15876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out_tensor)</highlight></codeline>
<codeline lineno="15877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15878"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15879"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_softmax_u8_hp(in_tensor,<sp/>in_tensor_row,<sp/>in_tensor_col,<sp/>scale,<sp/>lshift,</highlight></codeline>
<codeline lineno="15880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_min,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15881"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15882"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_softmax_u8_hp(in_tensor,<sp/>in_tensor_row,<sp/>in_tensor_col,<sp/>scale,<sp/>lshift,</highlight></codeline>
<codeline lineno="15883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_min,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15884"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15886"><highlight class="normal"></highlight></codeline>
<codeline lineno="15891"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15892"><highlight class="normal"></highlight></codeline>
<codeline lineno="15893"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_RVP32_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15894"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15895"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_softmax.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15896"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15897"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_softmax.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15898"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15899"><highlight class="normal"></highlight></codeline>
<codeline lineno="15914"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnsoftmax_1ga11ab4f2a71735cfd5348319c00d440ca" kindref="member">hpm_nn_softmax_s8_hp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_row,</highlight></codeline>
<codeline lineno="15916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>in_tensor_col,</highlight></codeline>
<codeline lineno="15917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>scale,</highlight></codeline>
<codeline lineno="15918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>lshift,</highlight></codeline>
<codeline lineno="15919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>diff_min,</highlight></codeline>
<codeline lineno="15920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor)</highlight></codeline>
<codeline lineno="15921"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15922"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15923"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_softmax_s8_hp(in_tensor,<sp/>in_tensor_row,<sp/>in_tensor_col,<sp/>scale,<sp/>lshift,</highlight></codeline>
<codeline lineno="15924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_min,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15925"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15926"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_softmax_s8_hp(in_tensor,<sp/>in_tensor_row,<sp/>in_tensor_col,<sp/>scale,<sp/>lshift,</highlight></codeline>
<codeline lineno="15927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_min,<sp/>out_tensor);</highlight></codeline>
<codeline lineno="15928"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15930"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15931"><highlight class="normal"></highlight></codeline>
<codeline lineno="15932"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15933"><highlight class="normal"></highlight></codeline>
<codeline lineno="15934"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_MATH_NN_UTIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15935"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15936"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15937"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15938"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15939"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15940"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15941"><highlight class="normal"></highlight></codeline>
<codeline lineno="15950"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__riscv_zfh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15959"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>hpm_nn_exp_f16(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float16_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="15960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="15961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*<ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>)</highlight></codeline>
<codeline lineno="15962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15963"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_exp_f16(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="15965"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_exp_f16(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/><ref refid="group__nnfullyconnect_1ga358b9ae9b3f85e1072d0938e8463e607" kindref="member">out_vec</ref>);</highlight></codeline>
<codeline lineno="15967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15969"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15970"><highlight class="normal"></highlight></codeline>
<codeline lineno="15987" refid="group__nnutils_1ga69f1c2b964cf2e69f28c8f733eb353e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnutils_1ga69f1c2b964cf2e69f28c8f733eb353e3" kindref="member">hpm_nn_reshape_s8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="15988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="15989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="15990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15991"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15992"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_reshape_s8(in_tensor,<sp/>out_tensor,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="15993"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15994"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_reshape_s8(in_tensor,<sp/>out_tensor,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="15995"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15997"><highlight class="normal"></highlight></codeline>
<codeline lineno="16017" refid="group__nnutils_1ga409fb24d807cba441431ffeb9d5f3869" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__nnutils_1ga409fb24d807cba441431ffeb9d5f3869" kindref="member">hpm_nn_top_k_s8</ref>(q7_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="16018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="16019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>k,</highlight></codeline>
<codeline lineno="16020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q7_t<sp/>*val,</highlight></codeline>
<codeline lineno="16021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*idx)</highlight></codeline>
<codeline lineno="16022"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16023"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_top_k_s8(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>k,<sp/>val,<sp/>idx);</highlight></codeline>
<codeline lineno="16025"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_top_k_s8(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>k,<sp/>val,<sp/>idx);</highlight></codeline>
<codeline lineno="16027"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16029"><highlight class="normal"></highlight></codeline>
<codeline lineno="16030"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__riscv_zfh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16050"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>hpm_nn_top_k_f16(float16_t<sp/>*in_vec,</highlight></codeline>
<codeline lineno="16051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="16052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>k,</highlight></codeline>
<codeline lineno="16053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float16_t<sp/>*val,</highlight></codeline>
<codeline lineno="16054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*idx)</highlight></codeline>
<codeline lineno="16055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16056"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpt_nn_top_k_f16(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>k,<sp/>val,<sp/>idx);</highlight></codeline>
<codeline lineno="16058"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>riscv_nn_top_k_f16(in_vec,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>,<sp/>k,<sp/>val,<sp/>idx);</highlight></codeline>
<codeline lineno="16060"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16062"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16063"><highlight class="normal"></highlight></codeline>
<codeline lineno="16068"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16069"><highlight class="normal"></highlight></codeline>
<codeline lineno="16070"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPM_EN_MATH_NN_RVP32_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16071"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16072"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tpt_nn_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16073"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16074"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_nn_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16075"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16076"><highlight class="normal"></highlight></codeline>
<codeline lineno="16093"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nnutils_1ga69f1c2b964cf2e69f28c8f733eb353e3" kindref="member">hpm_nn_reshape_s8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>*in_tensor,</highlight></codeline>
<codeline lineno="16094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*out_tensor,</highlight></codeline>
<codeline lineno="16095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="16096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16097"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__zcc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16098"><highlight class="normal"><sp/><sp/><sp/><sp/>tpt_nn_reshape_s8(in_tensor,<sp/>out_tensor,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="16099"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16100"><highlight class="normal"><sp/><sp/><sp/><sp/>riscv_nn_reshape_s8(in_tensor,<sp/>out_tensor,<sp/><ref refid="group__nnactivation_1ga1a644b4eb69881039bfc5f6ab842160f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="16101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16103"><highlight class="normal"></highlight></codeline>
<codeline lineno="16104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16105"><highlight class="normal"></highlight></codeline>
<codeline lineno="16110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16111"><highlight class="normal"></highlight></codeline>
<codeline lineno="16112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_math/hpm_math.h"/>
  </compounddef>
</doxygen>
