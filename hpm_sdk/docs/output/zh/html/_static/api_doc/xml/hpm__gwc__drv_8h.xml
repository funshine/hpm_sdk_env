<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__gwc__drv_8h" kind="file" language="C++">
    <compoundname>hpm_gwc_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_soc.h</includes>
    <includes refid="hpm__gwc__regs_8h" local="yes">hpm_gwc_regs.h</includes>
    <includedby refid="hpm__gwc__drv_8c" local="yes">drivers/src/hpm_gwc_drv.c</includedby>
    <incdepgraph>
      <node id="9">
        <label>hpm_gwc_regs.h</label>
        <link refid="hpm__gwc__regs_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_gwc_drv.h</label>
        <link refid="hpm__gwc__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="8">
        <label>hpm_soc.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>drivers/src/hpm_gwc_drv.c</label>
        <link refid="hpm__gwc__drv_8c"/>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_gwc_drv.h</label>
        <link refid="hpm__gwc__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structgwc__ch__config" prot="public">gwc_ch_config</innerclass>
    <innerclass refid="structgwc__config" prot="public">gwc_config</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__gwc__interface_1ga7f15ecf2e18d21552dd9b824c8191229" prot="public" static="no" strong="no">
        <type></type>
        <name>gwc_clk_pol</name>
        <enumvalue id="group__gwc__interface_1gga7f15ecf2e18d21552dd9b824c8191229a19719b0c58b147bb9cd3de11ff6147e9" prot="public">
          <name>gwc_clk_pol_normal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gwc__interface_1gga7f15ecf2e18d21552dd9b824c8191229a75d34f62186fc926b781ec382509da5d" prot="public">
          <name>gwc_clk_pol_invert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>gwc clk polarity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="39" column="1" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="39" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__gwc__interface_1gaa009847576947a2fa247bdf55abe0403" prot="public" static="no">
        <type>struct <ref refid="structgwc__ch__config" kindref="compound">gwc_ch_config</ref></type>
        <definition>typedef struct gwc_ch_config gwc_ch_config_t</definition>
        <argsstring></argsstring>
        <name>gwc_ch_config_t</name>
        <briefdescription>
<para>gwc channel config </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>area of channel do not overlap. in other words, eache pixel belongs to a single channel at most. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="34" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gwc__interface_1ga95486f7e4cd2b6cdfa51b57c8f828a13" prot="public" static="no">
        <type>enum <ref refid="group__gwc__interface_1ga7f15ecf2e18d21552dd9b824c8191229" kindref="member">gwc_clk_pol</ref></type>
        <definition>typedef enum gwc_clk_pol gwc_clk_pol_t</definition>
        <argsstring></argsstring>
        <name>gwc_clk_pol_t</name>
        <briefdescription>
<para>gwc clk polarity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="42" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" prot="public" static="no">
        <type>struct <ref refid="structgwc__config" kindref="compound">gwc_config</ref></type>
        <definition>typedef struct gwc_config gwc_config_t</definition>
        <argsstring></argsstring>
        <name>gwc_config_t</name>
        <briefdescription>
<para>gwc config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="49" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gwc__interface_1ga4cb3ae657db0cf911027977ccb875d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_get_default_config</definition>
        <argsstring>(gwc_config_t *cfg)</argsstring>
        <name>gwc_get_default_config</name>
        <param>
          <type><ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>init the gwc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC config <ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="60" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="11" bodyend="14" declfile="drivers/inc/hpm_gwc_drv.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga49ff1d81c432761c128143ba0d53eecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_init</definition>
        <argsstring>(GWC_Type *ptr, gwc_config_t *cfg)</argsstring>
        <name>gwc_init</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>init the gwc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC config <ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the function is called while gwc is disable only </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="70" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="16" bodyend="19" declfile="drivers/inc/hpm_gwc_drv.h" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1gadd59eb4f7c8c5f899b47e3512d01624d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_enable</definition>
        <argsstring>(GWC_Type *ptr)</argsstring>
        <name>gwc_enable</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable the gwc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="77" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="21" bodyend="24" declfile="drivers/inc/hpm_gwc_drv.h" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga0f5299826216b6930aed2110b19c285d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_disable</definition>
        <argsstring>(GWC_Type *ptr)</argsstring>
        <name>gwc_disable</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable the gwc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="84" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="26" bodyend="29" declfile="drivers/inc/hpm_gwc_drv.h" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga8c04beeb1aac1d1e7981bcf44c665e48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_enable_interrupt</definition>
        <argsstring>(GWC_Type *ptr, uint32_t mask)</argsstring>
        <name>gwc_enable_interrupt</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>enable interrupts </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupt events that would be enabled <ref refid="hpm__gwc__regs_8h_1af5137bb2e1f1cb852a3bfd1b1fb81bd9" kindref="member">GWC_IRQ_MASK_ERR_MASK_MASK</ref> <ref refid="hpm__gwc__regs_8h_1a7f8041ddb5981e239f05123a6b235b7a" kindref="member">GWC_IRQ_MASK_FUNC_MASK_MASK</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="94" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga2f1084ecbb1496b011ea6ac55d4471ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_disable_interrupt</definition>
        <argsstring>(GWC_Type *ptr, uint32_t mask)</argsstring>
        <name>gwc_disable_interrupt</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>disable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask of interrupt events that would be enabled. <ref refid="hpm__gwc__regs_8h_1af5137bb2e1f1cb852a3bfd1b1fb81bd9" kindref="member">GWC_IRQ_MASK_ERR_MASK_MASK</ref> <ref refid="hpm__gwc__regs_8h_1a7f8041ddb5981e239f05123a6b235b7a" kindref="member">GWC_IRQ_MASK_FUNC_MASK_MASK</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="107" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga1bfe9d8f044ecb45c02061f44f04b974" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t gwc_get_status</definition>
        <argsstring>(GWC_Type *ptr)</argsstring>
        <name>gwc_get_status</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get gwc status flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>gwc status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="118" column="24" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga31ba768324a851c1f5f9153dc4dba237" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_clear_status</definition>
        <argsstring>(GWC_Type *ptr, uint32_t mask)</argsstring>
        <name>gwc_clear_status</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>clear gwc status flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>logical OR&apos;ed of GWC_IRQ_STS_XXX_STS_MASK </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="129" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga80fb83e3dae9db0904bdee9ef4516e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_freeze_interrupt_control</definition>
        <argsstring>(GWC_Type *ptr)</argsstring>
        <name>gwc_freeze_interrupt_control</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable change of interrupt masks </para>
        </briefdescription>
        <detaileddescription>
<para>Once this function is called, the interrupt enabled status could not be changed until reset.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="142" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="31" bodyend="34" declfile="drivers/inc/hpm_gwc_drv.h" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1gaecb237bab2b19d150d49acf33abb3d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_ch_init</definition>
        <argsstring>(GWC_Type *ptr, uint8_t ch_index, gwc_ch_config_t *cfg)</argsstring>
        <name>gwc_ch_init</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type><ref refid="group__gwc__interface_1gaa009847576947a2fa247bdf55abe0403" kindref="member">gwc_ch_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>init gwc channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index ref GWC_CHANNEL_CHn </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>config of gwc channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the function is called while gwc channel is disable only </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="153" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="36" bodyend="45" declfile="drivers/inc/hpm_gwc_drv.h" declline="153" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga0fcf1250fd62d087c6876a8587de39c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_ch_enable</definition>
        <argsstring>(GWC_Type *ptr, uint8_t ch_index)</argsstring>
        <name>gwc_ch_enable</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>enable gwc channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index ref GWC_CHANNEL_CHn </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="161" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga82012ad61f72f52fcdd46d9b8249e3ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_ch_disable</definition>
        <argsstring>(GWC_Type *ptr, uint8_t ch_index)</argsstring>
        <name>gwc_ch_disable</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>disable gwc channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index ref GWC_CHANNEL_CHn </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="173" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga54a5b2501cb787563ebef17d9077a88d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t gwc_ch_get_crc</definition>
        <argsstring>(GWC_Type *ptr, uint8_t ch_index)</argsstring>
        <name>gwc_ch_get_crc</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>get gwc channel calc crc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index ref GWC_CHANNEL_CHn </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="185" column="24" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="185" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_GWC_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_GWC_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__gwc__regs_8h" kindref="compound">hpm_gwc_regs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structgwc__ch__config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgwc__ch__config" kindref="compound">gwc_ch_config</ref><sp/>{</highlight></codeline>
<codeline lineno="28" refid="structgwc__ch__config_1aabbe3e8ca460ced7967f8e2ea0e36a10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgwc__ch__config_1aabbe3e8ca460ced7967f8e2ea0e36a10" kindref="member">freeze</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="structgwc__ch__config_1ae5d85b177bcb36758fa03b672f25022c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structgwc__ch__config_1ae5d85b177bcb36758fa03b672f25022c" kindref="member">start_col</ref>;<sp/></highlight></codeline>
<codeline lineno="30" refid="structgwc__ch__config_1a87f1daee2f4fcbec77af64f4cb0b81be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structgwc__ch__config_1a87f1daee2f4fcbec77af64f4cb0b81be" kindref="member">start_row</ref>;<sp/></highlight></codeline>
<codeline lineno="31" refid="structgwc__ch__config_1a5ab5d841044a47a60704cbfbf3610b2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structgwc__ch__config_1a5ab5d841044a47a60704cbfbf3610b2d" kindref="member">end_col</ref>;<sp/></highlight></codeline>
<codeline lineno="32" refid="structgwc__ch__config_1a382b2f43c16378083f2ad04bebd90363" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structgwc__ch__config_1a382b2f43c16378083f2ad04bebd90363" kindref="member">end_row</ref>;<sp/></highlight></codeline>
<codeline lineno="33" refid="structgwc__ch__config_1a4967c7c0d6d97a8229c62594f77db1ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structgwc__ch__config_1a4967c7c0d6d97a8229c62594f77db1ed" kindref="member">ref_crc</ref>;<sp/></highlight></codeline>
<codeline lineno="34" refid="group__gwc__interface_1gaa009847576947a2fa247bdf55abe0403" refkind="member"><highlight class="normal">}<sp/><ref refid="group__gwc__interface_1gaa009847576947a2fa247bdf55abe0403" kindref="member">gwc_ch_config_t</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__gwc__interface_1ga7f15ecf2e18d21552dd9b824c8191229" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga7f15ecf2e18d21552dd9b824c8191229" kindref="member">gwc_clk_pol</ref><sp/>{</highlight></codeline>
<codeline lineno="40" refid="group__gwc__interface_1gga7f15ecf2e18d21552dd9b824c8191229a19719b0c58b147bb9cd3de11ff6147e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gwc__interface_1gga7f15ecf2e18d21552dd9b824c8191229a19719b0c58b147bb9cd3de11ff6147e9" kindref="member">gwc_clk_pol_normal</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gwc__interface_1gga7f15ecf2e18d21552dd9b824c8191229a75d34f62186fc926b781ec382509da5d" kindref="member">gwc_clk_pol_invert</ref></highlight></codeline>
<codeline lineno="42" refid="group__gwc__interface_1gga7f15ecf2e18d21552dd9b824c8191229a75d34f62186fc926b781ec382509da5d" refkind="member"><highlight class="normal">}<sp/><ref refid="group__gwc__interface_1ga95486f7e4cd2b6cdfa51b57c8f828a13" kindref="member">gwc_clk_pol_t</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structgwc__config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgwc__config" kindref="compound">gwc_config</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structgwc__config_1ad05ee8297dfef762d3f5ef1005a63b0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gwc__interface_1ga95486f7e4cd2b6cdfa51b57c8f828a13" kindref="member">gwc_clk_pol_t</ref><sp/><ref refid="structgwc__config_1ad05ee8297dfef762d3f5ef1005a63b0c" kindref="member">clk_pol</ref>;</highlight></codeline>
<codeline lineno="49" refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" refkind="member"><highlight class="normal">}<sp/><ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga4cb3ae657db0cf911027977ccb875d0d" kindref="member">gwc_get_default_config</ref>(<ref refid="structgwc__config" kindref="compound">gwc_config_t</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga49ff1d81c432761c128143ba0d53eecf" kindref="member">gwc_init</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr,<sp/><ref refid="structgwc__config" kindref="compound">gwc_config_t</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1gadd59eb4f7c8c5f899b47e3512d01624d" kindref="member">gwc_enable</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga0f5299826216b6930aed2110b19c285d" kindref="member">gwc_disable</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="group__gwc__interface_1ga8c04beeb1aac1d1e7981bcf44c665e48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga8c04beeb1aac1d1e7981bcf44c665e48" kindref="member">gwc_enable_interrupt</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGWC__Type_1a5ab7db21ac57e21d48f508bbcef07fdf" kindref="member">IRQ_MASK</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="group__gwc__interface_1ga2f1084ecbb1496b011ea6ac55d4471ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga2f1084ecbb1496b011ea6ac55d4471ef" kindref="member">gwc_disable_interrupt</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGWC__Type_1a5ab7db21ac57e21d48f508bbcef07fdf" kindref="member">IRQ_MASK</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="group__gwc__interface_1ga1bfe9d8f044ecb45c02061f44f04b974" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__gwc__interface_1ga1bfe9d8f044ecb45c02061f44f04b974" kindref="member">gwc_get_status</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structGWC__Type_1adc23eef0fd12af73d52ba18baec62e42" kindref="member">IRQ_STS</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="group__gwc__interface_1ga31ba768324a851c1f5f9153dc4dba237" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga31ba768324a851c1f5f9153dc4dba237" kindref="member">gwc_clear_status</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGWC__Type_1adc23eef0fd12af73d52ba18baec62e42" kindref="member">IRQ_STS</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga80fb83e3dae9db0904bdee9ef4516e50" kindref="member">gwc_freeze_interrupt_control</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1gaecb237bab2b19d150d49acf33abb3d68" kindref="member">gwc_ch_init</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ch_index,<sp/><ref refid="structgwc__ch__config" kindref="compound">gwc_ch_config_t</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group__gwc__interface_1ga0fcf1250fd62d087c6876a8587de39c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga0fcf1250fd62d087c6876a8587de39c8" kindref="member">gwc_ch_enable</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ch_index)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ch_index<sp/>&lt;=<sp/><ref refid="hpm__gwc__regs_8h_1abcf9bd2ff65fb809882a7d445fa40537" kindref="member">GWC_CHANNEL_CH15</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGWC__Type_1a0cf783842e366b977220d63af6f99d88" kindref="member">CHANNEL</ref>[ch_index].<ref refid="structGWC__Type_1a7673a782a67bc8f35cc5107f77ea2890" kindref="member">CFG0</ref><sp/>|=<sp/><ref refid="hpm__gwc__regs_8h_1a1782d9276db1669a60988c2b7972a501" kindref="member">GWC_CHANNEL_CFG0_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="group__gwc__interface_1ga82012ad61f72f52fcdd46d9b8249e3ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gwc__interface_1ga82012ad61f72f52fcdd46d9b8249e3ff" kindref="member">gwc_ch_disable</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ch_index)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ch_index<sp/>&lt;=<sp/><ref refid="hpm__gwc__regs_8h_1abcf9bd2ff65fb809882a7d445fa40537" kindref="member">GWC_CHANNEL_CH15</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGWC__Type_1a0cf783842e366b977220d63af6f99d88" kindref="member">CHANNEL</ref>[ch_index].<ref refid="structGWC__Type_1a7673a782a67bc8f35cc5107f77ea2890" kindref="member">CFG0</ref><sp/>&amp;=<sp/>~<ref refid="hpm__gwc__regs_8h_1a1782d9276db1669a60988c2b7972a501" kindref="member">GWC_CHANNEL_CFG0_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__gwc__interface_1ga54a5b2501cb787563ebef17d9077a88d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__gwc__interface_1ga54a5b2501cb787563ebef17d9077a88d" kindref="member">gwc_ch_get_crc</ref>(<ref refid="structGWC__Type" kindref="compound">GWC_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ch_index)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ch_index<sp/>&lt;=<sp/><ref refid="hpm__gwc__regs_8h_1abcf9bd2ff65fb809882a7d445fa40537" kindref="member">GWC_CHANNEL_CH15</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structGWC__Type_1a0cf783842e366b977220d63af6f99d88" kindref="member">CHANNEL</ref>[ch_index].<ref refid="structGWC__Type_1a5450c1ea99f4a9f01061882a688c399a" kindref="member">CALCRC</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_GWC_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_gwc_drv.h"/>
  </compounddef>
</doxygen>
