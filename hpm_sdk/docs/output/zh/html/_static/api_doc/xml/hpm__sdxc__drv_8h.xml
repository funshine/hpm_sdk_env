<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__sdxc__drv_8h" kind="file" language="C++">
    <compoundname>hpm_sdxc_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_sdxc_regs.h</includes>
    <includes local="yes">hpm_sdxc_soc_drv.h</includes>
    <includedby refid="hpm__sdxc__drv_8c" local="yes">drivers/src/hpm_sdxc_drv.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>hpm_sdxc_regs.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_sdxc_drv.h</label>
        <link refid="hpm__sdxc__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>hpm_sdxc_soc_drv.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>drivers/inc/hpm_sdxc_drv.h</label>
        <link refid="hpm__sdxc__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drivers/src/hpm_sdxc_drv.c</label>
        <link refid="hpm__sdxc__drv_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structsdxc__capabilities__t" prot="public">sdxc_capabilities_t</innerclass>
    <innerclass refid="structsdxc__xfer__callback__t" prot="public">sdxc_xfer_callback_t</innerclass>
    <innerclass refid="structsdxc__handle__t" prot="public">sdxc_handle_t</innerclass>
    <innerclass refid="structsdxc__host__t" prot="public">sdxc_host_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__sdxc__interface_1ga006b38b2434ce421355378bf83e10d4a" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_1V8</name>
        <initializer>(1UL &lt;&lt; 0)</initializer>
        <briefdescription>
<para>Generic Definitions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>: If the Host support 1.8V, it means:<orderedlist>
<listitem><para>For SD card, it supports:<itemizedlist>
<listitem><para>SDR12</para>
</listitem><listitem><para>SDR25</para>
</listitem><listitem><para>SDR50</para>
</listitem><listitem><para>SDR104</para>
</listitem><listitem><para>DDR50</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>For eMMC, it supports:<itemizedlist>
<listitem><para>DDR50</para>
</listitem><listitem><para>HS200</para>
</listitem><listitem><para>HS400 (if 8-bit is supported as well) SDXC Host support 1.8v </para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="39" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gad7c14a95dd77b6bf6acb873b4d8b2a55" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_4BIT</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support 4bit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="40" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga20335b1697b81181a8d81239eb22ae4a" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_8BIT</name>
        <initializer>(1UL &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support 8bit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="41" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf650710ac363e246304710aec5566a87" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_EMMC</name>
        <initializer>(1UL &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support EMMC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="42" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_CD</name>
        <initializer>(1UL &lt;&lt; 16)</initializer>
        <briefdescription>
<para>SDXC Pin features. </para>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Card detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="47" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3bea319a46960b07d4f7418318cef35f" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_VSEL</name>
        <initializer>(1UL &lt;&lt; 17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Voltage Selection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="48" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_PWR</name>
        <initializer>(1UL &lt;&lt; 18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Power Switch </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="49" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_WP</name>
        <initializer>(1UL &lt;&lt; 19)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Write Protection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="50" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga30ab51d728b67f9e3bca6ed67c83f7f6" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_RST</name>
        <initializer>(1UL &lt;&lt; 20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Reset Pin </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="51" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga120e6e6d06cf4f3c7367b459c2633702" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_DS</name>
        <initializer>(1UL &lt;&lt; 21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Data Strobe </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="52" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaac2935f5fcc64b462d72e7e3f8a3f688" prot="public" static="no">
        <name>SDXC_HOST_CD_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" kindref="member">SDXC_HOST_SUPPORT_CD</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
<para>SDXC Pin is native or from GPIO. </para>
        </briefdescription>
        <detaileddescription>
<para>Card detection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="57" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1c5cabf98880472496c811380ab59bab" prot="public" static="no">
        <name>SDXC_HOST_VSEL_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga3bea319a46960b07d4f7418318cef35f" kindref="member">SDXC_HOST_SUPPORT_VSEL</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voltage selection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="58" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac106c1376ca161529911999810426072" prot="public" static="no">
        <name>SDXC_HOST_PWR_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" kindref="member">SDXC_HOST_SUPPORT_PWR</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power switch is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="59" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0e7a8d79a42703adb78c0f00d139ace8" prot="public" static="no">
        <name>SDXC_HOST_WP_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" kindref="member">SDXC_HOST_SUPPORT_WP</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write protection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="60" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga8103583416d13e6f5391abb139724f8b" prot="public" static="no">
        <name>SDXC_HOST_RST_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga30ab51d728b67f9e3bca6ed67c83f7f6" kindref="member">SDXC_HOST_SUPPORT_RST</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset Pin is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="61" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gad7329858e7a9e804ca805dc32b3158ba" prot="public" static="no">
        <name>SDXC_HOST_VSEL_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" kindref="member">SDXC_HOST_SUPPORT_CD</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
<para>SDXC GPIO pin polarity If polarity is 0, it means: GPIO level 0 means disabled, 1 means enabled If polarity is 1, it meansL: GPIO level 0 means enabled, 1 means disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="70" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafb190f447137d842504d5a8c379f4c17" prot="public" static="no">
        <name>SDXC_HOST_CD_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga1c5cabf98880472496c811380ab59bab" kindref="member">SDXC_HOST_VSEL_IN_IP</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="71" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga6fd53657d00937708246cf3955de44c0" prot="public" static="no">
        <name>SDXC_HOST_PWR_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" kindref="member">SDXC_HOST_SUPPORT_PWR</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="72" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0c5545567839318577cea1c4a478c101" prot="public" static="no">
        <name>SDXC_HOST_WP_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" kindref="member">SDXC_HOST_SUPPORT_WP</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="73" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5a9136b6c722657e0e9415f6d4119170" prot="public" static="no">
        <name>SDXC_HOST_RST_IN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga120e6e6d06cf4f3c7367b459c2633702" kindref="member">SDXC_HOST_SUPPORT_DS</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="74" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga6d9acf45eb1d5ee4b809304ce521dc8a" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_NO_RESP</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>Command Response Type Selection. </para>
        </briefdescription>
        <detaileddescription>
<para>No Response </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="79" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga7a68f63f56a45a423dd3627a305502bc" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_136</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 136 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="80" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf40b0ff4605bae4c0f81c91312a64996" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_48</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 48 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="81" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga87fd5eef5eeb051a068cb273f6d013ed" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_48B</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 48; Check busy after response </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="82" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" prot="public" static="no">
        <name>SDXC_STS_CMD_ERR</name>
        <initializer>            (<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1af759e6193b3a5704a8dcfd65095656e5" kindref="member">SDXC_INT_STAT_CMD_TOUT_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a29db956b5dbf778ceb8f6f65ad6b429c" kindref="member">SDXC_INT_STAT_CMD_CRC_ERR_MASK</ref> |\
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1abde39b95c6e6f8308ffebb4f0c199573" kindref="member">SDXC_INT_STAT_CMD_END_BIT_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1afc95e3571b909b6e3858b7ad66de814e" kindref="member">SDXC_INT_STAT_CMD_IDX_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ab235191ad795f045025ffabc7a7e7847" kindref="member">SDXC_INT_STAT_AUTO_CMD_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="85" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf25560ebeea21fc82ead7277826653bc" prot="public" static="no">
        <name>SDXC_STS_DATA_ERR</name>
        <initializer>            (<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a2eed2875d5c81559ee018c5d4ea6858b" kindref="member">SDXC_INT_STAT_DATA_TOUT_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a46a49175b5f1eccdd8364c1f420f7c0a" kindref="member">SDXC_INT_STAT_DATA_CRC_ERR_MASK</ref> | \
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ae353c1f5e99dc167c8f204668bfec8d4" kindref="member">SDXC_INT_STAT_DATA_END_BIT_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="87" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3d1ecfbb9e6e8295c08e2dd36cef4fdd" prot="public" static="no">
        <name>SDXC_STS_CARD_ERR</name>
        <initializer>(<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a094b4d815982b6e5118dc7f77c8e02eb" kindref="member">SDXC_INT_STAT_CARD_REMOVAL_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="89" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gadec3ce578445887ea4db534983a02c19" prot="public" static="no">
        <name>SDXC_STS_ERROR</name>
        <initializer>(<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ae14eddddff2c0b9089d113dc49373330" kindref="member">SDXC_INT_STAT_ERR_INTERRUPT_MASK</ref> | <ref refid="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" kindref="member">SDXC_STS_CMD_ERR</ref> | <ref refid="group__sdxc__interface_1gaf25560ebeea21fc82ead7277826653bc" kindref="member">SDXC_STS_DATA_ERR</ref> | <ref refid="group__sdxc__interface_1ga3d1ecfbb9e6e8295c08e2dd36cef4fdd" kindref="member">SDXC_STS_CARD_ERR</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="90" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0b409a1003769ad28ebb04d117e49e9d" prot="public" static="no">
        <name>SDXC_STS_CMD_FLAGS</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" kindref="member">SDXC_STS_CMD_ERR</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a86f4809b08406fa29e93ba604844625a" kindref="member">SDXC_INT_STAT_CMD_COMPLETE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="91" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gab059dd8331b722cdb50a215527a99288" prot="public" static="no">
        <name>SDXC_STS_ALL_FLAGS</name>
        <initializer>            (<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ae14eddddff2c0b9089d113dc49373330" kindref="member">SDXC_INT_STAT_ERR_INTERRUPT_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1aad46a06ffce19aaa84e795ec79743dc8" kindref="member">SDXC_INT_STAT_CQE_EVENT_MASK</ref> | \
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a7067c53a61002838d3a9587017b6310d" kindref="member">SDXC_INT_STAT_FX_EVENT_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a1e260471133904ae3ac8c886ed7168a1" kindref="member">SDXC_INT_STAT_RE_TUNE_EVENT_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1abd5b34a64c92b7c535d16d8eb65999af" kindref="member">SDXC_INT_STAT_CARD_INTERRUPT_MASK</ref> | \
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a094b4d815982b6e5118dc7f77c8e02eb" kindref="member">SDXC_INT_STAT_CARD_REMOVAL_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ae7bb0b2bdeece792f4b00583feb32c2a" kindref="member">SDXC_INT_STAT_CARD_INSERTION_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ae9a9bba65ad61701d18330a4062f5f2d" kindref="member">SDXC_INT_STAT_BUF_RD_READY_MASK</ref> | \
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a4af3aed338adc11e4eb170df95c8afef" kindref="member">SDXC_INT_STAT_BUF_WR_READY_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1abd29fba0e4752221ce06e5c50b5380b1" kindref="member">SDXC_INT_STAT_DMA_INTERRUPT_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a6a270132e8a546da1071a290aee6e729" kindref="member">SDXC_INT_STAT_BGAP_EVENT_MASK</ref> | \
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1abc38bd15f6a07660c7434b916ac26aba" kindref="member">SDXC_INT_STAT_XFER_COMPLETE_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a86f4809b08406fa29e93ba604844625a" kindref="member">SDXC_INT_STAT_CMD_COMPLETE_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a4117cdfb077297e964622dcff8ccc3b8" kindref="member">SDXC_INT_STAT_BOOT_ACK_ERR_MASK</ref> |  \
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a74b80d2e801b08c4776c7316b6ee4362" kindref="member">SDXC_INT_STAT_RESP_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a6a4d4c6b5f1941db1e1b3335ef055e52" kindref="member">SDXC_INT_STAT_TUNING_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a03041abb73166580a23176b26ec416ca" kindref="member">SDXC_INT_STAT_ADMA_ERR_MASK</ref> |   \
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ab235191ad795f045025ffabc7a7e7847" kindref="member">SDXC_INT_STAT_AUTO_CMD_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ab06912c3ab32bb5f6627b03bdcfcda25" kindref="member">SDXC_INT_STAT_CUR_LMT_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ae353c1f5e99dc167c8f204668bfec8d4" kindref="member">SDXC_INT_STAT_DATA_END_BIT_ERR_MASK</ref> |\
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a46a49175b5f1eccdd8364c1f420f7c0a" kindref="member">SDXC_INT_STAT_DATA_CRC_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a2eed2875d5c81559ee018c5d4ea6858b" kindref="member">SDXC_INT_STAT_DATA_TOUT_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1afc95e3571b909b6e3858b7ad66de814e" kindref="member">SDXC_INT_STAT_CMD_IDX_ERR_MASK</ref> |\
            <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1abde39b95c6e6f8308ffebb4f0c199573" kindref="member">SDXC_INT_STAT_CMD_END_BIT_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a29db956b5dbf778ceb8f6f65ad6b429c" kindref="member">SDXC_INT_STAT_CMD_CRC_ERR_MASK</ref> | <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1af759e6193b3a5704a8dcfd65095656e5" kindref="member">SDXC_INT_STAT_CMD_TOUT_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="93" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga4efada8c8222039e8f2044fd672296a4" prot="public" static="no">
        <name>SDXC_CMD_TYPE_NORMAL</name>
        <initializer>(0UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
<para>Command Type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="205" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1b9942bb3b52a563a5831c3a75edff66" prot="public" static="no">
        <name>SDXC_CMD_TYPE_SUSPEND</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="206" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5e477711a76882f6ef5bff57a7fc858b" prot="public" static="no">
        <name>SDXC_CMD_TYPE_RESUME</name>
        <initializer>(2UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="207" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga21af6614c131e19e74a0e678eaed3d75" prot="public" static="no">
        <name>SDXC_CMD_TYPE_ABORT</name>
        <initializer>(3UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="208" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga64d02f62564b5fa6fba4c65bc5e70401" prot="public" static="no">
        <name>SDXC_CMD_RESP_NO_RESPONSE</name>
        <initializer>(0UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="228" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga56bdcf83e8c7aaf668abac399c7d3a47" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_136</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="229" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gada92f05c73de87d517a4fe7c7bb83ff5" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_48</name>
        <initializer>(2UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="230" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gae246187d7d4173f1ccab65ef86729ea9" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_48B</name>
        <initializer>(3UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="231" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga14e5870194b62fad53c4dce75306b8bb" prot="public" static="no">
        <name>SDXC_CMD_CMD_IS_MAIN_CMD</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="233" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga991e88691462743d1ce6d69eb955ae9b" prot="public" static="no">
        <name>SDXC_CMD_CMD_IS_SUB_CMD</name>
        <initializer>(<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1aa38fa76e2c08f9edd887c4f11181ec8d" kindref="member">SDXC_CMD_XFER_SUB_CMD_FLAG_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="234" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga931a51100df4fcc10de6e033b74cf66b" prot="public" static="no">
        <name>SDXC_CMD_CMD_CRC_CHK_EN</name>
        <initializer>(<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1aacd7d756bb56ae648a23591209d816bf" kindref="member">SDXC_CMD_XFER_CMD_CRC_CHK_ENABLE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="236" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacd081c049f84762e644d9b1594243064" prot="public" static="no">
        <name>SDXC_CMD_CMD_CRC_CHK_DIS</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="237" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga9584623075b1db44def7e6a7e7b67440" prot="public" static="no">
        <name>SDXC_CMD_CMD_IDX_CHK_EN</name>
        <initializer>(<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1ad961e15d8931ae4f7e73ab7b0f84b132" kindref="member">SDXC_CMD_XFER_CMD_IDX_CHK_ENABLE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="239" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga81d2b7235cc57723b0c3b3a418f78f8f" prot="public" static="no">
        <name>SDXC_CMD_CMD_IDX_CHK_DIS</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="240" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafbc52a6bc518d8dde79a28a65ce22e29" prot="public" static="no">
        <name>SDXC_CMD_DATA_PRESENT</name>
        <initializer>(<ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a457a728c0d09629d913f3f45df746b58" kindref="member">SDXC_CMD_XFER_DATA_PRESENT_SEL_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="242" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaefb2cbea8db6714781802020d7b49cab" prot="public" static="no">
        <name>SDXC_CMD_DATA_NO_PRESENT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="243" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaa1e70e684b9fa1a3251081b5e5b06a87" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_NORMAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="245" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacd2f50334b995ac0f0b82e5e791d964b" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_SUSPEND</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="246" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga34d636f06665bd558a8ce5bdcd05b2de" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_RESUME</name>
        <initializer>(2U &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="247" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf71c3a04f5d222dcfe44473ff5faf87a" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_ABORT</name>
        <initializer>(3U &lt;&lt; <ref refid="HPM6800_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="248" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga2a8d7b0f163fa13e3f3f01381f924b81" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_VALID_FLAG</name>
        <initializer>(1UL &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="473" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga38ee4cea133045eb496ed1fa16a0c885" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_END_FLAG</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="474" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga09a08fdbc357e9c902e70c363028cd8e" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_INTERRUPT_FLAG</name>
        <initializer>(1UL &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="475" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1f0809860a826aa3be10b2101ba3aa7b" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT0_FLAG</name>
        <initializer>(1UL &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="476" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac6fadd687de744297397f0d475bb2cda" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT1_FLAG</name>
        <initializer>(1UL &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="477" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga638615101471c0cbe1d094d8c5e5e53b" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT2_FLAG</name>
        <initializer>(1UL &lt;&lt; 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="478" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafcd87a47ab359ae2bfbfcbe1d836eb26" prot="public" static="no">
        <name>SDXC_ADMA2_ADDR_LEN</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="480" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga67c183f4215f7c98f0498365c454d19b" prot="public" static="no">
        <name>SDXC_ADMA2_LEN_ALIGN</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="481" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3a88bd55f11c72a61bf8d4f358815245" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_NOP</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="483" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaba1b34f20140319b0524b61718e64533" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_TRANS</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="484" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga81dc0a42b65e90019306bda00a702268" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_LINK</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="485" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacf79311a57db9034c266c0aed82408c7" prot="public" static="no">
        <name>SDXC_ADMA3_DESC_TYPE_FOR_SD_MODE</name>
        <initializer>(0x1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="486" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5f4abb15cc243673fcd064053fbd0517" prot="public" static="no">
        <name>SDXC_AMDA3_DESC_TYPE_INTEGRATED_LINKER</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="487" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0d84d27f4539a473744cceb256a7ab16" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_FOR_SD_DESC_ATTR</name>
        <initializer>(0x09U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="489" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga475a115f9a3b06d7dd2a7a25898354e6" prot="public" static="no">
        <name>SDXC_ADMA3_INTEGRATED_DESC_ATTR</name>
        <initializer>(0x39U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="490" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac9154c04122dc30ced6975e522efec4f" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_32BIT_BLK_CNT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="492" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0fd2a10aaf6e9886daebf890350afea8" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_BLK_SIZE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="493" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gabfcedd6e8401f08fc105d7ffcde83417" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_ARG</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="494" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga7a316ceba92d4dbf063fe305bed61164" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_CMD_XFER</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="495" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__sdxc__interface_1ga6d8d14defa336cd0180dccd1e0170dd5" prot="public" static="no" strong="no">
        <type></type>
        <name>@230</name>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a0d3ed7978bcf00ac97000a033e24737c" prot="public">
          <name>status_sdxc_busy</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 0 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC is busy </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a90a101d6f4c68eba057f5e7dfddff13e" prot="public">
          <name>status_sdxc_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 1 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a5d9ed478629b49bd06b978e7841de0c8" prot="public">
          <name>status_sdxc_send_cmd_failed</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 2 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ab2a9c2fa4c7ae0234e1ea374dd99bbfe" prot="public">
          <name>status_sdxc_cmd_timeout_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 3 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command timed out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ab8d9155beb3e069555bd203e9d485045" prot="public">
          <name>status_sdxc_cmd_crc_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 4 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command CRC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aadbaf10ea7030dd7b044f56c34bc01f0" prot="public">
          <name>status_sdxc_cmd_end_bit_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 5 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8ffa3c3732649bc348f81b96b05e9260" prot="public">
          <name>status_sdxc_cmd_index_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 6 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command index error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a1a7bebe571cca56a17cd01e8e2764b09" prot="public">
          <name>status_sdxc_data_timeout_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 7 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data timeout error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a58e1427f43d8e630168b698a2e64cadc" prot="public">
          <name>status_sdxc_data_crc_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 8 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data CRC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a7fef9211d246f475e32944a8185d99f3" prot="public">
          <name>status_sdxc_data_end_bit_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 9 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ad7400f529550c82c85ad43a0b107abb8" prot="public">
          <name>status_sdxc_auto_cmd_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 10 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC auto command error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a4191c30d551d9bd5f5ffcad8c4783c13" prot="public">
          <name>status_sdxc_adma_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 11 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC ADMA error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a58b51de0f2d44a61b0abbfc6188104e0" prot="public">
          <name>status_sdxc_tuning_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 12 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC tuning error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a4ba77233f0090055390d7c9b75985d0b" prot="public">
          <name>status_sdxc_response_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 13 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC response error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aca505cb4baae0011c885cab106a414dc" prot="public">
          <name>status_sdxc_boot_ack_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 14 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC boot ack error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a6d045106d67a8803bcf2825126a47cfe" prot="public">
          <name>status_sdxc_retuning_request</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 15 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC retuning request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8d6c70d2367c09cf71e8841034732bb8" prot="public">
          <name>status_sdxc_autocmd_cmd12_not_exec</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 16 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a630138954e3b1a47749401fabd1b0089" prot="public">
          <name>status_sdxc_autocmd_cmd_timeout_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 17 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD timed out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a795dbdfae54266142c777b6cd9f31afc" prot="public">
          <name>status_sdxc_autocmd_cmd_crc_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 18 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD crc error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a293bc0f5d4a80d6b26ae6a62b1185cc1" prot="public">
          <name>status_sdxc_autocmd_end_bit_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 19 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a04d86e8b11e32a689d30bcebb4f53f62" prot="public">
          <name>status_sdxc_autocmd_cmd_index_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 20 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD index error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a7eb07985533706de43d29ada59565fed" prot="public">
          <name>status_sdxc_autocmd_cmd_response_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 21 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD response error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a6fd382dc4ad27dd293653a4ddf2cc140" prot="public">
          <name>status_sdxc_autocmd_cmd_not_issued_auto_cmd12</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 22 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC unsupported operation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a922e482934f1906dce3bd5341bf1c0b4" prot="public">
          <name>status_sdxc_unsupported</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 23 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a21a5057961c4408e63e3f485fc3eebee" prot="public">
          <name>status_sdxc_transfer_data_completed</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 24 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer data completed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a33c64d4046bd3ef323a83ed45a9059d1" prot="public">
          <name>status_sdxc_send_cmd_successful</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 25 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC send command succeeded </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a962556472b7895e218f4cc47ea13ba9b" prot="public">
          <name>status_sdxc_transfer_dma_completed</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 26 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer DMA completed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a95bf0c3245ac266184cffa6a737ca4d8" prot="public">
          <name>status_sdxc_transfer_data_failed</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 27 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer data failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8e4badb0ef283026627654bb5cc74047" prot="public">
          <name>status_sdxc_dma_addr_unaligned</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 28 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC DMA address unaligned </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aba4a732221da48321d3372d0f5bd4830" prot="public">
          <name>status_sdxc_tuning_failed</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 29 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC tuning failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a47c025118075e92dbe27bc668b3a3ab3" prot="public">
          <name>status_sdxc_card_removed</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 30 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Card removed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a2d394f15d7e0b451a401ba24c07bd514" prot="public">
          <name>status_sdxc_non_recoverable_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 30 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC non-recoverable error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8ba3bc94de999f14ac9a2b806ac21ca9" prot="public">
          <name>status_sdxc_recoverable_error</name>
          <initializer>= ((uint32_t)( status_group_sdxc )*1000U + (uint32_t)( 31 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC recoverable error </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SDXC error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="253" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="253" bodyend="290"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdxc__interface_1ga48b7364b5ceec8a2d131dc2cf2587628" prot="public" static="no" strong="no">
        <type></type>
        <name>@231</name>
        <enumvalue id="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628aee467041660608bc02e9cdd601be9bf2" prot="public">
          <name>sdxc_xfer_data_normal</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer normal read/write data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628ab8387c9c070610e53f7e18ed8248e541" prot="public">
          <name>sdxc_xfer_data_boot</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer boot data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628a5a4b9f0510d3398611f785a3bfe8fc9f" prot="public">
          <name>sdxc_xfer_data_boot_continuous</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer boot data continuously </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SDXC transfer data type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="420" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="420" bodyend="424"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdxc__interface_1gaafc5993fe6fd7fec62e94ef57859c353" prot="public" static="no" strong="no">
        <type></type>
        <name>@232</name>
        <enumvalue id="group__sdxc__interface_1ggaafc5993fe6fd7fec62e94ef57859c353a89e9d880ccd9f305c773af3e38926301" prot="public">
          <name>sdxc_adma_desc_single_flag</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1ggaafc5993fe6fd7fec62e94ef57859c353a803b0b7d09e2149f4e9b58c338959f36" prot="public">
          <name>sdxc_adma_desc_multi_flag</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="443" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="443" bodyend="446"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" prot="public" static="no">
        <type>enum _sdxc_software_reset</type>
        <definition>typedef enum _sdxc_software_reset sdxc_sw_reset_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_sw_reset_type_t</name>
        <briefdescription>
<para>Software reset flag definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="111" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" prot="public" static="no">
        <type>enum _sdxc_bus_voltage_option</type>
        <definition>typedef enum _sdxc_bus_voltage_option sdxc_bus_voltage_option_t</definition>
        <argsstring></argsstring>
        <name>sdxc_bus_voltage_option_t</name>
        <briefdescription>
<para>SDXC Bus voltage options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="121" column="27"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" prot="public" static="no">
        <type>enum _sdxc_wakeup_event</type>
        <definition>typedef enum _sdxc_wakeup_event sdxc_wakeup_event_t</definition>
        <argsstring></argsstring>
        <name>sdxc_wakeup_event_t</name>
        <briefdescription>
<para>SDXC wakeup events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="130" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga3523112a8d468ca2333d5299b420bd70" prot="public" static="no">
        <type>enum _sdxc_dma_type</type>
        <definition>typedef enum _sdxc_dma_type sdxc_dma_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_dma_type_t</name>
        <briefdescription>
<para>SDXC DMA types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="140" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" prot="public" static="no">
        <type>enum _sdxc_bus_width</type>
        <definition>typedef enum _sdxc_bus_width sdxc_bus_width_t</definition>
        <argsstring></argsstring>
        <name>sdxc_bus_width_t</name>
        <briefdescription>
<para>SDXC Bus width options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="149" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" prot="public" static="no">
        <type>enum _sdxc_speed_mode</type>
        <definition>typedef enum _sdxc_speed_mode sdxc_speed_mode_t</definition>
        <argsstring></argsstring>
        <name>sdxc_speed_mode_t</name>
        <briefdescription>
<para>SDXC Speed mode options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="171" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga1e05f721758271a748c54c7f78408af5" prot="public" static="no">
        <type>enum _sdxc_auto_cmd_sel</type>
        <definition>typedef enum _sdxc_auto_cmd_sel sdxc_auto_cmd_sel_t</definition>
        <argsstring></argsstring>
        <name>sdxc_auto_cmd_sel_t</name>
        <briefdescription>
<para>SDXC auto command types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="181" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" prot="public" static="no">
        <type>enum _sdxc_xfer_direction</type>
        <definition>typedef enum _sdxc_xfer_direction sdxc_xfer_direction_t</definition>
        <argsstring></argsstring>
        <name>sdxc_xfer_direction_t</name>
        <briefdescription>
<para>SDXC transfer direction options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="189" column="23"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga1543c014abbb97dc5e873dbef7092297" prot="public" static="no">
        <type>enum _sdxc_command_type</type>
        <definition>typedef enum _sdxc_command_type sdxc_command_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_command_type_t</name>
        <briefdescription>
<para>SDXC Command types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="200" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gad7dfc4c7d2c345d659ce3a1db254f7e5" prot="public" static="no">
        <type>enum _sdxc_boot_mode</type>
        <definition>typedef enum _sdxc_boot_mode sdxc_boot_mode_t</definition>
        <argsstring></argsstring>
        <name>sdxc_boot_mode_t</name>
        <briefdescription>
<para>SDXC boot mode types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="216" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf6b1d2191e32aab10f798ed7fcbd7002" prot="public" static="no">
        <type>enum _sdxc_response_type</type>
        <definition>typedef enum _sdxc_response_type sdxc_response_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_response_type_t</name>
        <briefdescription>
<para>SDXC response types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="226" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gace11ac40e88550ca7b89d30584247543" prot="public" static="no">
        <type>enum _sdxc_dev_resp_type</type>
        <definition>typedef enum _sdxc_dev_resp_type sdxc_dev_resp_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_dev_resp_type_t</name>
        <briefdescription>
<para>SDXC Device response type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="377" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" prot="public" static="no">
        <type>struct _sdxc_command</type>
        <definition>typedef struct _sdxc_command sdxc_command_t</definition>
        <argsstring></argsstring>
        <name>sdxc_command_t</name>
        <briefdescription>
<para>SDXC command structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="392" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaa724f349a37ce2a3e63b1f73a6ef19f0" prot="public" static="no">
        <type>struct _sdxc_data_list</type>
        <definition>typedef struct _sdxc_data_list sdxc_data_list_t</definition>
        <argsstring></argsstring>
        <name>sdxc_data_list_t</name>
        <briefdescription>
<para>SDXC data list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="401" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" prot="public" static="no">
        <type>struct _sdxc_data</type>
        <definition>typedef struct _sdxc_data sdxc_data_t</definition>
        <argsstring></argsstring>
        <name>sdxc_data_t</name>
        <briefdescription>
<para>SDXC data structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="415" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" prot="public" static="no">
        <type>struct _sdxc_xfer</type>
        <definition>typedef struct _sdxc_xfer sdxc_xfer_t</definition>
        <argsstring></argsstring>
        <name>sdxc_xfer_t</name>
        <briefdescription>
<para>SDXC transfer context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="432" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" prot="public" static="no">
        <type>struct _sdxc_adma_config</type>
        <definition>typedef struct _sdxc_adma_config sdxc_adma_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma_config_t</name>
        <briefdescription>
<para>SDXC ADMA configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="441" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" prot="public" static="no">
        <type>struct _sdxc_config</type>
        <definition>typedef struct _sdxc_config sdxc_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_config_t</name>
        <briefdescription>
<para>SDXC configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="453" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf91cc3447e777bfc9f04a8db7144a548" prot="public" static="no">
        <type>struct _sdxc_adma2_descriptor</type>
        <definition>typedef struct _sdxc_adma2_descriptor sdxc_adma2_descriptor_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma2_descriptor_t</name>
        <briefdescription>
<para>SDXC ADMA2 descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="471" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gad098c3eefea878ad5bafff00e23edb88" prot="public" static="no">
        <type>struct _sdxc_adma3_cmd_sd_desc</type>
        <definition>typedef struct _sdxc_adma3_cmd_sd_desc sdxc_adma3_cmd_sd_desc_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma3_cmd_sd_desc_t</name>
        <briefdescription>
<para>ADMA3 command descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="505" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga86c1afe2694d759dfa2a6d6920f69629" prot="public" static="no">
        <type>struct _sdxc_adma3_integrated_desc</type>
        <definition>typedef struct _sdxc_adma3_integrated_desc sdxc_adma3_integrated_desc_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma3_integrated_desc_t</name>
        <briefdescription>
<para>SDXC ADMA3 Integrated Descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="513" column="30"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" prot="public" static="no">
        <type>struct _sdxc_boot_config</type>
        <definition>typedef struct _sdxc_boot_config sdxc_boot_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_boot_config_t</name>
        <briefdescription>
<para>SDXC Boot confituration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="525" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf58fbe511d15f703692541782f387cdf" prot="public" static="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>typedef hpm_stat_t(* sdxc_xfer_func_t) (SDXC_Type *base, sdxc_xfer_t *content)</definition>
        <argsstring>)(SDXC_Type *base, sdxc_xfer_t *content)</argsstring>
        <name>sdxc_xfer_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="543" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="543" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__sdxc__interface_1ga6a826eb5ed7075f21da7f3ce0ec51af4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_interrupt_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get the SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>inaterrupt status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="563" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga314df25e8301a829f7890e019f674d2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_card_inserted</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_is_card_inserted</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether SD card is inserted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SD</parametername>
</parameternamelist>
<parameterdescription>
<para>Card insertion status <itemizedlist>
<listitem><para>true SD Card is inserted </para>
</listitem>
<listitem><para>false SD card is not inserted </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="574" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="574" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga877f3616bd2dd0700e904974f58762fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_write_protected</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_is_write_protected</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether SD card is Write Protected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SD</parametername>
</parameternamelist>
<parameterdescription>
<para>Card Write Protection status <itemizedlist>
<listitem><para>true SD Card is Write protected </para>
</listitem>
<listitem><para>false SD card is not Write Protected </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="585" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="585" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa391eb3d08898c6ba7355a52b4c60003" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_clear_interrupt_status</definition>
        <argsstring>(SDXC_Type *base, uint32_t status_mask)</argsstring>
        <name>sdxc_clear_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>status_mask</declname>
        </param>
        <briefdescription>
<para>Clear SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>the status mask to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="595" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="595" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae5f0710dfc49f88f2329f2344b7f9f93" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_interrupt_status</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask, bool enable)</argsstring>
        <name>sdxc_enable_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC interrupt status mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt status enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="606" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="606" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3b728a911debd78741f3a610632aece3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_interrupt_signal</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask, bool enable)</argsstring>
        <name>sdxc_enable_interrupt_signal</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC interrupt signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC interrupt signal mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt signal enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="621" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="621" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga234d3b0deb7f4f11f98570b5cd8d0fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_get_capabilities</definition>
        <argsstring>(SDXC_Type *base, sdxc_capabilities_t *capabilities)</argsstring>
        <name>sdxc_get_capabilities</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structsdxc__capabilities__t" kindref="compound">sdxc_capabilities_t</ref> *</type>
          <declname>capabilities</declname>
        </param>
        <briefdescription>
<para>Get SDXC capabilities. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">capabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="635" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="272" bodyend="287" declfile="drivers/inc/hpm_sdxc_drv.h" declline="635" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga772d6ade95adacf74717f5f0ead2e6a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t sdxc_get_adma_error_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_adma_error_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC ADMA error status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>AMDA</parametername>
</parameternamelist>
<parameterdescription>
<para>error status register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="643" column="23" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="643" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaff483f5ecd4fa1b992b2ba5592abcdfc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_configure_data_timeout</definition>
        <argsstring>(SDXC_Type *base, uint8_t timeout)</argsstring>
        <name>sdxc_configure_data_timeout</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Configure SDXC data timeout internal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC data timeout option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="653" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6d4e5053397f64274b6ad9afde77ed1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_interrupt_at_block_gap</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_interrupt_at_block_gap</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC interrupt at block gap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable Interrupt_at_Block_Gap flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="663" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="663" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga492ca47ee6c0c903da015b616f636556" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_read_wait_control</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_read_wait_control</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable or Disable SDXC Read Wait. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable SDXC Read Wait flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="677" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="677" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga51791a8fdb9db034f738c19b43dddf08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_continue_request</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_continue_request</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC continue request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC continue request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="691" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="691" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3107d1d7214dce827591fcbcaf4883d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_stop_at_block_gap_request</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_stop_at_block_gap_request</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC StopAtBlockGap request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable StopAtBlockGap request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="705" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="705" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga50a563ab166f03d39b1b379481c4fc4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_high_speed</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_high_speed</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Control the SDXC high-speed support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to Enable/disable SDXC high-speed support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="719" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="719" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaf9ce4642c1fb04f99d3101843a5a135f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_power</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_power</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Control the SDXC power pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to control the SDXC power pin </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="734" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="734" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gafd15f2b1cdc9b57770b041218f972144" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_async_interrupt</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_async_interrupt</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC asynchronous interrupt support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC asynchronous interrupt support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="748" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="748" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga25db603d644a01c54b96186aea01ae59" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_preset</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_preset</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC Preset support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC Preset support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="762" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="762" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga22a261f70ff82aaad9b35f034f05954f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_host_version4</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_host_version4</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SD Host version 4. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SD Host version 4 support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="776" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="776" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gadb40d63aa02717f3fe73a6ffd6810d0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_execute_tuning</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_execute_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Start SDXC tuning process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="789" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="789" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6d5b2c208949f978dda169044aeba9dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_software_tuning</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_software_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC software tuning process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC software tuning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="799" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="799" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga7c8bd9eb9c354d64b4c077c2ceac19de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_reset_tuning_engine</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_reset_tuning_engine</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Reset SDXC tuning engine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="812" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="812" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab793ff643ea3292caa77fe1a2245ea3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_switch_to_1v8_signal</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_switch_to_1v8_signal</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Switch SDXC to 1.8V signaling mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to switch to 1.8v signaling mode/stay at 3.0v signaling mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="822" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="822" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3ce6f46d4554c5bfbd577412387976b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_internal_clock</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_internal_clock</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/Disable SDXC internal clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC internal clock </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="836" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="836" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga536766b6ca11b4ab78d4707b5e825ccd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_present_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_present_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get Present status register value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>PRESENT register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="850" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga8516180256eda9668d972e08b7d262b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_data_buf_writable</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_is_data_buf_writable</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the Data Buffer is writable or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer is writeable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer write is disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="861" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="861" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa37872e3ede28f4e16e29cd13f6a4581" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_data_buf_readable</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_is_data_buf_readable</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the data buffer is readable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>There are data available in data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>there is no data available in data buffer, read is disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="872" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="872" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga21ce97388c5a36966fca710f71b11d86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_read_data</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_read_data</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Read data from SDXC using non-DMA mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>read from SDXC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="882" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="882" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gad883aa5e051210de894123000a3ae605" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_write_data</definition>
        <argsstring>(SDXC_Type *base, uint32_t data)</argsstring>
        <name>sdxc_write_data</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write data to SDXC using non-DMA mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be written to SDXC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="892" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="892" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae07bfaee8e23e7cabef01f69826c3815" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_data3_0_level</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_data3_0_level</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC DATA3-DATA0 IO level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>data3-data0 IO level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="902" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="902" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga71d673cde5fabb5f94f1aae4e6a38afa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_auto_tuning</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_auto_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC auto tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC auto tuning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="912" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="912" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga071c2cb3e37f57d6097b7e859628b0a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_stop_clock_during_phase_code_change</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_stop_clock_during_phase_code_change</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Stop Clock During Phase Code Change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to determine whether stopping clock during phase code change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="927" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="927" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga012eafdabf4041f05edb741a3c4c2707" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_set_post_change_delay</definition>
        <argsstring>(SDXC_Type *base, uint8_t delay_cnt)</argsstring>
        <name>sdxc_set_post_change_delay</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>delay_cnt</declname>
        </param>
        <briefdescription>
<para>Set The delay cycles during phase switching and stable clock out. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="942" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="942" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga8686b0521dce6c61c57a63c599c8f3a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_emmc_support</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_emmc_support</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable EMMC support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable EMMC support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="953" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="953" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae2fc7bf986b78a4965d2f6ccf8e24833" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_mmc_boot</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_mmc_boot</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/Disable SDXC MMC boot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>FLag to enable/disable SDXC MMC boot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="967" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="967" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gad8ba9664b2f00c65b810403cafe6301b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_force_event</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask)</argsstring>
        <name>sdxc_force_event</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Set SDXC force event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC event mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="981" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="981" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga30fb0c706288794a858068263426da6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_sd_clock</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_sd_clock</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/disable SDXC SD clock output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC SD clock output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="991" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="991" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa81097ebdf516fd8afb5ea38f4eee14e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_set_center_phase_code</definition>
        <argsstring>(SDXC_Type *base, uint32_t value)</argsstring>
        <name>sdxc_set_center_phase_code</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set SDXC center phase code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC center phase value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1009" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1009" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6957049b45df15722a34d76a6a765630" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_enhanced_strobe</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_enhanced_strobe</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC enhanced strobe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC enhanced strobe </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1020" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1020" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa9ce2278139e0437c932acc51ea606cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_mmc_boot_config</definition>
        <argsstring>(SDXC_Type *base, const sdxc_boot_config_t *config)</argsstring>
        <name>sdxc_set_mmc_boot_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" kindref="member">sdxc_boot_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Set MMC boot configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC boot configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1034" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="550" bodyend="569" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1034" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga30197db1d82678f456626bb6f47d3e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_send_command</definition>
        <argsstring>(SDXC_Type *base, sdxc_command_t *cmd)</argsstring>
        <name>sdxc_send_command</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Send Command via SDXC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Sending command timed out </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Command was sent out successfully </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1043" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="289" bodyend="352" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1043" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gadbd59858bc0a4299da544b32645d77c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_receive_cmd_response</definition>
        <argsstring>(SDXC_Type *base, sdxc_command_t *cmd)</argsstring>
        <name>sdxc_receive_cmd_response</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Receive command response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no error happened </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1051" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="106" bodyend="143" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1051" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab72d27dc5881670acade5fa1d938675c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_parse_interrupt_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_parse_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Parse the SDXC interrupt status to HPM encoded status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no error happened </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1058" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="355" bodyend="410" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1058" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gabeae58ec5cd7899ec0c8b91afdfc94e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_wait_cmd_done</definition>
        <argsstring>(SDXC_Type *base, sdxc_command_t *cmd, bool polling_cmd_done)</argsstring>
        <name>sdxc_wait_cmd_done</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>polling_cmd_done</declname>
        </param>
        <briefdescription>
<para>Wait until SDXC command completes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">polling_cmd_done</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to determine whether to use blocking wait </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>command execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1067" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="412" bodyend="433" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1067" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga0d82d3656ba9b1dc07ac67b2405b735d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_config</definition>
        <argsstring>(SDXC_Type *base, sdxc_xfer_direction_t data_dir, uint32_t block_cnt, uint32_t block_size)</argsstring>
        <name>sdxc_set_data_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" kindref="member">sdxc_xfer_direction_t</ref></type>
          <declname>data_dir</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_cnt</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
<para>Set Data transfer configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Data transfer direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Block count for data transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Block size for data transfer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1076" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="571" bodyend="584" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1076" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga17142e754b982beb82fb3ea0fc72ed57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_adma_table_config</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_cfg, sdxc_data_t *data_cfg, uint32_t flags)</argsstring>
        <name>sdxc_set_adma_table_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_cfg</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref> *</type>
          <declname>data_cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set ADMA table configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Data configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for AMDA transfer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1086" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="696" bodyend="735" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1086" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga25c19b7d0a9702e43203693f9620a9df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_adma2_desc</definition>
        <argsstring>(uint32_t *adma_tbl, uint32_t adma_table_words, const uint32_t *data_buf, uint32_t data_bytes, uint32_t flags)</argsstring>
        <name>sdxc_set_adma2_desc</name>
        <param>
          <type>uint32_t *</type>
          <declname>adma_tbl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>adma_table_words</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>data_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>data_bytes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set ADMA2 descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adma_tbl</parametername>
</parameternamelist>
<parameterdescription>
<para>ADMA2 table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adma_table_words</parametername>
</parameternamelist>
<parameterdescription>
<para>ADMA2 table size in words </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the Data to be transferred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Data size for transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for ADMA2 descriptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1100" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="611" bodyend="694" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1100" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga5440d0ca74e525554894a86a9cdda088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_dma_config</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_cfg, const uint32_t *data_addr, bool enable_auto_cmd23)</argsstring>
        <name>sdxc_set_dma_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_cfg</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>data_addr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_auto_cmd23</declname>
        </param>
        <briefdescription>
<para>Set DMA configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA configuration data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer holds incoming/outgoing data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_auto_cmd23</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to determine whether to enable auto CMD23 or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1114" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="586" bodyend="608" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1114" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab8a5e4767ee4378088c66aadea3b1fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_init</definition>
        <argsstring>(SDXC_Type *base, const sdxc_config_t *config)</argsstring>
        <name>sdxc_init</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" kindref="member">sdxc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize SDXC controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1124" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="488" bodyend="522" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga73feb9897b8f5cf319e847a99e156a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_timeout</definition>
        <argsstring>(SDXC_Type *base, uint32_t timeout_in_ms, uint32_t *actual_timeout_ms)</argsstring>
        <name>sdxc_set_data_timeout</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_in_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>actual_timeout_ms</declname>
        </param>
        <briefdescription>
<para>Set the Data Timeout Counter value for an SD/eMMC device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_in_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Required timeout value in milliseconds, maximum value is 131,072ms </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">actual_timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Actual timeout in milliseconds, reported by this API </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1132" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="524" bodyend="548" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gac5fb3d55059ad32729acbb387f34b6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_speed_mode</definition>
        <argsstring>(SDXC_Type *base, sdxc_speed_mode_t mode)</argsstring>
        <name>sdxc_set_speed_mode</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" kindref="member">sdxc_speed_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set SDXC speed mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC speed mode option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1139" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="824" bodyend="835" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3ae9522477d9e42e05bb8ffc2550bce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_bus_width</definition>
        <argsstring>(SDXC_Type *base, sdxc_bus_width_t width)</argsstring>
        <name>sdxc_set_data_bus_width</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" kindref="member">sdxc_bus_width_t</ref></type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set SDXC Data bus width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC bus width option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1147" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="791" bodyend="807" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1147" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae6f2e82b50fd078a88a5278c1ef22ba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t sdxc_get_data_bus_width</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_data_bus_width</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC Data bus width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Actual bus width, valid value: 1 / 4 / 8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1154" column="10" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="809" bodyend="822" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1154" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae0635c97cad9b873abe5b7607193c08b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_select_voltage</definition>
        <argsstring>(SDXC_Type *base, sdxc_bus_voltage_option_t option)</argsstring>
        <name>sdxc_select_voltage</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" kindref="member">sdxc_bus_voltage_option_t</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Set SDXC IO voltage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[option]</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC voltage option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1161" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="766" bodyend="778" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1161" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga9b2e7b33139a03435fef1a3d189c6d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdxc_reset</definition>
        <argsstring>(SDXC_Type *base, sdxc_sw_reset_type_t reset_type, uint32_t timeout)</argsstring>
        <name>sdxc_reset</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" kindref="member">sdxc_sw_reset_type_t</ref></type>
          <declname>reset_type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Reset SDXC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reset_type</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC reset type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>reset result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1170" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="737" bodyend="764" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga4e6a818f8216a57938fd3b117b589103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_enable_wakeup_event</definition>
        <argsstring>(SDXC_Type *base, sdxc_wakeup_event_t evt, bool enable)</argsstring>
        <name>sdxc_enable_wakeup_event</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" kindref="member">sdxc_wakeup_event_t</ref></type>
          <declname>evt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC wakeup interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">evt</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC wakeup interrupt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to control whether to enable SDXC wakeup event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1178" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="780" bodyend="789" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1178" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gafa155b89ce0f4d2145046ac8741f5436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_transfer_blocking</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_config, sdxc_xfer_t *xfer)</argsstring>
        <name>sdxc_transfer_blocking</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref> *</type>
          <declname>xfer</declname>
        </param>
        <briefdescription>
<para>Start SDXC transfer in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC transfer context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1187" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="892" bodyend="914" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1187" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gac11989ec620ff7b92909fd56ff289200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_transfer_nonblocking</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_config, sdxc_xfer_t *xfer)</argsstring>
        <name>sdxc_transfer_nonblocking</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref> *</type>
          <declname>xfer</declname>
        </param>
        <briefdescription>
<para>Start SDXC transfer in nonblocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC transfer context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1196" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="837" bodyend="890" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1196" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga9c4e2b433f70fe082bee6ce95b1f6d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_error_recovery</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_error_recovery</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>SDXC Error recovery. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>error recovery status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1203" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="916" bodyend="968" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1203" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga96500ce7256b9bcdc3850d55bf1afad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_tuning_flow_sequence</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_tuning_flow_sequence</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC tuning flow sequence. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1211" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="979" bodyend="1009" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1211" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga849cf571dee804c559d6b8036572e304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_software_tuning</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_software_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC software tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1219" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="1011" bodyend="1093" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1219" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae7626db5bce2a5a4ada6dbcd1da3d7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_auto_tuning</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_auto_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC auto tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1227" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="1095" bodyend="1105" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1227" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_SDXC_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_SDXC_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_sdxc_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_sdxc_soc_drv.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__sdxc__interface_1ga006b38b2434ce421355378bf83e10d4a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_1V8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>0)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__sdxc__interface_1gad7c14a95dd77b6bf6acb873b4d8b2a55" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_4BIT<sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>1)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__sdxc__interface_1ga20335b1697b81181a8d81239eb22ae4a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_8BIT<sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>2)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__sdxc__interface_1gaf650710ac363e246304710aec5566a87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_EMMC<sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>3)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_CD<sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>16)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__sdxc__interface_1ga3bea319a46960b07d4f7418318cef35f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_VSEL<sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>17)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_PWR<sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>18)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_WP<sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>19)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__sdxc__interface_1ga30ab51d728b67f9e3bca6ed67c83f7f6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_RST<sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>20)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__sdxc__interface_1ga120e6e6d06cf4f3c7367b459c2633702" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_SUPPORT_DS<sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>21)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__sdxc__interface_1gaac2935f5fcc64b462d72e7e3f8a3f688" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_CD_IN_IP<sp/><sp/><sp/><sp/><sp/><sp/>(SDXC_HOST_SUPPORT_CD<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__sdxc__interface_1ga1c5cabf98880472496c811380ab59bab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_VSEL_IN_IP<sp/><sp/><sp/><sp/>(SDXC_HOST_SUPPORT_VSEL<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__sdxc__interface_1gac106c1376ca161529911999810426072" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_PWR_IN_IP<sp/><sp/><sp/><sp/><sp/>(SDXC_HOST_SUPPORT_PWR<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__sdxc__interface_1ga0e7a8d79a42703adb78c0f00d139ace8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_WP_IN_IP<sp/><sp/><sp/><sp/><sp/><sp/>(SDXC_HOST_SUPPORT_WP<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__sdxc__interface_1ga8103583416d13e6f5391abb139724f8b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_RST_IN_IP<sp/><sp/><sp/><sp/><sp/>(SDXC_HOST_SUPPORT_RST<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group__sdxc__interface_1gad7329858e7a9e804ca805dc32b3158ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_VSEL_PIN_POLARITY<sp/>(SDXC_HOST_SUPPORT_CD<sp/>&lt;&lt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__sdxc__interface_1gafb190f447137d842504d5a8c379f4c17" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_CD_PIN_POLARITY<sp/><sp/><sp/>(SDXC_HOST_VSEL_IN_IP<sp/>&lt;&lt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__sdxc__interface_1ga6fd53657d00937708246cf3955de44c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_PWR_PIN_POLARITY<sp/><sp/>(SDXC_HOST_SUPPORT_PWR<sp/>&lt;&lt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="group__sdxc__interface_1ga0c5545567839318577cea1c4a478c101" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_WP_PIN_POLARITY<sp/><sp/><sp/>(SDXC_HOST_SUPPORT_WP<sp/>&lt;&lt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__sdxc__interface_1ga5a9136b6c722657e0e9415f6d4119170" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_HOST_RST_IN_POLARITY<sp/><sp/><sp/>(SDXC_HOST_SUPPORT_DS<sp/>&lt;&lt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group__sdxc__interface_1ga6d9acf45eb1d5ee4b809304ce521dc8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_RESP_TYPE_NO_RESP<sp/>(0U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group__sdxc__interface_1ga7a68f63f56a45a423dd3627a305502bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_RESP_TYPE_RESP_LEN_136<sp/>(1U)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__sdxc__interface_1gaf40b0ff4605bae4c0f81c91312a64996" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_RESP_TYPE_RESP_LEN_48<sp/>(2U)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__sdxc__interface_1ga87fd5eef5eeb051a068cb273f6d013ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_RESP_TYPE_RESP_LEN_48B<sp/>(3U)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_STS_CMD_ERR<sp/>(SDXC_INT_STAT_CMD_TOUT_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_CMD_CRC_ERR_MASK<sp/>|\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_CMD_END_BIT_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_CMD_IDX_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_AUTO_CMD_ERR_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__sdxc__interface_1gaf25560ebeea21fc82ead7277826653bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_STS_DATA_ERR<sp/>(SDXC_INT_STAT_DATA_TOUT_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_DATA_CRC_ERR_MASK<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_DATA_END_BIT_ERR_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="group__sdxc__interface_1ga3d1ecfbb9e6e8295c08e2dd36cef4fdd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_STS_CARD_ERR<sp/>(SDXC_INT_STAT_CARD_REMOVAL_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__sdxc__interface_1gadec3ce578445887ea4db534983a02c19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_STS_ERROR<sp/>(SDXC_INT_STAT_ERR_INTERRUPT_MASK<sp/>|<sp/>SDXC_STS_CMD_ERR<sp/>|<sp/>SDXC_STS_DATA_ERR<sp/>|<sp/>SDXC_STS_CARD_ERR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__sdxc__interface_1ga0b409a1003769ad28ebb04d117e49e9d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_STS_CMD_FLAGS<sp/>(SDXC_STS_CMD_ERR<sp/>|<sp/>SDXC_INT_STAT_CMD_COMPLETE_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__sdxc__interface_1gab059dd8331b722cdb50a215527a99288" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_STS_ALL_FLAGS<sp/>(SDXC_INT_STAT_ERR_INTERRUPT_MASK<sp/>|<sp/>SDXC_INT_STAT_CQE_EVENT_MASK<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_FX_EVENT_MASK<sp/>|<sp/>SDXC_INT_STAT_RE_TUNE_EVENT_MASK<sp/>|<sp/>SDXC_INT_STAT_CARD_INTERRUPT_MASK<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_CARD_REMOVAL_MASK<sp/>|<sp/>SDXC_INT_STAT_CARD_INSERTION_MASK<sp/>|<sp/>SDXC_INT_STAT_BUF_RD_READY_MASK<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_BUF_WR_READY_MASK<sp/>|<sp/>SDXC_INT_STAT_DMA_INTERRUPT_MASK<sp/>|<sp/>SDXC_INT_STAT_BGAP_EVENT_MASK<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_XFER_COMPLETE_MASK<sp/>|<sp/>SDXC_INT_STAT_CMD_COMPLETE_MASK<sp/>|<sp/>SDXC_INT_STAT_BOOT_ACK_ERR_MASK<sp/>|<sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_RESP_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_TUNING_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_ADMA_ERR_MASK<sp/>|<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_AUTO_CMD_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_CUR_LMT_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_DATA_END_BIT_ERR_MASK<sp/>|\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_DATA_CRC_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_DATA_TOUT_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_CMD_IDX_ERR_MASK<sp/>|\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDXC_INT_STAT_CMD_END_BIT_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_CMD_CRC_ERR_MASK<sp/>|<sp/>SDXC_INT_STAT_CMD_TOUT_ERR_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_software_reset<sp/>{</highlight></codeline>
<codeline lineno="108" refid="hpm__sdxc__drv_8h_1a5a50a794445ea22bbea8843803985691" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a5a50a794445ea22bbea8843803985691" kindref="member">sdxc_reset_all</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="hpm__sdxc__drv_8h_1a61a89b2bd186dcd020bb824fa73b6890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a61a89b2bd186dcd020bb824fa73b6890" kindref="member">sdxc_reset_cmd_line</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="hpm__sdxc__drv_8h_1a08e5a959551e5e0dcf63d75351a9d998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a08e5a959551e5e0dcf63d75351a9d998" kindref="member">sdxc_reset_data_line</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111" refid="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" kindref="member">sdxc_sw_reset_type_t</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_bus_voltage_option<sp/>{</highlight></codeline>
<codeline lineno="117" refid="hpm__sdxc__drv_8h_1a8f68f82f8407d522b4c90244c61ce203" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a8f68f82f8407d522b4c90244c61ce203" kindref="member">sdxc_bus_voltage_sd_1v8</ref><sp/>=<sp/>0x01U,</highlight></codeline>
<codeline lineno="118" refid="hpm__sdxc__drv_8h_1afdfbf4daf63802c8343916e4c22063c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1afdfbf4daf63802c8343916e4c22063c6" kindref="member">sdxc_bus_voltage_sd_3v3</ref><sp/>=<sp/>0x00U,</highlight></codeline>
<codeline lineno="119" refid="hpm__sdxc__drv_8h_1a8bb5d1938bbc9727347fab7151447199" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a8bb5d1938bbc9727347fab7151447199" kindref="member">sdxc_bus_voltage_emmc_1v8</ref><sp/>=<sp/>0x01U,</highlight></codeline>
<codeline lineno="120" refid="hpm__sdxc__drv_8h_1a5ef3d804f9371dc2ccdb63063d5b0848" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a5ef3d804f9371dc2ccdb63063d5b0848" kindref="member">sdxc_bus_voltage_emmc_3v3</ref><sp/>=<sp/>0x00U,</highlight></codeline>
<codeline lineno="121" refid="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" kindref="member">sdxc_bus_voltage_option_t</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_wakeup_event<sp/>{</highlight></codeline>
<codeline lineno="127" refid="hpm__sdxc__drv_8h_1ab191ddc37dbf05eac151eec88a9f5fa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ab191ddc37dbf05eac151eec88a9f5fa6" kindref="member">sdxc_wakeup_card_removal</ref><sp/>=<sp/>0x4U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="hpm__sdxc__drv_8h_1a089677cc6262cdf3527f2e5ee83f99a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a089677cc6262cdf3527f2e5ee83f99a5" kindref="member">sdxc_wakeup_card_insert</ref><sp/>=<sp/>0x02U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="hpm__sdxc__drv_8h_1a8af71b9ca8bc08e1151af9f825a63a41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a8af71b9ca8bc08e1151af9f825a63a41" kindref="member">sdxc_wakeup_card_interrupt</ref><sp/>=<sp/>0x01U,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" kindref="member">sdxc_wakeup_event_t</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_dma_type<sp/>{</highlight></codeline>
<codeline lineno="136" refid="hpm__sdxc__drv_8h_1ac2151c75766a856e7f7cc972a02cb6b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ac2151c75766a856e7f7cc972a02cb6b1" kindref="member">sdxc_dmasel_sdma</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="hpm__sdxc__drv_8h_1a59a2c00bdd4637992d0c2a7d9175eaf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a59a2c00bdd4637992d0c2a7d9175eaf8" kindref="member">sdxc_dmasel_adma2</ref><sp/>=<sp/>2U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="hpm__sdxc__drv_8h_1a02675e8ecf09faf6a5c0d27080bbbb0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a02675e8ecf09faf6a5c0d27080bbbb0c" kindref="member">sdxc_dmasel_adma2_or_3</ref><sp/>=<sp/>3U,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139" refid="hpm__sdxc__drv_8h_1a528431b58cba0630b112a7167c2cde24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a528431b58cba0630b112a7167c2cde24" kindref="member">sdxc_dmasel_nodma</ref><sp/>=<sp/>0xFU,</highlight></codeline>
<codeline lineno="140" refid="group__sdxc__interface_1ga3523112a8d468ca2333d5299b420bd70" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga3523112a8d468ca2333d5299b420bd70" kindref="member">sdxc_dma_type_t</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_bus_width<sp/>{</highlight></codeline>
<codeline lineno="146" refid="hpm__sdxc__drv_8h_1a7e271a981fce0fd31528d91cf4bf35d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a7e271a981fce0fd31528d91cf4bf35d2" kindref="member">sdxc_bus_width_1bit</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147" refid="hpm__sdxc__drv_8h_1a4c87da47ad3ef9aaaa7e543700d788c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a4c87da47ad3ef9aaaa7e543700d788c0" kindref="member">sdxc_bus_width_4bit</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148" refid="hpm__sdxc__drv_8h_1a2687a7f192dab8c131114387ffa378e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a2687a7f192dab8c131114387ffa378e5" kindref="member">sdxc_bus_width_8bit</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149" refid="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" kindref="member">sdxc_bus_width_t</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_speed_mode<sp/>{</highlight></codeline>
<codeline lineno="155" refid="hpm__sdxc__drv_8h_1a0a1412cd09f005c8a2e2ffc554b16e82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a0a1412cd09f005c8a2e2ffc554b16e82" kindref="member">sdxc_sd_speed_sdr12</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156" refid="hpm__sdxc__drv_8h_1a66eb9a198808cd10064ac1a5fd799174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a66eb9a198808cd10064ac1a5fd799174" kindref="member">sdxc_sd_speed_sdr25</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157" refid="hpm__sdxc__drv_8h_1a7b2cdc379fa8a93a5479e2f13db7b29b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a7b2cdc379fa8a93a5479e2f13db7b29b" kindref="member">sdxc_sd_speed_sdr50</ref><sp/>=<sp/>2U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158" refid="hpm__sdxc__drv_8h_1a9392ee1e20f31fa5da7326a5f9c9a288" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a9392ee1e20f31fa5da7326a5f9c9a288" kindref="member">sdxc_sd_speed_sdr104</ref><sp/>=<sp/>3U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159" refid="hpm__sdxc__drv_8h_1aec2d33f58dd5a8b1d2fcbd2d7c67a5fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1aec2d33f58dd5a8b1d2fcbd2d7c67a5fe" kindref="member">sdxc_sd_speed_ddr50</ref><sp/>=<sp/>4U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160" refid="hpm__sdxc__drv_8h_1af875dc9d0f1bd5d053f5664fedd0ef22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1af875dc9d0f1bd5d053f5664fedd0ef22" kindref="member">sdxc_sd_speed_normal</ref><sp/>=<sp/><ref refid="hpm__sdxc__drv_8h_1a0a1412cd09f005c8a2e2ffc554b16e82" kindref="member">sdxc_sd_speed_sdr12</ref>,<sp/></highlight></codeline>
<codeline lineno="161" refid="hpm__sdxc__drv_8h_1ae04a39d187b77a045c60f1ec80c6d3b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ae04a39d187b77a045c60f1ec80c6d3b2" kindref="member">sdxc_sd_speed_high</ref><sp/>=<sp/><ref refid="hpm__sdxc__drv_8h_1a66eb9a198808cd10064ac1a5fd799174" kindref="member">sdxc_sd_speed_sdr25</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163" refid="hpm__sdxc__drv_8h_1ae0d6b9dacab2914efa35796cb90aa492" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ae0d6b9dacab2914efa35796cb90aa492" kindref="member">sdxc_emmc_speed_legacy</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164" refid="hpm__sdxc__drv_8h_1a98a1dd7f4bb1dbcb197d7cb84a2c0d3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a98a1dd7f4bb1dbcb197d7cb84a2c0d3b" kindref="member">sdxc_emmc_speed_high_speed_sdr</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165" refid="hpm__sdxc__drv_8h_1ad933afec4f0f85412bdc2b602d1f8710" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ad933afec4f0f85412bdc2b602d1f8710" kindref="member">sdxc_emmc_speed_hs200</ref><sp/>=<sp/>3U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166" refid="hpm__sdxc__drv_8h_1a03138977d40e8096bfe40bdcf9934bcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a03138977d40e8096bfe40bdcf9934bcd" kindref="member">sdxc_emmc_speed_high_speed_ddr</ref><sp/>=<sp/>4U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167" refid="hpm__sdxc__drv_8h_1a1748f86158f43ff9087c6baa2804b9d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a1748f86158f43ff9087c6baa2804b9d8" kindref="member">sdxc_emmc_speed_hs400</ref><sp/>=<sp/>7U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169" refid="hpm__sdxc__drv_8h_1a88915c27022e866cfa5a45b7d1b77b2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a88915c27022e866cfa5a45b7d1b77b2b" kindref="member">sdxc_sdmmc_speed_card_init</ref><sp/>=<sp/>0x10,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" kindref="member">sdxc_speed_mode_t</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_auto_cmd_sel<sp/>{</highlight></codeline>
<codeline lineno="177" refid="hpm__sdxc__drv_8h_1a2c4f870bb16dba788ff7baad0abc4dbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a2c4f870bb16dba788ff7baad0abc4dbc" kindref="member">sdxc_auto_cmd_disabled</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="hpm__sdxc__drv_8h_1a994370f520c127075f0a9f5f6e8f4cac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a994370f520c127075f0a9f5f6e8f4cac" kindref="member">sdxc_auto_cmd12_enabled</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="hpm__sdxc__drv_8h_1a947be428a5a8183dc3a4d9a88faa04a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a947be428a5a8183dc3a4d9a88faa04a3" kindref="member">sdxc_auto_cmd23_enabled</ref><sp/>=<sp/>2U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180" refid="hpm__sdxc__drv_8h_1a402d217b6ccf335ef3157b0ed2e4473d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a402d217b6ccf335ef3157b0ed2e4473d" kindref="member">sdxc_auto_cmd_auto_select</ref><sp/>=<sp/>3U,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181" refid="group__sdxc__interface_1ga1e05f721758271a748c54c7f78408af5" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga1e05f721758271a748c54c7f78408af5" kindref="member">sdxc_auto_cmd_sel_t</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_xfer_direction<sp/>{</highlight></codeline>
<codeline lineno="187" refid="hpm__sdxc__drv_8h_1aa1a8dce20b7efd672217f6a256e673c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1aa1a8dce20b7efd672217f6a256e673c4" kindref="member">sdxc_xfer_dir_write</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="188" refid="hpm__sdxc__drv_8h_1ad64a7b6c3723bc1c8b7652b7bb8a344e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ad64a7b6c3723bc1c8b7652b7bb8a344e" kindref="member">sdxc_xfer_dir_read</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="189" refid="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" kindref="member">sdxc_xfer_direction_t</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_command_type<sp/>{</highlight></codeline>
<codeline lineno="195" refid="hpm__sdxc__drv_8h_1a70e83f7c4480fd5ce3f68bea1d897610" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a70e83f7c4480fd5ce3f68bea1d897610" kindref="member">sdxc_cmd_type_normal_cmd</ref><sp/>=<sp/>0U,</highlight></codeline>
<codeline lineno="196" refid="hpm__sdxc__drv_8h_1ab2850b67a53bcbc8a827fa76751b748c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ab2850b67a53bcbc8a827fa76751b748c" kindref="member">sdxc_cmd_type_suspend_cmd</ref><sp/>=<sp/>1U,</highlight></codeline>
<codeline lineno="197" refid="hpm__sdxc__drv_8h_1a966acc3fa3ecf569f896c99928bc9840" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a966acc3fa3ecf569f896c99928bc9840" kindref="member">sdxc_cmd_tye_resume_cmd</ref><sp/>=<sp/>2U,</highlight></codeline>
<codeline lineno="198" refid="hpm__sdxc__drv_8h_1ac2087a1f7c388ff2241b44cc1c3f673d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ac2087a1f7c388ff2241b44cc1c3f673d" kindref="member">sdxc_cmd_type_abort_cmd</ref><sp/>=<sp/>3U,</highlight></codeline>
<codeline lineno="199" refid="hpm__sdxc__drv_8h_1a8b1a3e692f32861e2a8c21ff0125d72d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a8b1a3e692f32861e2a8c21ff0125d72d" kindref="member">sdxc_cmd_type_empty</ref><sp/>=<sp/>4U,</highlight></codeline>
<codeline lineno="200" refid="group__sdxc__interface_1ga1543c014abbb97dc5e873dbef7092297" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga1543c014abbb97dc5e873dbef7092297" kindref="member">sdxc_command_type_t</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="group__sdxc__interface_1ga4efada8c8222039e8f2044fd672296a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_TYPE_NORMAL<sp/>(0UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_CMD_TYPE_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="group__sdxc__interface_1ga1b9942bb3b52a563a5831c3a75edff66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_TYPE_SUSPEND<sp/>(1UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_CMD_TYPE_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="group__sdxc__interface_1ga5e477711a76882f6ef5bff57a7fc858b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_TYPE_RESUME<sp/>(2UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_CMD_TYPE_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="group__sdxc__interface_1ga21af6614c131e19e74a0e678eaed3d75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_TYPE_ABORT<sp/>(3UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_CMD_TYPE_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_boot_mode<sp/>{</highlight></codeline>
<codeline lineno="214" refid="hpm__sdxc__drv_8h_1a9353093a05d4c73e23d1059185c89c05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a9353093a05d4c73e23d1059185c89c05" kindref="member">sdxc_boot_mode_normal</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="215" refid="hpm__sdxc__drv_8h_1a5f201b9793305eec4690518084b0fbac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a5f201b9793305eec4690518084b0fbac" kindref="member">sdxc_boot_mode_alternative</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="216" refid="group__sdxc__interface_1gad7dfc4c7d2c345d659ce3a1db254f7e5" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gad7dfc4c7d2c345d659ce3a1db254f7e5" kindref="member">sdxc_boot_mode_t</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_response_type<sp/>{</highlight></codeline>
<codeline lineno="222" refid="hpm__sdxc__drv_8h_1aa975289b7fc2f09749f4e1f2c72c4083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1aa975289b7fc2f09749f4e1f2c72c4083" kindref="member">sdxc_response_type_no_resp</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="223" refid="hpm__sdxc__drv_8h_1adffd53be0600818316ba2212027ef559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1adffd53be0600818316ba2212027ef559" kindref="member">sdxc_response_type_resp_len_136bit</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="224" refid="hpm__sdxc__drv_8h_1ac79ee83005c472740a8f35a45307c1ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ac79ee83005c472740a8f35a45307c1ab" kindref="member">sdxc_response_type_resp_len_48bit</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="225" refid="hpm__sdxc__drv_8h_1afe757b4b12e30ceefb3e76216606d06e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1afe757b4b12e30ceefb3e76216606d06e" kindref="member">sdxc_response_type_resp_len_48bit_check_busy</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="226" refid="group__sdxc__interface_1gaf6b1d2191e32aab10f798ed7fcbd7002" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gaf6b1d2191e32aab10f798ed7fcbd7002" kindref="member">sdxc_response_type_t</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="group__sdxc__interface_1ga64d02f62564b5fa6fba4c65bc5e70401" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_RESP_NO_RESPONSE<sp/>(0UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="group__sdxc__interface_1ga56bdcf83e8c7aaf668abac399c7d3a47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_RESP_LEN_136<sp/>(1UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="group__sdxc__interface_1gada92f05c73de87d517a4fe7c7bb83ff5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_RESP_LEN_48<sp/>(2UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="group__sdxc__interface_1gae246187d7d4173f1ccab65ef86729ea9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_RESP_LEN_48B<sp/>(3UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="group__sdxc__interface_1ga14e5870194b62fad53c4dce75306b8bb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_IS_MAIN_CMD<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="group__sdxc__interface_1ga991e88691462743d1ce6d69eb955ae9b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_IS_SUB_CMD<sp/>(SDXC_CMD_XFER_SUB_CMD_FLAG_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="group__sdxc__interface_1ga931a51100df4fcc10de6e033b74cf66b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_CRC_CHK_EN<sp/>(SDXC_CMD_XFER_CMD_CRC_CHK_ENABLE_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="group__sdxc__interface_1gacd081c049f84762e644d9b1594243064" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_CRC_CHK_DIS<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="group__sdxc__interface_1ga9584623075b1db44def7e6a7e7b67440" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_IDX_CHK_EN<sp/>(SDXC_CMD_XFER_CMD_IDX_CHK_ENABLE_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="group__sdxc__interface_1ga81d2b7235cc57723b0c3b3a418f78f8f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_IDX_CHK_DIS<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="group__sdxc__interface_1gafbc52a6bc518d8dde79a28a65ce22e29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_DATA_PRESENT<sp/>(SDXC_CMD_XFER_DATA_PRESENT_SEL_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="group__sdxc__interface_1gaefb2cbea8db6714781802020d7b49cab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_DATA_NO_PRESENT<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="group__sdxc__interface_1gaa1e70e684b9fa1a3251081b5e5b06a87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_TYPE_NORMAL<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="group__sdxc__interface_1gacd2f50334b995ac0f0b82e5e791d964b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_TYPE_SUSPEND<sp/>(1UL<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_CMD_TYPE_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="group__sdxc__interface_1ga34d636f06665bd558a8ce5bdcd05b2de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_TYPE_RESUME<sp/>(2U<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_CMD_TYPE_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group__sdxc__interface_1gaf71c3a04f5d222dcfe44473ff5faf87a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_CMD_CMD_TYPE_ABORT<sp/>(3U<sp/>&lt;&lt;<sp/>SDXC_CMD_XFER_CMD_TYPE_SHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="254" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a0d3ed7978bcf00ac97000a033e24737c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a0d3ed7978bcf00ac97000a033e24737c" kindref="member">status_sdxc_busy</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a90a101d6f4c68eba057f5e7dfddff13e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a90a101d6f4c68eba057f5e7dfddff13e" kindref="member">status_sdxc_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>1),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a5d9ed478629b49bd06b978e7841de0c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a5d9ed478629b49bd06b978e7841de0c8" kindref="member">status_sdxc_send_cmd_failed</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>2),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ab2a9c2fa4c7ae0234e1ea374dd99bbfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ab2a9c2fa4c7ae0234e1ea374dd99bbfe" kindref="member">status_sdxc_cmd_timeout_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>3),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ab8d9155beb3e069555bd203e9d485045" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ab8d9155beb3e069555bd203e9d485045" kindref="member">status_sdxc_cmd_crc_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>4),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aadbaf10ea7030dd7b044f56c34bc01f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aadbaf10ea7030dd7b044f56c34bc01f0" kindref="member">status_sdxc_cmd_end_bit_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>5),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8ffa3c3732649bc348f81b96b05e9260" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8ffa3c3732649bc348f81b96b05e9260" kindref="member">status_sdxc_cmd_index_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>6),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a1a7bebe571cca56a17cd01e8e2764b09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a1a7bebe571cca56a17cd01e8e2764b09" kindref="member">status_sdxc_data_timeout_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>7),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a58e1427f43d8e630168b698a2e64cadc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a58e1427f43d8e630168b698a2e64cadc" kindref="member">status_sdxc_data_crc_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>8),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a7fef9211d246f475e32944a8185d99f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a7fef9211d246f475e32944a8185d99f3" kindref="member">status_sdxc_data_end_bit_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>9),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ad7400f529550c82c85ad43a0b107abb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5ad7400f529550c82c85ad43a0b107abb8" kindref="member">status_sdxc_auto_cmd_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>10),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a4191c30d551d9bd5f5ffcad8c4783c13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a4191c30d551d9bd5f5ffcad8c4783c13" kindref="member">status_sdxc_adma_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>11),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a58b51de0f2d44a61b0abbfc6188104e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a58b51de0f2d44a61b0abbfc6188104e0" kindref="member">status_sdxc_tuning_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>12),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a4ba77233f0090055390d7c9b75985d0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a4ba77233f0090055390d7c9b75985d0b" kindref="member">status_sdxc_response_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>13),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aca505cb4baae0011c885cab106a414dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aca505cb4baae0011c885cab106a414dc" kindref="member">status_sdxc_boot_ack_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>14),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a6d045106d67a8803bcf2825126a47cfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a6d045106d67a8803bcf2825126a47cfe" kindref="member">status_sdxc_retuning_request</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>15),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SDXC<sp/>Auto<sp/>CMD12<sp/>command<sp/>not<sp/>executed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8d6c70d2367c09cf71e8841034732bb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8d6c70d2367c09cf71e8841034732bb8" kindref="member">status_sdxc_autocmd_cmd12_not_exec</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>16),</highlight></codeline>
<codeline lineno="272" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a630138954e3b1a47749401fabd1b0089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a630138954e3b1a47749401fabd1b0089" kindref="member">status_sdxc_autocmd_cmd_timeout_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>17),<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a795dbdfae54266142c777b6cd9f31afc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a795dbdfae54266142c777b6cd9f31afc" kindref="member">status_sdxc_autocmd_cmd_crc_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>18),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a293bc0f5d4a80d6b26ae6a62b1185cc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a293bc0f5d4a80d6b26ae6a62b1185cc1" kindref="member">status_sdxc_autocmd_end_bit_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>19),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a04d86e8b11e32a689d30bcebb4f53f62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a04d86e8b11e32a689d30bcebb4f53f62" kindref="member">status_sdxc_autocmd_cmd_index_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>20),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a7eb07985533706de43d29ada59565fed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a7eb07985533706de43d29ada59565fed" kindref="member">status_sdxc_autocmd_cmd_response_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>21),<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SDXC<sp/>Auto<sp/>CMD<sp/>not<sp/>issued<sp/>auto<sp/>CMD12<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a6fd382dc4ad27dd293653a4ddf2cc140" kindref="member">status_sdxc_autocmd_cmd_not_issued_auto_cmd12</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>22),</highlight></codeline>
<codeline lineno="280" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a922e482934f1906dce3bd5341bf1c0b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a922e482934f1906dce3bd5341bf1c0b4" kindref="member">status_sdxc_unsupported</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>23),</highlight></codeline>
<codeline lineno="281" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a21a5057961c4408e63e3f485fc3eebee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a21a5057961c4408e63e3f485fc3eebee" kindref="member">status_sdxc_transfer_data_completed</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>24),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a33c64d4046bd3ef323a83ed45a9059d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a33c64d4046bd3ef323a83ed45a9059d1" kindref="member">status_sdxc_send_cmd_successful</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>25),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a962556472b7895e218f4cc47ea13ba9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a962556472b7895e218f4cc47ea13ba9b" kindref="member">status_sdxc_transfer_dma_completed</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>26),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a95bf0c3245ac266184cffa6a737ca4d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a95bf0c3245ac266184cffa6a737ca4d8" kindref="member">status_sdxc_transfer_data_failed</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>27),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8e4badb0ef283026627654bb5cc74047" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8e4badb0ef283026627654bb5cc74047" kindref="member">status_sdxc_dma_addr_unaligned</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>28),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aba4a732221da48321d3372d0f5bd4830" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5aba4a732221da48321d3372d0f5bd4830" kindref="member">status_sdxc_tuning_failed</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>29),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a47c025118075e92dbe27bc668b3a3ab3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a47c025118075e92dbe27bc668b3a3ab3" kindref="member">status_sdxc_card_removed</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>30),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a2d394f15d7e0b451a401ba24c07bd514" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a2d394f15d7e0b451a401ba24c07bd514" kindref="member">status_sdxc_non_recoverable_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>30),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289" refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8ba3bc94de999f14ac9a2b806ac21ca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga6d8d14defa336cd0180dccd1e0170dd5a8ba3bc94de999f14ac9a2b806ac21ca9" kindref="member">status_sdxc_recoverable_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a8b99547c230a0099c9150710123465a0" kindref="member">status_group_sdxc</ref>,<sp/>31),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal">};</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="structsdxc__capabilities__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="298" refid="structsdxc__capabilities__t_1a83921ee522a3210bd1ba37c34fd35bab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a83921ee522a3210bd1ba37c34fd35bab" kindref="member">tout_clk_freq</ref>:<sp/>6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="300" refid="structsdxc__capabilities__t_1ae81a09704033655493bda09654d035e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1ae81a09704033655493bda09654d035e5" kindref="member">tout_clk_unit</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301" refid="structsdxc__capabilities__t_1a0aa8d0f5a7e6c35d9baa128b92d96f2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a0aa8d0f5a7e6c35d9baa128b92d96f2a" kindref="member">base_clk_freq</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302" refid="structsdxc__capabilities__t_1a7cdfd8da8060a9e6c14da713b6ffa6a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a7cdfd8da8060a9e6c14da713b6ffa6a0" kindref="member">max_blk_len</ref>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303" refid="structsdxc__capabilities__t_1a4de3024f7513295afe28b79abdbc31c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a4de3024f7513295afe28b79abdbc31c2" kindref="member">embedded_8_bit_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304" refid="structsdxc__capabilities__t_1a952f910548f864392c2b7b9f19148690" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a952f910548f864392c2b7b9f19148690" kindref="member">adma2_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="306" refid="structsdxc__capabilities__t_1aea2900caa83ad543ad6fd62866f73571" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1aea2900caa83ad543ad6fd62866f73571" kindref="member">high_speed_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307" refid="structsdxc__capabilities__t_1a19aee5dd4cc4175261cd1279329434e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a19aee5dd4cc4175261cd1279329434e0" kindref="member">sdma_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308" refid="structsdxc__capabilities__t_1a3de71aa44e55bb583ba398a3e703dc0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a3de71aa44e55bb583ba398a3e703dc0d" kindref="member">suspend_resume_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309" refid="structsdxc__capabilities__t_1abe532872926677331b3df759dfa15e63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1abe532872926677331b3df759dfa15e63" kindref="member">voltage_3v3_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310" refid="structsdxc__capabilities__t_1a928ce5ec5ed6b296e540882f1cbb0895" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a928ce5ec5ed6b296e540882f1cbb0895" kindref="member">voltage_3v0_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311" refid="structsdxc__capabilities__t_1a1251b8fd403fd384778c6af958eab4df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a1251b8fd403fd384778c6af958eab4df" kindref="member">voltage_1v8_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312" refid="structsdxc__capabilities__t_1a3093c5019c86340a1b6ffc489da8987e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a3093c5019c86340a1b6ffc489da8987e" kindref="member">sys_addr_64_bit_v4_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313" refid="structsdxc__capabilities__t_1aacc43aea9e833ca5d72d763fdefb01f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1aacc43aea9e833ca5d72d763fdefb01f5" kindref="member">sys_addr_64_bit_v3_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314" refid="structsdxc__capabilities__t_1a05657f642591159d6f93aa3074bc70c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a05657f642591159d6f93aa3074bc70c2" kindref="member">asysnc_interrupt_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315" refid="structsdxc__capabilities__t_1a3e57657a5e9c45803c7efcafd182f7d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a3e57657a5e9c45803c7efcafd182f7d6" kindref="member">slot_type_r</ref>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="317" refid="structsdxc__capabilities__t_1a9429ad8648ff8da0910bc1f5767debad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a9429ad8648ff8da0910bc1f5767debad" kindref="member">U</ref>;</highlight></codeline>
<codeline lineno="318" refid="structsdxc__capabilities__t_1a10f13d9a61bd39b79fc267e2deebbacd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>capabilities1;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="322" refid="structsdxc__capabilities__t_1a23c766702bd857a5bb10c97533e34240" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a23c766702bd857a5bb10c97533e34240" kindref="member">sdr50_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323" refid="structsdxc__capabilities__t_1a45e6a7edfbc86c5e1b983cee0cae464f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a45e6a7edfbc86c5e1b983cee0cae464f" kindref="member">sdr104_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324" refid="structsdxc__capabilities__t_1a2177ce4c40139f7bc675a5616e2a8d20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a2177ce4c40139f7bc675a5616e2a8d20" kindref="member">ddr50_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325" refid="structsdxc__capabilities__t_1a7977de402baf8f83e864d8c0a4cb0ada" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a7977de402baf8f83e864d8c0a4cb0ada" kindref="member">uhs2_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326" refid="structsdxc__capabilities__t_1a68e93dd21b2645afad0e238dcf541944" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a68e93dd21b2645afad0e238dcf541944" kindref="member">drv_type_a</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327" refid="structsdxc__capabilities__t_1aa8a7fa0037406b7288683f1c5bdfb359" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1aa8a7fa0037406b7288683f1c5bdfb359" kindref="member">drv_type_c</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328" refid="structsdxc__capabilities__t_1ae2d495065ca9cb652d1a120803ec2a7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1ae2d495065ca9cb652d1a120803ec2a7a" kindref="member">drv_type_d</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329" refid="structsdxc__capabilities__t_1aff34fcf790bfb6057ea2ee2ca5bee1a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1aff34fcf790bfb6057ea2ee2ca5bee1a4" kindref="member">reserved0</ref>:<sp/>1;</highlight></codeline>
<codeline lineno="330" refid="structsdxc__capabilities__t_1a9202a7517edd87d1bc9ab035d01f5343" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a9202a7517edd87d1bc9ab035d01f5343" kindref="member">retune_cnt</ref>:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="332" refid="structsdxc__capabilities__t_1a30072f2ab6aa483c4ad0f5ba31a2f391" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a30072f2ab6aa483c4ad0f5ba31a2f391" kindref="member">use_tuning_sdr50</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333" refid="structsdxc__capabilities__t_1a57c074321b98ae82fab3d053f5c47605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a57c074321b98ae82fab3d053f5c47605" kindref="member">re_tuning_modes</ref>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334" refid="structsdxc__capabilities__t_1a787b55a3c41240c87b80e5b4bd0b20d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a787b55a3c41240c87b80e5b4bd0b20d9" kindref="member">clk_mul</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="336" refid="structsdxc__capabilities__t_1a5136b1fb9900ca16e218689b85bc8aac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a5136b1fb9900ca16e218689b85bc8aac" kindref="member">adma3_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337" refid="structsdxc__capabilities__t_1a49eead4e517f99543aaf525c0d58bf69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a49eead4e517f99543aaf525c0d58bf69" kindref="member">vdd2_1v8_support</ref>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>U;</highlight></codeline>
<codeline lineno="341" refid="structsdxc__capabilities__t_1afa33397ca5f42a935b3fdebbd693812e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>capabilities2;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345" refid="structsdxc__capabilities__t_1aeb2f74511ae21f85fbf048b57222f6b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1aeb2f74511ae21f85fbf048b57222f6b7" kindref="member">max_current_3v3</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346" refid="structsdxc__capabilities__t_1a75304850f8d522a056e3c9d6f9280503" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a75304850f8d522a056e3c9d6f9280503" kindref="member">max_current_3v0</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347" refid="structsdxc__capabilities__t_1a133fe070a27000f382bc9d98656aa2e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a133fe070a27000f382bc9d98656aa2e1" kindref="member">max_current_1v8</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348" refid="structsdxc__capabilities__t_1a3f1fa689afa6965b2c48882241a06a88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1a3f1fa689afa6965b2c48882241a06a88" kindref="member">reserved</ref>:<sp/>8;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>U;</highlight></codeline>
<codeline lineno="351" refid="structsdxc__capabilities__t_1a4f58fad1f15d0d099451c7b7570a9027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>curr_capabilities1;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355" refid="structsdxc__capabilities__t_1ab0d73ec56311374276e1cc1efa65801c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__capabilities__t_1ab0d73ec56311374276e1cc1efa65801c" kindref="member">max_current_vdd2_1v8</ref>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved:<sp/>24;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>U;</highlight></codeline>
<codeline lineno="359" refid="structsdxc__capabilities__t_1a660283795882e9f9397c00757fb4e987" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>curr_capabilities2;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">}<sp/><ref refid="structsdxc__capabilities__t" kindref="compound">sdxc_capabilities_t</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_sdxc_dev_resp_type<sp/>{</highlight></codeline>
<codeline lineno="367" refid="hpm__sdxc__drv_8h_1a18000d9b73d3c9891041a986673009dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a18000d9b73d3c9891041a986673009dc" kindref="member">sdxc_dev_resp_none</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="368" refid="hpm__sdxc__drv_8h_1aa1180d175cc3b57eb7cbb9339c2be905" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1aa1180d175cc3b57eb7cbb9339c2be905" kindref="member">sdxc_dev_resp_r1</ref>,</highlight></codeline>
<codeline lineno="369" refid="hpm__sdxc__drv_8h_1a5f8bc016ea01084afe65d44989569ff3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a5f8bc016ea01084afe65d44989569ff3" kindref="member">sdxc_dev_resp_r1b</ref>,</highlight></codeline>
<codeline lineno="370" refid="hpm__sdxc__drv_8h_1ab1d8adf4fc4ac42c4ab6605573b69fa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1ab1d8adf4fc4ac42c4ab6605573b69fa6" kindref="member">sdxc_dev_resp_r2</ref>,</highlight></codeline>
<codeline lineno="371" refid="hpm__sdxc__drv_8h_1a9a8e987937c88922989e15db5a48e93c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a9a8e987937c88922989e15db5a48e93c" kindref="member">sdxc_dev_resp_r3</ref>,</highlight></codeline>
<codeline lineno="372" refid="hpm__sdxc__drv_8h_1a8d7eb356d79617abc46bafdf5a31b26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a8d7eb356d79617abc46bafdf5a31b26b" kindref="member">sdxc_dev_resp_r4</ref>,</highlight></codeline>
<codeline lineno="373" refid="hpm__sdxc__drv_8h_1a34f82caa72678907d5c7ae328efc6438" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a34f82caa72678907d5c7ae328efc6438" kindref="member">sdxc_dev_resp_r5</ref>,</highlight></codeline>
<codeline lineno="374" refid="hpm__sdxc__drv_8h_1abd21c4ec644e35eb2bada7d9eab04b3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1abd21c4ec644e35eb2bada7d9eab04b3d" kindref="member">sdxc_dev_resp_r5b</ref>,</highlight></codeline>
<codeline lineno="375" refid="hpm__sdxc__drv_8h_1aa0a1e83407872c2abe5b2fa575dbedfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1aa0a1e83407872c2abe5b2fa575dbedfd" kindref="member">sdxc_dev_resp_r6</ref>,</highlight></codeline>
<codeline lineno="376" refid="hpm__sdxc__drv_8h_1a5093cb3e953cec4da080dbe4c6b5808c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdxc__drv_8h_1a5093cb3e953cec4da080dbe4c6b5808c" kindref="member">sdxc_dev_resp_r7</ref>,</highlight></codeline>
<codeline lineno="377" refid="group__sdxc__interface_1gace11ac40e88550ca7b89d30584247543" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gace11ac40e88550ca7b89d30584247543" kindref="member">sdxc_dev_resp_type_t</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_command<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cmd_index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cmd_argument;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cmd_flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ga1543c014abbb97dc5e873dbef7092297" kindref="member">sdxc_command_type_t</ref><sp/>cmd_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gace11ac40e88550ca7b89d30584247543" kindref="member">sdxc_dev_resp_type_t</ref><sp/>resp_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>resp_error_flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>response[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>auto_cmd_resp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cmd_timeout_ms;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392" refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_data_list<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>*data_addr;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>data_size;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_data_list<sp/>*data_list;</highlight></codeline>
<codeline lineno="401" refid="group__sdxc__interface_1gaa724f349a37ce2a3e63b1f73a6ef19f0" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gaa724f349a37ce2a3e63b1f73a6ef19f0" kindref="member">sdxc_data_list_t</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_data<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_auto_cmd12;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_auto_cmd23;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_ignore_error;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_type;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>block_size;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>block_cnt;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>*rx_data;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*tx_data;</highlight></codeline>
<codeline lineno="415" refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421" refid="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628aee467041660608bc02e9cdd601be9bf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628aee467041660608bc02e9cdd601be9bf2" kindref="member">sdxc_xfer_data_normal</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422" refid="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628ab8387c9c070610e53f7e18ed8248e541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628ab8387c9c070610e53f7e18ed8248e541" kindref="member">sdxc_xfer_data_boot</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423" refid="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628a5a4b9f0510d3398611f785a3bfe8fc9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gga48b7364b5ceec8a2d131dc2cf2587628a5a4b9f0510d3398611f785a3bfe8fc9f" kindref="member">sdxc_xfer_data_boot_continuous</ref><sp/>=<sp/>2U,<sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal">};</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_xfer<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref><sp/>*data;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref><sp/>*command;</highlight></codeline>
<codeline lineno="432" refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_adma_config<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ga3523112a8d468ca2333d5299b420bd70" kindref="member">sdxc_dma_type_t</ref><sp/>dma_type;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>*adma_table;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>adma_table_words;</highlight></codeline>
<codeline lineno="441" refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="444" refid="group__sdxc__interface_1ggaafc5993fe6fd7fec62e94ef57859c353a89e9d880ccd9f305c773af3e38926301" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ggaafc5993fe6fd7fec62e94ef57859c353a89e9d880ccd9f305c773af3e38926301" kindref="member">sdxc_adma_desc_single_flag</ref><sp/>=<sp/>0U,</highlight></codeline>
<codeline lineno="445" refid="group__sdxc__interface_1ggaafc5993fe6fd7fec62e94ef57859c353a803b0b7d09e2149f4e9b58c338959f36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ggaafc5993fe6fd7fec62e94ef57859c353a803b0b7d09e2149f4e9b58c338959f36" kindref="member">sdxc_adma_desc_multi_flag</ref><sp/>=<sp/>1U,</highlight></codeline>
<codeline lineno="446"><highlight class="normal">};</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_config<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>data_timeout;<sp/></highlight></codeline>
<codeline lineno="453" refid="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" kindref="member">sdxc_config_t</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_adma2_descriptor<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>valid:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>end:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>interrupt:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>act:<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len_upper:<sp/>10;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len_lower:<sp/>16;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len_attr;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*addr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="471" refid="group__sdxc__interface_1gaf91cc3447e777bfc9f04a8db7144a548" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gaf91cc3447e777bfc9f04a8db7144a548" kindref="member">sdxc_adma2_descriptor_t</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="group__sdxc__interface_1ga2a8d7b0f163fa13e3f3f01381f924b81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_VALID_FLAG<sp/>(1UL<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="group__sdxc__interface_1ga38ee4cea133045eb496ed1fa16a0c885" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_END_FLAG<sp/>(1UL<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="group__sdxc__interface_1ga09a08fdbc357e9c902e70c363028cd8e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_INTERRUPT_FLAG<sp/>(1UL<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="group__sdxc__interface_1ga1f0809860a826aa3be10b2101ba3aa7b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_ACT0_FLAG<sp/>(1UL<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="group__sdxc__interface_1gac6fadd687de744297397f0d475bb2cda" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_ACT1_FLAG<sp/>(1UL<sp/>&lt;&lt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="group__sdxc__interface_1ga638615101471c0cbe1d094d8c5e5e53b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_ACT2_FLAG<sp/>(1UL<sp/>&lt;&lt;<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="group__sdxc__interface_1gafcd87a47ab359ae2bfbfcbe1d836eb26" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_ADDR_LEN<sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="group__sdxc__interface_1ga67c183f4215f7c98f0498365c454d19b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_LEN_ALIGN<sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="group__sdxc__interface_1ga3a88bd55f11c72a61bf8d4f358815245" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_TYPE_NOP<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="group__sdxc__interface_1gaba1b34f20140319b0524b61718e64533" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_TYPE_TRANS<sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="group__sdxc__interface_1ga81dc0a42b65e90019306bda00a702268" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA2_DESC_TYPE_LINK<sp/>(6U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="group__sdxc__interface_1gacf79311a57db9034c266c0aed82408c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA3_DESC_TYPE_FOR_SD_MODE<sp/>(0x1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="group__sdxc__interface_1ga5f4abb15cc243673fcd064053fbd0517" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_AMDA3_DESC_TYPE_INTEGRATED_LINKER<sp/>(7U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="group__sdxc__interface_1ga0d84d27f4539a473744cceb256a7ab16" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA3_CMD_FOR_SD_DESC_ATTR<sp/>(0x09U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="group__sdxc__interface_1ga475a115f9a3b06d7dd2a7a25898354e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA3_INTEGRATED_DESC_ATTR<sp/>(0x39U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="group__sdxc__interface_1gac9154c04122dc30ced6975e522efec4f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA3_CMD_DESC_IDX_32BIT_BLK_CNT<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="group__sdxc__interface_1ga0fd2a10aaf6e9886daebf890350afea8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA3_CMD_DESC_IDX_BLK_SIZE<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="group__sdxc__interface_1gabfcedd6e8401f08fc105d7ffcde83417" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA3_CMD_DESC_IDX_ARG<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="group__sdxc__interface_1ga7a316ceba92d4dbf063fe305bed61164" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDXC_ADMA3_CMD_DESC_IDX_CMD_XFER<sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_adma3_cmd_sd_desc<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>attr;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>data;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>entry[4];</highlight></codeline>
<codeline lineno="505" refid="group__sdxc__interface_1gad098c3eefea878ad5bafff00e23edb88" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1gad098c3eefea878ad5bafff00e23edb88" kindref="member">sdxc_adma3_cmd_sd_desc_t</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_adma3_integrated_desc<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>attr;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gad098c3eefea878ad5bafff00e23edb88" kindref="member">sdxc_adma3_cmd_sd_desc_t</ref><sp/>*cmd_desc_ptr;</highlight></codeline>
<codeline lineno="513" refid="group__sdxc__interface_1ga86c1afe2694d759dfa2a6d6920f69629" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga86c1afe2694d759dfa2a6d6920f69629" kindref="member">sdxc_adma3_integrated_desc_t</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_sdxc_boot_config<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ack_timeout_cnt;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gad7dfc4c7d2c345d659ce3a1db254f7e5" kindref="member">sdxc_boot_mode_t</ref><sp/>boot_mode;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>block_cnt;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>block_size;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_boot_ack;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_auto_stop_at_block_gap;</highlight></codeline>
<codeline lineno="525" refid="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" refkind="member"><highlight class="normal">}<sp/><ref refid="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" kindref="member">sdxc_boot_config_t</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="structsdxc__xfer__callback__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="528" refid="structsdxc__xfer__callback__t_1a0820154ee281aeac4d92bb25e6ecae0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*card_inserted)(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/><sp/>*base,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="529" refid="structsdxc__xfer__callback__t_1a02e3ecc16416065b66dd9b84c0f805de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*card_removed)(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/><sp/>*base,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="530" refid="structsdxc__xfer__callback__t_1a231ca439dd3272ae502c74da4eef7bbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*sdio_interrupt)(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/><sp/>*base,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="531" refid="structsdxc__xfer__callback__t_1ad57189eebd6991a1260794c57fc5c7f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*block_gap)(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/><sp/>*base,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="532" refid="structsdxc__xfer__callback__t_1acbfdf66c84cd446509f567cee916a2f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*xfer_complete)(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}<sp/><ref refid="structsdxc__xfer__callback__t" kindref="compound">sdxc_xfer_callback_t</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="structsdxc__handle__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536" refid="structsdxc__handle__t_1aa13ad3065d5c81de64a22fc8d7f70cff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref><sp/>*</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structsdxc__handle__t_1aa13ad3065d5c81de64a22fc8d7f70cff" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="537" refid="structsdxc__handle__t_1aaa9855b9512fe3c323c5ba9486bde112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref><sp/><sp/>*</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structsdxc__handle__t_1aaa9855b9512fe3c323c5ba9486bde112" kindref="member">cmd</ref>;</highlight></codeline>
<codeline lineno="538" refid="structsdxc__handle__t_1a0e29941a6b4c633dca41cd0466bd29a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structsdxc__handle__t_1a0e29941a6b4c633dca41cd0466bd29a2" kindref="member">xferred_words</ref>;</highlight></codeline>
<codeline lineno="539" refid="structsdxc__handle__t_1a1f8b2d7f30d22308067d3fcc9787a360" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsdxc__xfer__callback__t" kindref="compound">sdxc_xfer_callback_t</ref><sp/><ref refid="structsdxc__handle__t_1a1f8b2d7f30d22308067d3fcc9787a360" kindref="member">callback</ref>;</highlight></codeline>
<codeline lineno="540" refid="structsdxc__handle__t_1ab5b9cc3e51a35d40302f664dab7d7cc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structsdxc__handle__t_1ab5b9cc3e51a35d40302f664dab7d7cc5" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}<sp/><ref refid="structsdxc__handle__t" kindref="compound">sdxc_handle_t</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="group__sdxc__interface_1gaf58fbe511d15f703692541782f387cdf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*<ref refid="group__sdxc__interface_1gaf58fbe511d15f703692541782f387cdf" kindref="member">sdxc_xfer_func_t</ref>)(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref><sp/>*content);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="structsdxc__host__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="546" refid="structsdxc__host__t_1a9e2e8a17097f80f9ad668a5fa8978dd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*<ref refid="structsdxc__host__t_1a9e2e8a17097f80f9ad668a5fa8978dd5" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="547" refid="structsdxc__host__t_1abe4a861580249feca7e1fb065eaf94c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsdxc__host__t_1abe4a861580249feca7e1fb065eaf94c5" kindref="member">src_clk_hz</ref>;</highlight></codeline>
<codeline lineno="548" refid="structsdxc__host__t_1a733eeb24082cabee17e8002ddbd7b67f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" kindref="member">sdxc_config_t</ref><sp/><ref refid="structsdxc__host__t_1a733eeb24082cabee17e8002ddbd7b67f" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="549" refid="structsdxc__host__t_1a403fccebffc810bcb35d595e94b83c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsdxc__capabilities__t" kindref="compound">sdxc_capabilities_t</ref><sp/><ref refid="structsdxc__host__t_1a403fccebffc810bcb35d595e94b83c57" kindref="member">capability</ref>;</highlight></codeline>
<codeline lineno="550" refid="structsdxc__host__t_1a97560fb2472278a1cabb04208d066687" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gaf58fbe511d15f703692541782f387cdf" kindref="member">sdxc_xfer_func_t</ref><sp/><ref refid="structsdxc__host__t_1a97560fb2472278a1cabb04208d066687" kindref="member">xfer</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}<sp/><ref refid="structsdxc__host__t" kindref="compound">sdxc_host_t</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="563" refid="group__sdxc__interface_1ga6a826eb5ed7075f21da7f3ce0ec51af4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__sdxc__interface_1ga6a826eb5ed7075f21da7f3ce0ec51af4" kindref="member">sdxc_get_interrupt_status</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base-&gt;<ref refid="structSDXC__Type_1af85be18ba23896d18186fe9ed6504b5f" kindref="member">INT_STAT</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="group__sdxc__interface_1ga314df25e8301a829f7890e019f674d2b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga314df25e8301a829f7890e019f674d2b" kindref="member">sdxc_is_card_inserted</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(base-&gt;<ref refid="structSDXC__Type_1a1354e44f426891258cb86fde8b9a8483" kindref="member">PSTATE</ref>,<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1af545c6b888f8d97487ac129a4f5e6192" kindref="member">SDXC_PSTATE_CARD_INSERTED_MASK</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="group__sdxc__interface_1ga877f3616bd2dd0700e904974f58762fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga877f3616bd2dd0700e904974f58762fa" kindref="member">sdxc_is_write_protected</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga7b40dad25644eb1ce4eca8daabb140b2" kindref="member">IS_HPM_BITMASK_CLR</ref>(base-&gt;<ref refid="structSDXC__Type_1a1354e44f426891258cb86fde8b9a8483" kindref="member">PSTATE</ref>,<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a96c85844661a6a8044a57c18d19e8744" kindref="member">SDXC_PSTATE_WR_PROTECT_SW_LVL_MASK</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="group__sdxc__interface_1gaa391eb3d08898c6ba7355a52b4c60003" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gaa391eb3d08898c6ba7355a52b4c60003" kindref="member">sdxc_clear_interrupt_status</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint32_t<sp/>status_mask)</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1af85be18ba23896d18186fe9ed6504b5f" kindref="member">INT_STAT</ref><sp/>=<sp/>status_mask;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="group__sdxc__interface_1gae5f0710dfc49f88f2329f2344b7f9f93" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gae5f0710dfc49f88f2329f2344b7f9f93" kindref="member">sdxc_enable_interrupt_status</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ad221a570baa6e24d1330c9364d14b53d" kindref="member">INT_STAT_EN</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ad221a570baa6e24d1330c9364d14b53d" kindref="member">INT_STAT_EN</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="group__sdxc__interface_1ga3b728a911debd78741f3a610632aece3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga3b728a911debd78741f3a610632aece3" kindref="member">sdxc_enable_interrupt_signal</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a9e4767a34c1719894a49c7e90c1d1be3" kindref="member">INT_SIGNAL_EN</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a9e4767a34c1719894a49c7e90c1d1be3" kindref="member">INT_SIGNAL_EN</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1ga234d3b0deb7f4f11f98570b5cd8d0fc2" kindref="member">sdxc_get_capabilities</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="structsdxc__capabilities__t" kindref="compound">sdxc_capabilities_t</ref><sp/>*capabilities);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="group__sdxc__interface_1ga772d6ade95adacf74717f5f0ead2e6a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__sdxc__interface_1ga772d6ade95adacf74717f5f0ead2e6a2" kindref="member">sdxc_get_adma_error_status</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base-&gt;<ref refid="structSDXC__Type_1a159fb0523cdf65f3f3454a831c75feec" kindref="member">ADMA_ERR_STAT</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="group__sdxc__interface_1gaff483f5ecd4fa1b992b2ba5592abcdfc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gaff483f5ecd4fa1b992b2ba5592abcdfc" kindref="member">sdxc_configure_data_timeout</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint8_t<sp/>timeout)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1af713f34d73cd19145bfcd4725d1c2cd3" kindref="member">SYS_CTRL</ref><sp/>=<sp/>(base-&gt;<ref refid="structSDXC__Type_1af713f34d73cd19145bfcd4725d1c2cd3" kindref="member">SYS_CTRL</ref><sp/>&amp;<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1af36f103334f257450318b4aa0be70575" kindref="member">SDXC_SYS_CTRL_TOUT_CNT_MASK</ref>)<sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a6b3e33004a50a8cebda62f50a8072611" kindref="member">SDXC_SYS_CTRL_TOUT_CNT_SET</ref>(timeout);</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="group__sdxc__interface_1ga6d4e5053397f64274b6ad9afde77ed1f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga6d4e5053397f64274b6ad9afde77ed1f" kindref="member">sdxc_interrupt_at_block_gap</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a957eb9565f253a4cb99b055e3ff0ee98" kindref="member">SDXC_PROT_CTRL_INT_AT_BGAP_MASK</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a957eb9565f253a4cb99b055e3ff0ee98" kindref="member">SDXC_PROT_CTRL_INT_AT_BGAP_MASK</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="group__sdxc__interface_1ga492ca47ee6c0c903da015b616f636556" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga492ca47ee6c0c903da015b616f636556" kindref="member">sdxc_read_wait_control</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a87e70526c83aa8f1d466579180eefbc3" kindref="member">SDXC_PROT_CTRL_RD_WAIT_CTRL_MASK</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a87e70526c83aa8f1d466579180eefbc3" kindref="member">SDXC_PROT_CTRL_RD_WAIT_CTRL_MASK</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="group__sdxc__interface_1ga51791a8fdb9db034f738c19b43dddf08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga51791a8fdb9db034f738c19b43dddf08" kindref="member">sdxc_continue_request</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a8a1053b6fe8f64141ea1856d708aee9d" kindref="member">SDXC_PROT_CTRL_CONTINUE_REQ_MASK</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a8a1053b6fe8f64141ea1856d708aee9d" kindref="member">SDXC_PROT_CTRL_CONTINUE_REQ_MASK</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="group__sdxc__interface_1ga3107d1d7214dce827591fcbcaf4883d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga3107d1d7214dce827591fcbcaf4883d1" kindref="member">sdxc_stop_at_block_gap_request</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae0ecdc4e447cd9a205a46c0f52ee888e" kindref="member">SDXC_PROT_CTRL_STOP_BG_REQ_MASK</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae0ecdc4e447cd9a205a46c0f52ee888e" kindref="member">SDXC_PROT_CTRL_STOP_BG_REQ_MASK</ref>;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="group__sdxc__interface_1ga50a563ab166f03d39b1b379481c4fc4a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga50a563ab166f03d39b1b379481c4fc4a" kindref="member">sdxc_enable_high_speed</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1af651cb7db0bac879070a226d1c897706" kindref="member">SDXC_PROT_CTRL_HIGH_SPEED_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1af651cb7db0bac879070a226d1c897706" kindref="member">SDXC_PROT_CTRL_HIGH_SPEED_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="group__sdxc__interface_1gaf9ce4642c1fb04f99d3101843a5a135f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gaf9ce4642c1fb04f99d3101843a5a135f" kindref="member">sdxc_enable_power</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab25bba6de742ae617ef01511553f0b58" kindref="member">SDXC_PROT_CTRL_SD_BUS_PWR_VDD1_MASK</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac739c20306645a11667b65638852ec4d" kindref="member">PROT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab25bba6de742ae617ef01511553f0b58" kindref="member">SDXC_PROT_CTRL_SD_BUS_PWR_VDD1_MASK</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="748" refid="group__sdxc__interface_1gafd15f2b1cdc9b57770b041218f972144" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gafd15f2b1cdc9b57770b041218f972144" kindref="member">sdxc_enable_async_interrupt</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a86618147eae9dd0e5d431314abae4c37" kindref="member">SDXC_AC_HOST_CTRL_ASYNC_INT_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a86618147eae9dd0e5d431314abae4c37" kindref="member">SDXC_AC_HOST_CTRL_ASYNC_INT_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="group__sdxc__interface_1ga25db603d644a01c54b96186aea01ae59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga25db603d644a01c54b96186aea01ae59" kindref="member">sdxc_enable_preset</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a0f63a88be0519624bfa6ad8d5e960fef" kindref="member">SDXC_AC_HOST_CTRL_PRESET_VAL_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a0f63a88be0519624bfa6ad8d5e960fef" kindref="member">SDXC_AC_HOST_CTRL_PRESET_VAL_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="group__sdxc__interface_1ga22a261f70ff82aaad9b35f034f05954f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga22a261f70ff82aaad9b35f034f05954f" kindref="member">sdxc_enable_host_version4</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a899522a33ec1e71bc4c71a6e68e69fb0" kindref="member">SDXC_AC_HOST_CTRL_HOST_VER4_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a899522a33ec1e71bc4c71a6e68e69fb0" kindref="member">SDXC_AC_HOST_CTRL_HOST_VER4_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="group__sdxc__interface_1gadb40d63aa02717f3fe73a6ffd6810d0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gadb40d63aa02717f3fe73a6ffd6810d0f" kindref="member">sdxc_execute_tuning</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a5a03e32c5416c0c5d27086d12ae68f68" kindref="member">SDXC_AC_HOST_CTRL_EXEC_TUNING_MASK</ref><sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae9c7df3a4de02e8a2051aeabd34c3b0d" kindref="member">SDXC_AC_HOST_CTRL_SAMPLE_CLK_SEL_MASK</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="799" refid="group__sdxc__interface_1ga6d5b2c208949f978dda169044aeba9dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga6d5b2c208949f978dda169044aeba9dc" kindref="member">sdxc_enable_software_tuning</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a03f6c1e29b190e6896e09171c331a0f7" kindref="member">AUTO_TUNING_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a70bbe7887511d7deab0a392c0023482e" kindref="member">SDXC_AUTO_TUNING_CTRL_SW_TUNE_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a03f6c1e29b190e6896e09171c331a0f7" kindref="member">AUTO_TUNING_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a70bbe7887511d7deab0a392c0023482e" kindref="member">SDXC_AUTO_TUNING_CTRL_SW_TUNE_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="group__sdxc__interface_1ga7c8bd9eb9c354d64b4c077c2ceac19de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga7c8bd9eb9c354d64b4c077c2ceac19de" kindref="member">sdxc_reset_tuning_engine</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae9c7df3a4de02e8a2051aeabd34c3b0d" kindref="member">SDXC_AC_HOST_CTRL_SAMPLE_CLK_SEL_MASK</ref>;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="group__sdxc__interface_1gab793ff643ea3292caa77fe1a2245ea3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gab793ff643ea3292caa77fe1a2245ea3e" kindref="member">sdxc_switch_to_1v8_signal</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a95a22eadb70eb9380a1bb07b7bd7d921" kindref="member">SDXC_AC_HOST_CTRL_SIGNALING_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a402e74f7ed0e1d5b23216e4142d0a133" kindref="member">AC_HOST_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a95a22eadb70eb9380a1bb07b7bd7d921" kindref="member">SDXC_AC_HOST_CTRL_SIGNALING_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="group__sdxc__interface_1ga3ce6f46d4554c5bfbd577412387976b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga3ce6f46d4554c5bfbd577412387976b1" kindref="member">sdxc_enable_internal_clock</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1af713f34d73cd19145bfcd4725d1c2cd3" kindref="member">SYS_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a2f19ad1d0fb58c2c983be619e1bc62ae" kindref="member">SDXC_SYS_CTRL_INTERNAL_CLK_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1af713f34d73cd19145bfcd4725d1c2cd3" kindref="member">SYS_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a2f19ad1d0fb58c2c983be619e1bc62ae" kindref="member">SDXC_SYS_CTRL_INTERNAL_CLK_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="group__sdxc__interface_1ga536766b6ca11b4ab78d4707b5e825ccd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__sdxc__interface_1ga536766b6ca11b4ab78d4707b5e825ccd" kindref="member">sdxc_get_present_status</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base-&gt;<ref refid="structSDXC__Type_1a1354e44f426891258cb86fde8b9a8483" kindref="member">PSTATE</ref>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="group__sdxc__interface_1ga8516180256eda9668d972e08b7d262b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga8516180256eda9668d972e08b7d262b2" kindref="member">sdxc_is_data_buf_writable</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((base-&gt;<ref refid="structSDXC__Type_1a1354e44f426891258cb86fde8b9a8483" kindref="member">PSTATE</ref><sp/>&amp;<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab317344bc8476422285ff80d3cdd3c2d" kindref="member">SDXC_PSTATE_BUF_WR_ENABLE_MASK</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="group__sdxc__interface_1gaa37872e3ede28f4e16e29cd13f6a4581" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gaa37872e3ede28f4e16e29cd13f6a4581" kindref="member">sdxc_is_data_buf_readable</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((base-&gt;<ref refid="structSDXC__Type_1a1354e44f426891258cb86fde8b9a8483" kindref="member">PSTATE</ref><sp/>&amp;<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ad7b01fee9ed8fa3d81af800f8340b300" kindref="member">SDXC_PSTATE_BUF_RD_ENABLE_MASK</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="882" refid="group__sdxc__interface_1ga21ce97388c5a36966fca710f71b11d86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__sdxc__interface_1ga21ce97388c5a36966fca710f71b11d86" kindref="member">sdxc_read_data</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base-&gt;<ref refid="structSDXC__Type_1a9ce49b2929074565738a7ada64312651" kindref="member">BUF_DATA</ref>;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="group__sdxc__interface_1gad883aa5e051210de894123000a3ae605" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gad883aa5e051210de894123000a3ae605" kindref="member">sdxc_write_data</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint32_t<sp/>data)</highlight></codeline>
<codeline lineno="893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a9ce49b2929074565738a7ada64312651" kindref="member">BUF_DATA</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="group__sdxc__interface_1gae07bfaee8e23e7cabef01f69826c3815" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__sdxc__interface_1gae07bfaee8e23e7cabef01f69826c3815" kindref="member">sdxc_get_data3_0_level</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a349c9a7ed1f60d4666d3bd1defaa740f" kindref="member">SDXC_PSTATE_DAT_3_0_GET</ref>(base-&gt;<ref refid="structSDXC__Type_1a1354e44f426891258cb86fde8b9a8483" kindref="member">PSTATE</ref>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="912" refid="group__sdxc__interface_1ga71d673cde5fabb5f94f1aae4e6a38afa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga71d673cde5fabb5f94f1aae4e6a38afa" kindref="member">sdxc_enable_auto_tuning</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a03f6c1e29b190e6896e09171c331a0f7" kindref="member">AUTO_TUNING_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7af49455c62805d184cc38275a0c8476" kindref="member">SDXC_AUTO_TUNING_CTRL_AT_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a03f6c1e29b190e6896e09171c331a0f7" kindref="member">AUTO_TUNING_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7af49455c62805d184cc38275a0c8476" kindref="member">SDXC_AUTO_TUNING_CTRL_AT_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="927" refid="group__sdxc__interface_1ga071c2cb3e37f57d6097b7e859628b0a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga071c2cb3e37f57d6097b7e859628b0a0" kindref="member">sdxc_stop_clock_during_phase_code_change</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a03f6c1e29b190e6896e09171c331a0f7" kindref="member">AUTO_TUNING_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a71746bc6fde74c84e7acbdf9f3ee8d13" kindref="member">SDXC_AUTO_TUNING_CTRL_TUNE_CLK_STOP_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a03f6c1e29b190e6896e09171c331a0f7" kindref="member">AUTO_TUNING_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a71746bc6fde74c84e7acbdf9f3ee8d13" kindref="member">SDXC_AUTO_TUNING_CTRL_TUNE_CLK_STOP_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="942" refid="group__sdxc__interface_1ga012eafdabf4041f05edb741a3c4c2707" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga012eafdabf4041f05edb741a3c4c2707" kindref="member">sdxc_set_post_change_delay</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint8_t<sp/>delay_cnt)</highlight></codeline>
<codeline lineno="943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a03f6c1e29b190e6896e09171c331a0f7" kindref="member">AUTO_TUNING_CTRL</ref><sp/>=<sp/>(base-&gt;<ref refid="structSDXC__Type_1a03f6c1e29b190e6896e09171c331a0f7" kindref="member">AUTO_TUNING_CTRL</ref><sp/>&amp;<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a744fd282d8d74320fa4067b8bc3e36fa" kindref="member">SDXC_AUTO_TUNING_CTRL_POST_CHANGE_DLY_MASK</ref>)<sp/>\</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a76dd5a9a863881b5a0214f8b48bc08f7" kindref="member">SDXC_AUTO_TUNING_CTRL_POST_CHANGE_DLY_SET</ref>(delay_cnt<sp/>-<sp/>1U);</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="group__sdxc__interface_1ga8686b0521dce6c61c57a63c599c8f3a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga8686b0521dce6c61c57a63c599c8f3a8" kindref="member">sdxc_enable_emmc_support</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="954"><highlight class="normal">{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac9d5b07e845b0eca9899996d4b76332c" kindref="member">EMMC_BOOT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a034655424a4fbde608305604843ed052" kindref="member">SDXC_EMMC_BOOT_CTRL_CARD_IS_EMMC_MASK</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac9d5b07e845b0eca9899996d4b76332c" kindref="member">EMMC_BOOT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a034655424a4fbde608305604843ed052" kindref="member">SDXC_EMMC_BOOT_CTRL_CARD_IS_EMMC_MASK</ref>;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="group__sdxc__interface_1gae2fc7bf986b78a4965d2f6ccf8e24833" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gae2fc7bf986b78a4965d2f6ccf8e24833" kindref="member">sdxc_enable_mmc_boot</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac9d5b07e845b0eca9899996d4b76332c" kindref="member">EMMC_BOOT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a233ddc99df942b1cd7166bb66620032f" kindref="member">SDXC_EMMC_BOOT_CTRL_MAN_BOOT_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac9d5b07e845b0eca9899996d4b76332c" kindref="member">EMMC_BOOT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a233ddc99df942b1cd7166bb66620032f" kindref="member">SDXC_EMMC_BOOT_CTRL_MAN_BOOT_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="group__sdxc__interface_1gad8ba9664b2f00c65b810403cafe6301b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gad8ba9664b2f00c65b810403cafe6301b" kindref="member">sdxc_force_event</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a4668367b90f5c6fd35738544893f5b53" kindref="member">FORCE_EVENT</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="group__sdxc__interface_1ga30fb0c706288794a858068263426da6a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga30fb0c706288794a858068263426da6a" kindref="member">sdxc_enable_sd_clock</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1af713f34d73cd19145bfcd4725d1c2cd3" kindref="member">SYS_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aa6029d7ffb12680df88ad4050674e2e5" kindref="member">SDXC_SYS_CTRL_SD_CLK_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(base-&gt;<ref refid="structSDXC__Type_1af713f34d73cd19145bfcd4725d1c2cd3" kindref="member">SYS_CTRL</ref>,<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aa6029d7ffb12680df88ad4050674e2e5" kindref="member">SDXC_SYS_CTRL_SD_CLK_EN_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1af713f34d73cd19145bfcd4725d1c2cd3" kindref="member">SYS_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aa6029d7ffb12680df88ad4050674e2e5" kindref="member">SDXC_SYS_CTRL_SD_CLK_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(base-&gt;<ref refid="structSDXC__Type_1af713f34d73cd19145bfcd4725d1c2cd3" kindref="member">SYS_CTRL</ref>,<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aa6029d7ffb12680df88ad4050674e2e5" kindref="member">SDXC_SYS_CTRL_SD_CLK_EN_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009" refid="group__sdxc__interface_1gaa81097ebdf516fd8afb5ea38f4eee14e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gaa81097ebdf516fd8afb5ea38f4eee14e" kindref="member">sdxc_set_center_phase_code</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1a30189fc72b4252c04b1ed048d205e56e" kindref="member">AUTO_TUNING_STAT</ref><sp/>=<sp/>(base-&gt;<ref refid="structSDXC__Type_1a30189fc72b4252c04b1ed048d205e56e" kindref="member">AUTO_TUNING_STAT</ref><sp/>&amp;<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1acf9620963824ffbfcf37595d080e5160" kindref="member">SDXC_AUTO_TUNING_STAT_CENTER_PH_CODE_MASK</ref>)<sp/>|</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ac1533dd8e05d8d242bba1d11b023f98b" kindref="member">SDXC_AUTO_TUNING_STAT_CENTER_PH_CODE_SET</ref>(value);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="group__sdxc__interface_1ga6957049b45df15722a34d76a6a765630" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga6957049b45df15722a34d76a6a765630" kindref="member">sdxc_enable_enhanced_strobe</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac9d5b07e845b0eca9899996d4b76332c" kindref="member">EMMC_BOOT_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7f852dbafc8a1d47bcff04246aab20b4" kindref="member">SDXC_EMMC_BOOT_CTRL_ENH_STROBE_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDXC__Type_1ac9d5b07e845b0eca9899996d4b76332c" kindref="member">EMMC_BOOT_CTRL</ref><sp/>&amp;=<sp/>~<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7f852dbafc8a1d47bcff04246aab20b4" kindref="member">SDXC_EMMC_BOOT_CTRL_ENH_STROBE_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gaa9ce2278139e0437c932acc51ea606cf" kindref="member">sdxc_set_mmc_boot_config</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" kindref="member">sdxc_boot_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1ga30197db1d82678f456626bb6f47d3e2a" kindref="member">sdxc_send_command</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref><sp/>*cmd);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1gadbd59858bc0a4299da544b32645d77c7" kindref="member">sdxc_receive_cmd_response</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref><sp/>*cmd);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1gab72d27dc5881670acade5fa1d938675c" kindref="member">sdxc_parse_interrupt_status</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1gabeae58ec5cd7899ec0c8b91afdfc94e9" kindref="member">sdxc_wait_cmd_done</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref><sp/>*cmd,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>polling_cmd_done);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga0d82d3656ba9b1dc07ac67b2405b735d" kindref="member">sdxc_set_data_config</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" kindref="member">sdxc_xfer_direction_t</ref><sp/>data_dir,<sp/>uint32_t<sp/>block_cnt,<sp/>uint32_t<sp/>block_size);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1ga17142e754b982beb82fb3ea0fc72ed57" kindref="member">sdxc_set_adma_table_config</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref><sp/>*dma_cfg,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref><sp/>*data_cfg,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1ga25c19b7d0a9702e43203693f9620a9df" kindref="member">sdxc_set_adma2_desc</ref>(uint32_t<sp/>*adma_tbl,</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>adma_table_words,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*data_buf,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>data_bytes,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1ga5440d0ca74e525554894a86a9cdda088" kindref="member">sdxc_set_dma_config</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref><sp/>*dma_cfg,</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*data_addr,</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_auto_cmd23);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gab8a5e4767ee4378088c66aadea3b1fcf" kindref="member">sdxc_init</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" kindref="member">sdxc_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga73feb9897b8f5cf319e847a99e156a1b" kindref="member">sdxc_set_data_timeout</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint32_t<sp/>timeout_in_ms,<sp/>uint32_t<sp/>*actual_timeout_ms);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gac5fb3d55059ad32729acbb387f34b6ab" kindref="member">sdxc_set_speed_mode</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" kindref="member">sdxc_speed_mode_t</ref><sp/>mode);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga3ae9522477d9e42e05bb8ffc2550bce1" kindref="member">sdxc_set_data_bus_width</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" kindref="member">sdxc_bus_width_t</ref><sp/>width);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal">uint32_t<sp/><ref refid="group__sdxc__interface_1gae6f2e82b50fd078a88a5278c1ef22ba7" kindref="member">sdxc_get_data_bus_width</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1gae0635c97cad9b873abe5b7607193c08b" kindref="member">sdxc_select_voltage</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" kindref="member">sdxc_bus_voltage_option_t</ref><sp/>option);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga9b2e7b33139a03435fef1a3d189c6d7c" kindref="member">sdxc_reset</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" kindref="member">sdxc_sw_reset_type_t</ref><sp/>reset_type,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sdxc__interface_1ga4e6a818f8216a57938fd3b117b589103" kindref="member">sdxc_enable_wakeup_event</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" kindref="member">sdxc_wakeup_event_t</ref><sp/>evt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1gafa155b89ce0f4d2145046ac8741f5436" kindref="member">sdxc_transfer_blocking</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref><sp/>*dma_config,<sp/><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref><sp/>*xfer);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1gac11989ec620ff7b92909fd56ff289200" kindref="member">sdxc_transfer_nonblocking</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref><sp/>*dma_config,<sp/><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref><sp/>*xfer);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1ga9c4e2b433f70fe082bee6ce95b1f6d94" kindref="member">sdxc_error_recovery</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1ga96500ce7256b9bcdc3850d55bf1afad4" kindref="member">sdxc_perform_tuning_flow_sequence</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint8_t<sp/>tuning_cmd);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1ga849cf571dee804c559d6b8036572e304" kindref="member">sdxc_perform_software_tuning</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint8_t<sp/>tuning_cmd);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdxc__interface_1gae7626db5bce2a5a4ada6dbcd1da3d7bd" kindref="member">sdxc_perform_auto_tuning</ref>(<ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref><sp/>*base,<sp/>uint8_t<sp/>tuning_cmd);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*HPM_SDXC_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_sdxc_drv.h"/>
  </compounddef>
</doxygen>
