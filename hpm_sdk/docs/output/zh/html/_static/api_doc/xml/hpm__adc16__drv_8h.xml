<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hpm__adc16__drv_8h" kind="file" language="C++">
    <compoundname>hpm_adc16_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_adc16_regs.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <includedby refid="hpm__adc16__drv_8c" local="yes">drivers/src/hpm_adc16_drv.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>hpm_adc16_regs.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_adc16_drv.h</label>
        <link refid="hpm__adc16__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_soc_feature.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>drivers/src/hpm_adc16_drv.c</label>
        <link refid="hpm__adc16__drv_8c"/>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_adc16_drv.h</label>
        <link refid="hpm__adc16__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structadc16__config__t" prot="public">adc16_config_t</innerclass>
    <innerclass refid="structadc16__channel__config__t" prot="public">adc16_channel_config_t</innerclass>
    <innerclass refid="structadc16__channel__threshold__t" prot="public">adc16_channel_threshold_t</innerclass>
    <innerclass refid="structadc16__dma__config__t" prot="public">adc16_dma_config_t</innerclass>
    <innerclass refid="structadc16__seq__dma__data__t" prot="public">adc16_seq_dma_data_t</innerclass>
    <innerclass refid="structadc16__pmt__dma__data__t" prot="public">adc16_pmt_dma_data_t</innerclass>
    <innerclass refid="structadc16__prd__config__t" prot="public">adc16_prd_config_t</innerclass>
    <innerclass refid="structadc16__seq__queue__config__t" prot="public">adc16_seq_queue_config_t</innerclass>
    <innerclass refid="structadc16__seq__config__t" prot="public">adc16_seq_config_t</innerclass>
    <innerclass refid="structadc16__pmt__config__t" prot="public">adc16_pmt_config_t</innerclass>
      <sectiondef kind="user-defined">
      <header>Initialization and Deinitialization</header>
      <memberdef kind="function" id="group__adc16__interface_1ga528d2bc629d60cf2a651302d7b0b89de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adc16_get_default_config</definition>
        <argsstring>(adc16_config_t *config)</argsstring>
        <name>adc16_get_default_config</name>
        <param>
          <type><ref refid="structadc16__config__t" kindref="compound">adc16_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get a default configuration for an ADC16 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc16__config__t" kindref="compound">adc16_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="239" column="6" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="11" bodyend="20" declfile="drivers/inc/hpm_adc16_drv.h" declline="239" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga7092dae99754cdaf414a1927bc660764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adc16_get_channel_default_config</definition>
        <argsstring>(adc16_channel_config_t *config)</argsstring>
        <name>adc16_get_channel_default_config</name>
        <param>
          <type><ref refid="structadc16__channel__config__t" kindref="compound">adc16_channel_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get a default configuration for an ADC16 Channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc16__channel__config__t" kindref="compound">adc16_channel_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="246" column="6" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="22" bodyend="30" declfile="drivers/inc/hpm_adc16_drv.h" declline="246" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gabfcf94c8763a15417942cafe4bcdc9d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_deinit</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_deinit</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>De-initialize an ADC16 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of de-initializing an ADC16 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>De-initialize an ADC16 instance successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>De-initialize an ADC16 instance unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="256" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="146" bodyend="152" declfile="drivers/inc/hpm_adc16_drv.h" declline="256" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga29ae18f3a045b012e3a712bd57211aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_init</definition>
        <argsstring>(ADC16_Type *ptr, adc16_config_t *config)</argsstring>
        <name>adc16_init</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc16__config__t" kindref="compound">adc16_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize an ADC16 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc16__config__t" kindref="compound">adc16_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of initializing an ADC16 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC16 instance successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC16 instance unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="267" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="154" bodyend="201" declfile="drivers/inc/hpm_adc16_drv.h" declline="267" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gad71c54ee3dff867577fa50905466ab30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_init_channel</definition>
        <argsstring>(ADC16_Type *ptr, adc16_channel_config_t *config)</argsstring>
        <name>adc16_init_channel</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc16__channel__config__t" kindref="compound">adc16_channel_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize an ADC16 channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc16__channel__config__t" kindref="compound">adc16_channel_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of initializing an ADC16 channel. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC16 channel successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC16 channel unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="278" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="203" bodyend="230" declfile="drivers/inc/hpm_adc16_drv.h" declline="278" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gaac1af29523e4a8cdcd8b5d4d06905230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_get_channel_threshold</definition>
        <argsstring>(ADC16_Type *ptr, uint8_t ch, adc16_channel_threshold_t *config)</argsstring>
        <name>adc16_get_channel_threshold</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="structadc16__channel__threshold__t" kindref="compound">adc16_channel_threshold_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get thresholds of an ADC16 channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 channel number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the structure of channel threshold </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of getting thresholds of an ADC16 channel . </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC16 channel successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC16 channel unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="290" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="232" bodyend="244" declfile="drivers/inc/hpm_adc16_drv.h" declline="290" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gad9104b000a0efa16b6b65e31d2b017ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_set_prd_config</definition>
        <argsstring>(ADC16_Type *ptr, adc16_prd_config_t *config)</argsstring>
        <name>adc16_set_prd_config</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc16__prd__config__t" kindref="compound">adc16_prd_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the the period mode for an ADC16 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc16__prd__config__t" kindref="compound">adc16_prd_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of configuring the the period mode for an ADC16 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the the period mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the the period mode unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="317" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="302" bodyend="323" declfile="drivers/inc/hpm_adc16_drv.h" declline="317" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga74997d3d122564904c4894470e23c220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_set_seq_config</definition>
        <argsstring>(ADC16_Type *ptr, adc16_seq_config_t *config)</argsstring>
        <name>adc16_set_seq_config</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc16__seq__config__t" kindref="compound">adc16_seq_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the sequence mode for an ADC16 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to configuration struct of <ref refid="structadc16__seq__config__t" kindref="compound">adc16_seq_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of configuring the sequence mode for an ADC16 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the sequence mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the sequence mode unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="328" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="336" bodyend="361" declfile="drivers/inc/hpm_adc16_drv.h" declline="328" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gae8373223c527f7bb85a71321c020b038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_set_pmt_config</definition>
        <argsstring>(ADC16_Type *ptr, adc16_pmt_config_t *config)</argsstring>
        <name>adc16_set_pmt_config</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc16__pmt__config__t" kindref="compound">adc16_pmt_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the preemption mode for an ADC16 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to configuration struct of <ref refid="structadc16__pmt__config__t" kindref="compound">adc16_pmt_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of configuring the preemption mode for an ADC16 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the preemption mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the preemption mode unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="339" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="370" bodyend="398" declfile="drivers/inc/hpm_adc16_drv.h" declline="339" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga46bf5e0678374a216b2ddd3f259f2aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_set_pmt_queue_enable</definition>
        <argsstring>(ADC16_Type *ptr, uint8_t trig_ch, bool enable)</argsstring>
        <name>adc16_set_pmt_queue_enable</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Set the queue enable control. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trig_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral trigger channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to enable and false to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of setting queue enable in preemption. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC16 conversion in oneshot mode successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC16 conversion in oneshot mode unsuccessfully due to passing invalid arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="351" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="400" bodyend="417" declfile="drivers/inc/hpm_adc16_drv.h" declline="351" declcolumn="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Enablement Control</header>
      <memberdef kind="function" id="group__adc16__interface_1ga497d99708be375f9283c13a9689bc986" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_seq_enable_hw_trigger</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_seq_enable_hw_trigger</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable the hw trigger control for the sequence mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="365" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gab4be0c9386629b1070d07ac9d2ed735c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_seq_disable_hw_trigger</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_seq_disable_hw_trigger</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable the hw trigger control for the sequence mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="375" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="375" bodyend="378"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>DMA Control</header>
      <memberdef kind="function" id="group__adc16__interface_1gaa499b8c9719aa2561b5d1a5880b233e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_set_seq_stop_pos</definition>
        <argsstring>(ADC16_Type *ptr, uint16_t stop_pos)</argsstring>
        <name>adc16_set_seq_stop_pos</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>stop_pos</declname>
        </param>
        <briefdescription>
<para>Configure the stop position offset in the specified memory of DMA write operation for the sequence mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stop_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>A stop position offset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="392" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="392" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga7d2a0bb0b5d434f5f4fc4d915e2f6b06" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_init_pmt_dma</definition>
        <argsstring>(ADC16_Type *ptr, uint32_t addr)</argsstring>
        <name>adc16_init_pmt_dma</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Configure the start address of DMA write operation for the preemption mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>A start address of DMA write operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="404" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gafbf9182408fe2273020418d57bfce958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_init_seq_dma</definition>
        <argsstring>(ADC16_Type *ptr, adc16_dma_config_t *config)</argsstring>
        <name>adc16_init_seq_dma</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc16__dma__config__t" kindref="compound">adc16_dma_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the start address of DMA write operation for the sequence mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to configuration struct of <ref refid="structadc16__dma__config__t" kindref="compound">adc16_dma_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation result of DMA initializing for the sequence mode </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC16 initialize in sequence mode successfully. Please refert to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC16 initialize in sequence mode unsuccessfully due to passing invalid arguments. Please refert to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="418" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="258" bodyend="300" declfile="drivers/inc/hpm_adc16_drv.h" declline="418" declcolumn="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Status</header>
      <memberdef kind="function" id="group__adc16__interface_1ga31730cfce13c2229b018fd2899c8f9dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t adc16_get_status_flags</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_get_status_flags</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get all ADC16 status flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A mask indicating all corresponding interrupt statuses. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>mask. Please refer to <ref refid="group__adc16__interface_1gab49c1866b4d36c96b3794bdf0a4d3d6f" kindref="member">adc16_irq_event_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="434" column="24" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="434" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gafbd981847633030661865c4fc9584917" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_disable_busywait</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_disable_busywait</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set value of the WAIT_DIS bit. The ADC does not block access to the associated peripheral bus until the ADC has completed its conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This API will be removed from V2.0.x </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="446" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga18d4ee267592949450cbbd126df93164" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_enable_busywait</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_enable_busywait</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set value of the WAIT_DIS bit. ADC blocks access to the associated peripheral bus until the ADC completes the conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000004"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This API will be removed from V2.0.x </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="458" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gad93c314e82245223bccc1392d83aff45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_set_nonblocking_read</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_set_nonblocking_read</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set nonblocking read in oneshot mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>An ADC does not block access to the associated peripheral whether it completes a conversion or not.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="469" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="469" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga383b51e9570ab22c85a04f45b75960d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_set_blocking_read</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_set_blocking_read</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set blocking read in oneshot mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>An ADC blocks access to the associated peripheral bus until it completes a conversion.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="480" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="480" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga2805fa5d8122edc1cf529d2ec2f60dcb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool adc16_is_nonblocking_mode</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_is_nonblocking_mode</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Judge whether the current setting is none-blocking mode or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result indicating the status of bus waiting. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>True</parametername>
</parameternamelist>
<parameterdescription>
<para>means that nonblocking reading. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>False</parametername>
</parameternamelist>
<parameterdescription>
<para>means that blocking reading. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="494" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="494" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga40ec2d8e61c96342b5c249134dbb9c0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool adc16_get_conv_valid_status</definition>
        <argsstring>(ADC16_Type *ptr, uint8_t ch)</argsstring>
        <name>adc16_get_conv_valid_status</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Get the status of a conversion validity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral channel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status indicating the validity of the current conversion result.</para>
</simplesect>
<simplesect kind="note"><para>This function is only used when the WAIT_DIS bit in the BUF_RESULT register is 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="508" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="508" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gae51a3a9480885246f0879a2e4b4343fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_clear_status_flags</definition>
        <argsstring>(ADC16_Type *ptr, uint32_t mask)</argsstring>
        <name>adc16_clear_status_flags</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear the status flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask that means the specified flags to be cleared. Please refer to <ref refid="group__adc16__interface_1gab49c1866b4d36c96b3794bdf0a4d3d6f" kindref="member">adc16_irq_event_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Only the specified flags can be cleared by writing the INT_STS register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="522" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="522" bodyend="525"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Interrupts</header>
      <memberdef kind="function" id="group__adc16__interface_1ga4e3921519adb696b6204f468935cfa02" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_enable_interrupts</definition>
        <argsstring>(ADC16_Type *ptr, uint32_t mask)</argsstring>
        <name>adc16_enable_interrupts</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask indicating the specified ADC interrupt events. Please refer to <ref refid="group__adc16__interface_1gab49c1866b4d36c96b3794bdf0a4d3d6f" kindref="member">adc16_irq_event_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="540" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="540" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gaaa08e54b2599803a03f9f762599e4aa1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc16_disable_interrupts</definition>
        <argsstring>(ADC16_Type *ptr, uint32_t mask)</argsstring>
        <name>adc16_disable_interrupts</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask indicating the specified interrupt events. Please refer to <ref refid="group__adc16__interface_1gab49c1866b4d36c96b3794bdf0a4d3d6f" kindref="member">adc16_irq_event_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="551" column="20" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="551" bodyend="554"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Trigger and Conversion</header>
      <memberdef kind="function" id="group__adc16__interface_1ga1ba1954e47c0f7dd4f2ad63586f1e0f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_trigger_seq_by_sw</definition>
        <argsstring>(ADC16_Type *ptr)</argsstring>
        <name>adc16_trigger_seq_by_sw</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Trigger ADC conversions by software in sequence mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation result of getting an ADC16 software trigger. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC16 software triggers successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_fail</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC16 software triggers unsuccessfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="571" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="325" bodyend="333" declfile="drivers/inc/hpm_adc16_drv.h" declline="571" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1gac39e00710c81bb574e913473f1e5001a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_trigger_pmt_by_sw</definition>
        <argsstring>(ADC16_Type *ptr, uint8_t trig_ch)</argsstring>
        <name>adc16_trigger_pmt_by_sw</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_ch</declname>
        </param>
        <briefdescription>
<para>Trigger ADC conversions by software in preemption mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trig_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>A trigger channel number(e.g. TRIG0A,TRIG0B,TRIG0C...). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation result of getting an ADC16 software trigger. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC16 software triggers successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_fail</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC16 software triggers unsuccessfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="582" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="363" bodyend="368" declfile="drivers/inc/hpm_adc16_drv.h" declline="582" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga162458b8a08cb0775f388c97158c0433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_get_oneshot_result</definition>
        <argsstring>(ADC16_Type *ptr, uint8_t ch, uint16_t *result)</argsstring>
        <name>adc16_get_oneshot_result</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get the result in oneshot mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an ADC16 conversion result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation result of getting an ADC16 conversion result in oneshot mode. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC16 conversion in oneshot mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC16 conversion in oneshot mode unsuccessfully due to passing invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="594" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="420" bodyend="439" declfile="drivers/inc/hpm_adc16_drv.h" declline="594" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc16__interface_1ga6d266efb82fae629b6c31dde656495ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc16_get_prd_result</definition>
        <argsstring>(ADC16_Type *ptr, uint8_t ch, uint16_t *result)</argsstring>
        <name>adc16_get_prd_result</name>
        <param>
          <type><ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get the result in the period mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC16 peripheral channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a specified ADC16 conversion result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation of getting an ADC16 conversion result in the period mode. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC16 conversion in the period mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC16 conversion in the period mode unsuccessfully due to passing invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="606" column="12" bodyfile="drivers/src/hpm_adc16_drv.c" bodystart="442" bodyend="452" declfile="drivers/inc/hpm_adc16_drv.h" declline="606" declcolumn="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__adc16__interface_1ga42e1f0a59984f701d99592e95ef75a42" prot="public" static="no">
        <name>ADC16_IS_CHANNEL_INVALID</name>
        <param><defname>CH</defname></param>
        <initializer>(CH &gt; <ref refid="HPM__IP__VALIDATION_2HPM__VAL__D25_2hpm__soc__feature_8h_1a698e8e1f965faad7da251d9938332248" kindref="member">ADC16_SOC_MAX_CH_NUM</ref>)</initializer>
        <briefdescription>
<para>Define ADC16 validity check for the channel number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="26" column="10" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc16__interface_1gaa2ccbdf9a9a07822aa9176bb304f6ba1" prot="public" static="no">
        <name>ADC16_IS_CHANNEL_SAMPLE_CYCLE_INVALID</name>
        <param><defname>CYC</defname></param>
        <initializer>(CYC == 0)</initializer>
        <briefdescription>
<para>Define ADC16 validity check for the channel sample cycle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc16__interface_1ga0fa002d04be7ff092ea5388ac82c355c" prot="public" static="no">
        <name>ADC16_IS_TRIG_CH_INVLAID</name>
        <param><defname>CH</defname></param>
        <initializer>(CH &gt; <ref refid="HPM__IP__VALIDATION_2HPM__VAL__D25_2hpm__soc__feature_8h_1afe99060ae1eb492673214fd3af8e4fe6" kindref="member">ADC_SOC_MAX_TRIG_CH_NUM</ref>)</initializer>
        <briefdescription>
<para>Define ADC16 validity check for the trigger number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="33" column="9" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc16__interface_1gac5992f6c168f2ecb2ca774528f8a292b" prot="public" static="no">
        <name>ADC16_IS_TRIG_LEN_INVLAID</name>
        <param><defname>TRIG_LEN</defname></param>
        <initializer>(TRIG_LEN &gt; <ref refid="HPM__IP__VALIDATION_2HPM__VAL__D25_2hpm__soc__feature_8h_1ab8bb2b014dd2780fa7f17cd6c21eed3d" kindref="member">ADC_SOC_MAX_TRIG_CH_LEN</ref>)</initializer>
        <briefdescription>
<para>Define ADC16 validity check for the trigger length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="36" column="9" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc16__interface_1gaf6edb41607caf349c6bc86e2ba1395f9" prot="public" static="no">
        <name>ADC16_IS_SEQ_LEN_INVLAID</name>
        <param><defname>LEN</defname></param>
        <initializer>((LEN == 0) || (LEN &gt; <ref refid="HPM__IP__VALIDATION_2HPM__VAL__D25_2hpm__soc__feature_8h_1a48f987e19c946a0b5c45536743d0b656" kindref="member">ADC_SOC_SEQ_MAX_LEN</ref>))</initializer>
        <briefdescription>
<para>Define ADC16 validity check for the sequence length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="39" column="9" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc16__interface_1ga719a08b7baa4edc5b806fc1d7bcd56f1" prot="public" static="no">
        <name>ADC16_IS_SEQ_DMA_BUFF_LEN_INVLAID</name>
        <param><defname>LEN</defname></param>
        <initializer>((LEN == 0) || (LEN &gt; <ref refid="HPM__IP__VALIDATION_2HPM__VAL__D25_2hpm__soc__feature_8h_1ad077905ebb9a5f49342a508df47f1f61" kindref="member">ADC_SOC_SEQ_MAX_DMA_BUFF_LEN_IN_4BYTES</ref>))</initializer>
        <briefdescription>
<para>Define ADC16 validity check for the DMA buffer length in the sequence mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="42" column="9" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc16__interface_1gaeaf7153336312ddba69a2cf6e3d6a36e" prot="public" static="no">
        <name>ADC16_IS_PMT_DMA_BUFF_LEN_INVLAID</name>
        <param><defname>LEN</defname></param>
        <initializer>((LEN == 0) || (LEN &gt; <ref refid="HPM__IP__VALIDATION_2HPM__VAL__D25_2hpm__soc__feature_8h_1ac7a2197dac0b7c2a588e41e17f752e90" kindref="member">ADC_SOC_PMT_MAX_DMA_BUFF_LEN_IN_4BYTES</ref>))</initializer>
        <briefdescription>
<para>Define ADC16 validity check for the DMA buffer length in the preemption mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="45" column="9" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__adc16__interface_1ga3c486d74a85124e7f8a82c39d1be9b7b" prot="public" static="no" strong="no">
        <type></type>
        <name>adc16_resolution_t</name>
        <enumvalue id="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba0903c58e53963d7542311155d646850f" prot="public">
          <name>adc16_res_8_bits</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7bab6132ab35e4666834b0463c61462d2c1" prot="public">
          <name>adc16_res_10_bits</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba2ceb6b89f74125c6c63cfd27adf32cf3" prot="public">
          <name>adc16_res_12_bits</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba4d88666ffcaa4b0eaab5b6f5f30c400f" prot="public">
          <name>adc16_res_16_bits</name>
          <initializer>= 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC16 resolutions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="48" column="1" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="enum" id="group__adc16__interface_1ga0fbba2f1f9b2fcc88c403d296cd9dd0d" prot="public" static="no" strong="no">
        <type></type>
        <name>adc16_conversion_mode_t</name>
        <enumvalue id="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0dafefa67dcac64c5365c8a609abfd90d5b" prot="public">
          <name>adc16_conv_mode_oneshot</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da7d8a964145f72ac23840584edb148c41" prot="public">
          <name>adc16_conv_mode_period</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da865a066b082d496b0e6ec6039342710e" prot="public">
          <name>adc16_conv_mode_sequence</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da2155dabe849d0f70eee7c934d9437f20" prot="public">
          <name>adc16_conv_mode_preemption</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC16 conversion modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="56" column="1" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="enum" id="group__adc16__interface_1ga0bc044fdde676f1d58dfb706a951d493" prot="public" static="no" strong="no">
        <type></type>
        <name>adc16_clock_divider_t</name>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a57eba0c2980019cec949c86010a5154c" prot="public">
          <name>adc16_clock_divider_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af914d25ace7e8b3b827971f0f5d03805" prot="public">
          <name>adc16_clock_divider_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a4ea3f01ee768225e4516ff70ee041e16" prot="public">
          <name>adc16_clock_divider_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a2e95b8747a7bec3c51f2642f02ac9f15" prot="public">
          <name>adc16_clock_divider_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493aafeeee706622060e5dd4044e50e03f0b" prot="public">
          <name>adc16_clock_divider_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a97c515b5f3e7ad6e614bbb362027c722" prot="public">
          <name>adc16_clock_divider_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a547644f0cb6517623804d5ebcf648331" prot="public">
          <name>adc16_clock_divider_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a92e730aab01a8d57f4e4fd3a74706a73" prot="public">
          <name>adc16_clock_divider_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a16ebaef7fb1a7c3a48eca1b417519624" prot="public">
          <name>adc16_clock_divider_9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a681aae325410dc97bc46cc6b3aac1027" prot="public">
          <name>adc16_clock_divider_10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493abffa19dc37f80566a2d03f9615ae0051" prot="public">
          <name>adc16_clock_divider_11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a775e2b4f2d9bdd2244603f68e84af94b" prot="public">
          <name>adc16_clock_divider_12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a6d2a1b20c8247ac9f6d4739dfc062438" prot="public">
          <name>adc16_clock_divider_13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af79b5f426879c15392e9202113e84435" prot="public">
          <name>adc16_clock_divider_14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a74a7f749d1caf91dcc4073b6be320e27" prot="public">
          <name>adc16_clock_divider_15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af9e2d9bce107b770de8b015e4ec78497" prot="public">
          <name>adc16_clock_divider_16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC16 Clock Divider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="64" column="1" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="64" bodyend="81"/>
      </memberdef>
      <memberdef kind="enum" id="group__adc16__interface_1gab49c1866b4d36c96b3794bdf0a4d3d6f" prot="public" static="no" strong="no">
        <type></type>
        <name>adc16_irq_event_t</name>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6faecf8cf3481896e63ec9d43558fd5bb17" prot="public">
          <name>adc16_event_trig_complete</name>
          <initializer>= ADC16_INT_STS_TRIG_CMPT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a trigger conversion is complete. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fab36bca6806477caeb189557721408bcc" prot="public">
          <name>adc16_event_trig_sw_conflict</name>
          <initializer>= ADC16_INT_STS_TRIG_SW_CFLCT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused by software-triggered conversions. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa4f1b6651ec6c96f13e2c767f658ddb3a" prot="public">
          <name>adc16_event_trig_hw_conflict</name>
          <initializer>= ADC16_INT_STS_TRIG_HW_CFLCT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused by hardware-triggered conversions. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa99ee994e26c8927f2f44eda3ce33c9da" prot="public">
          <name>adc16_event_read_conflict</name>
          <initializer>= ADC16_INT_STS_READ_CFLCT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused when bus reading from different channels. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa09b3d0054f288548638118f56ba3e0a3" prot="public">
          <name>adc16_event_seq_sw_conflict</name>
          <initializer>= ADC16_INT_STS_SEQ_SW_CFLCT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused by sequence-triggered conversions. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa9698f7f558fe0b5706a61461fb7eeb50" prot="public">
          <name>adc16_event_seq_hw_conflict</name>
          <initializer>= ADC16_INT_STS_SEQ_HW_CFLCT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused by hardware-triggered conversions. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa568d5f925af312282283cd3f35d40059" prot="public">
          <name>adc16_event_seq_dma_abort</name>
          <initializer>= ADC16_INT_STS_SEQ_DMAABT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that DMA is stopped currently. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa95d30ab316b8c809d12fa915318f8734" prot="public">
          <name>adc16_event_seq_full_complete</name>
          <initializer>= ADC16_INT_STS_SEQ_CMPT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that all of the configured conversion(s) in a queue is(are) complete. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa62283fd0d170cfaeeec4008649611506" prot="public">
          <name>adc16_event_seq_single_complete</name>
          <initializer>= ADC16_INT_STS_SEQ_CVC_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that one of the configured conversion(s) in a queue is complete. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa4cc825308b2d2033a10ee20cd68c2315" prot="public">
          <name>adc16_event_dma_fifo_full</name>
          <initializer>= ADC16_INT_STS_DMA_FIFO_FULL_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that DMA FIFO is full currently. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC16 irq events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc16_drv.h" line="84" column="1" bodyfile="drivers/inc/hpm_adc16_drv.h" bodystart="84" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_ADC16_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_ADC16_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_adc16_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(ADC16_SOC_TEMP_CH_EN)<sp/>&amp;&amp;<sp/>ADC16_SOC_TEMP_CH_EN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC16_IS_CHANNEL_INVALID(CH)<sp/>(CH<sp/>&gt;<sp/>ADC16_SOC_MAX_CH_NUM<sp/>&amp;&amp;<sp/>CH<sp/>!=<sp/>ADC16_SOC_TEMP_CH_NUM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__adc16__interface_1ga42e1f0a59984f701d99592e95ef75a42" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC16_IS_CHANNEL_INVALID(CH)<sp/>(CH<sp/>&gt;<sp/>ADC16_SOC_MAX_CH_NUM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__adc16__interface_1gaa2ccbdf9a9a07822aa9176bb304f6ba1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC16_IS_CHANNEL_SAMPLE_CYCLE_INVALID(CYC)<sp/>(CYC<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group__adc16__interface_1ga0fa002d04be7ff092ea5388ac82c355c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC16_IS_TRIG_CH_INVLAID(CH)<sp/>(CH<sp/>&gt;<sp/>ADC_SOC_MAX_TRIG_CH_NUM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__adc16__interface_1gac5992f6c168f2ecb2ca774528f8a292b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC16_IS_TRIG_LEN_INVLAID(TRIG_LEN)<sp/>(TRIG_LEN<sp/>&gt;<sp/>ADC_SOC_MAX_TRIG_CH_LEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__adc16__interface_1gaf6edb41607caf349c6bc86e2ba1395f9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC16_IS_SEQ_LEN_INVLAID(LEN)<sp/><sp/>((LEN<sp/>==<sp/>0)<sp/>||<sp/>(LEN<sp/>&gt;<sp/>ADC_SOC_SEQ_MAX_LEN))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__adc16__interface_1ga719a08b7baa4edc5b806fc1d7bcd56f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC16_IS_SEQ_DMA_BUFF_LEN_INVLAID(LEN)<sp/><sp/>((LEN<sp/>==<sp/>0)<sp/>||<sp/>(LEN<sp/>&gt;<sp/>ADC_SOC_SEQ_MAX_DMA_BUFF_LEN_IN_4BYTES))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__adc16__interface_1gaeaf7153336312ddba69a2cf6e3d6a36e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC16_IS_PMT_DMA_BUFF_LEN_INVLAID(LEN)<sp/><sp/>((LEN<sp/>==<sp/>0)<sp/>||<sp/>(LEN<sp/>&gt;<sp/>ADC_SOC_PMT_MAX_DMA_BUFF_LEN_IN_4BYTES))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__adc16__interface_1ga3c486d74a85124e7f8a82c39d1be9b7b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49" refid="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba0903c58e53963d7542311155d646850f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba0903c58e53963d7542311155d646850f" kindref="member">adc16_res_8_bits</ref><sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="50" refid="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7bab6132ab35e4666834b0463c61462d2c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7bab6132ab35e4666834b0463c61462d2c1" kindref="member">adc16_res_10_bits</ref><sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="51" refid="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba2ceb6b89f74125c6c63cfd27adf32cf3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba2ceb6b89f74125c6c63cfd27adf32cf3" kindref="member">adc16_res_12_bits</ref><sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba4d88666ffcaa4b0eaab5b6f5f30c400f" kindref="member">adc16_res_16_bits</ref><sp/>=<sp/>21</highlight></codeline>
<codeline lineno="53" refid="group__adc16__interface_1gga3c486d74a85124e7f8a82c39d1be9b7ba4d88666ffcaa4b0eaab5b6f5f30c400f" refkind="member"><highlight class="normal">}<sp/><ref refid="group__adc16__interface_1ga3c486d74a85124e7f8a82c39d1be9b7b" kindref="member">adc16_resolution_t</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__adc16__interface_1ga0fbba2f1f9b2fcc88c403d296cd9dd0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57" refid="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0dafefa67dcac64c5365c8a609abfd90d5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0dafefa67dcac64c5365c8a609abfd90d5b" kindref="member">adc16_conv_mode_oneshot</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="58" refid="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da7d8a964145f72ac23840584edb148c41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da7d8a964145f72ac23840584edb148c41" kindref="member">adc16_conv_mode_period</ref>,</highlight></codeline>
<codeline lineno="59" refid="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da865a066b082d496b0e6ec6039342710e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da865a066b082d496b0e6ec6039342710e" kindref="member">adc16_conv_mode_sequence</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da2155dabe849d0f70eee7c934d9437f20" kindref="member">adc16_conv_mode_preemption</ref></highlight></codeline>
<codeline lineno="61" refid="group__adc16__interface_1gga0fbba2f1f9b2fcc88c403d296cd9dd0da2155dabe849d0f70eee7c934d9437f20" refkind="member"><highlight class="normal">}<sp/><ref refid="group__adc16__interface_1ga0fbba2f1f9b2fcc88c403d296cd9dd0d" kindref="member">adc16_conversion_mode_t</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group__adc16__interface_1ga0bc044fdde676f1d58dfb706a951d493" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a57eba0c2980019cec949c86010a5154c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a57eba0c2980019cec949c86010a5154c" kindref="member">adc16_clock_divider_1</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="66" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af914d25ace7e8b3b827971f0f5d03805" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af914d25ace7e8b3b827971f0f5d03805" kindref="member">adc16_clock_divider_2</ref>,</highlight></codeline>
<codeline lineno="67" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a4ea3f01ee768225e4516ff70ee041e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a4ea3f01ee768225e4516ff70ee041e16" kindref="member">adc16_clock_divider_3</ref>,</highlight></codeline>
<codeline lineno="68" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a2e95b8747a7bec3c51f2642f02ac9f15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a2e95b8747a7bec3c51f2642f02ac9f15" kindref="member">adc16_clock_divider_4</ref>,</highlight></codeline>
<codeline lineno="69" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493aafeeee706622060e5dd4044e50e03f0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493aafeeee706622060e5dd4044e50e03f0b" kindref="member">adc16_clock_divider_5</ref>,</highlight></codeline>
<codeline lineno="70" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a97c515b5f3e7ad6e614bbb362027c722" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a97c515b5f3e7ad6e614bbb362027c722" kindref="member">adc16_clock_divider_6</ref>,</highlight></codeline>
<codeline lineno="71" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a547644f0cb6517623804d5ebcf648331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a547644f0cb6517623804d5ebcf648331" kindref="member">adc16_clock_divider_7</ref>,</highlight></codeline>
<codeline lineno="72" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a92e730aab01a8d57f4e4fd3a74706a73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a92e730aab01a8d57f4e4fd3a74706a73" kindref="member">adc16_clock_divider_8</ref>,</highlight></codeline>
<codeline lineno="73" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a16ebaef7fb1a7c3a48eca1b417519624" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a16ebaef7fb1a7c3a48eca1b417519624" kindref="member">adc16_clock_divider_9</ref>,</highlight></codeline>
<codeline lineno="74" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a681aae325410dc97bc46cc6b3aac1027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a681aae325410dc97bc46cc6b3aac1027" kindref="member">adc16_clock_divider_10</ref>,</highlight></codeline>
<codeline lineno="75" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493abffa19dc37f80566a2d03f9615ae0051" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493abffa19dc37f80566a2d03f9615ae0051" kindref="member">adc16_clock_divider_11</ref>,</highlight></codeline>
<codeline lineno="76" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a775e2b4f2d9bdd2244603f68e84af94b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a775e2b4f2d9bdd2244603f68e84af94b" kindref="member">adc16_clock_divider_12</ref>,</highlight></codeline>
<codeline lineno="77" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a6d2a1b20c8247ac9f6d4739dfc062438" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a6d2a1b20c8247ac9f6d4739dfc062438" kindref="member">adc16_clock_divider_13</ref>,</highlight></codeline>
<codeline lineno="78" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af79b5f426879c15392e9202113e84435" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af79b5f426879c15392e9202113e84435" kindref="member">adc16_clock_divider_14</ref>,</highlight></codeline>
<codeline lineno="79" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a74a7f749d1caf91dcc4073b6be320e27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493a74a7f749d1caf91dcc4073b6be320e27" kindref="member">adc16_clock_divider_15</ref>,</highlight></codeline>
<codeline lineno="80" refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af9e2d9bce107b770de8b015e4ec78497" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1gga0bc044fdde676f1d58dfb706a951d493af9e2d9bce107b770de8b015e4ec78497" kindref="member">adc16_clock_divider_16</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><ref refid="group__adc16__interface_1ga0bc044fdde676f1d58dfb706a951d493" kindref="member">adc16_clock_divider_t</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__adc16__interface_1gab49c1866b4d36c96b3794bdf0a4d3d6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6faecf8cf3481896e63ec9d43558fd5bb17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6faecf8cf3481896e63ec9d43558fd5bb17" kindref="member">adc16_event_trig_complete</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a4e65b60c75e05f742ae4c49aba136825" kindref="member">ADC16_INT_STS_TRIG_CMPT_MASK</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fab36bca6806477caeb189557721408bcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fab36bca6806477caeb189557721408bcc" kindref="member">adc16_event_trig_sw_conflict</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1ac3fbdc3432fc1e139c55c4348f95143a" kindref="member">ADC16_INT_STS_TRIG_SW_CFLCT_MASK</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa4f1b6651ec6c96f13e2c767f658ddb3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa4f1b6651ec6c96f13e2c767f658ddb3a" kindref="member">adc16_event_trig_hw_conflict</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1abc0b23ec9f16fac9853c90ee1c64d36d" kindref="member">ADC16_INT_STS_TRIG_HW_CFLCT_MASK</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa99ee994e26c8927f2f44eda3ce33c9da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa99ee994e26c8927f2f44eda3ce33c9da" kindref="member">adc16_event_read_conflict</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a4361fdc9f605b39c0e87e50272687425" kindref="member">ADC16_INT_STS_READ_CFLCT_MASK</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa09b3d0054f288548638118f56ba3e0a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa09b3d0054f288548638118f56ba3e0a3" kindref="member">adc16_event_seq_sw_conflict</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a4fda471114444ed73fd527294e15c262" kindref="member">ADC16_INT_STS_SEQ_SW_CFLCT_MASK</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa9698f7f558fe0b5706a61461fb7eeb50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa9698f7f558fe0b5706a61461fb7eeb50" kindref="member">adc16_event_seq_hw_conflict</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a59eb05267d798c182657f2768ec4285e" kindref="member">ADC16_INT_STS_SEQ_HW_CFLCT_MASK</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa568d5f925af312282283cd3f35d40059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa568d5f925af312282283cd3f35d40059" kindref="member">adc16_event_seq_dma_abort</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1ae3e308b3c66b69b1e5592cc7230f878e" kindref="member">ADC16_INT_STS_SEQ_DMAABT_MASK</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa95d30ab316b8c809d12fa915318f8734" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa95d30ab316b8c809d12fa915318f8734" kindref="member">adc16_event_seq_full_complete</ref><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a0818392758500a96ec184002fe0b43d1" kindref="member">ADC16_INT_STS_SEQ_CMPT_MASK</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa62283fd0d170cfaeeec4008649611506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa62283fd0d170cfaeeec4008649611506" kindref="member">adc16_event_seq_single_complete</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1aef76135180836d6f4be06b2746477cd9" kindref="member">ADC16_INT_STS_SEQ_CVC_MASK</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa4cc825308b2d2033a10ee20cd68c2315" kindref="member">adc16_event_dma_fifo_full</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a96cc24f004dbb8f125ea5f1e1ceba8fd" kindref="member">ADC16_INT_STS_DMA_FIFO_FULL_MASK</ref></highlight></codeline>
<codeline lineno="114" refid="group__adc16__interface_1ggab49c1866b4d36c96b3794bdf0a4d3d6fa4cc825308b2d2033a10ee20cd68c2315" refkind="member"><highlight class="normal">}<sp/><ref refid="group__adc16__interface_1gab49c1866b4d36c96b3794bdf0a4d3d6f" kindref="member">adc16_irq_event_t</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structadc16__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118" refid="structadc16__config__t_1a2dd7127b8b41bcd8097e455759afc589" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__config__t_1a2dd7127b8b41bcd8097e455759afc589" kindref="member">res</ref>;</highlight></codeline>
<codeline lineno="119" refid="structadc16__config__t_1a9ac8125c568c4b6b7bac37d605ec25ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__config__t_1a9ac8125c568c4b6b7bac37d605ec25ab" kindref="member">conv_mode</ref>;</highlight></codeline>
<codeline lineno="120" refid="structadc16__config__t_1aea8bdea1431bde30213de7a8f502a137" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__config__t_1aea8bdea1431bde30213de7a8f502a137" kindref="member">adc_clk_div</ref>;</highlight></codeline>
<codeline lineno="121" refid="structadc16__config__t_1a7f332688ea81217a5738e6ec6a940560" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__config__t_1a7f332688ea81217a5738e6ec6a940560" kindref="member">port3_realtime</ref>;</highlight></codeline>
<codeline lineno="122" refid="structadc16__config__t_1a71077408d2c533fc6404529b5e780576" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__config__t_1a71077408d2c533fc6404529b5e780576" kindref="member">wait_dis</ref>;</highlight></codeline>
<codeline lineno="123" refid="structadc16__config__t_1a035c33a82ce193d5ab1a7d3c46ba5adc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__config__t_1a035c33a82ce193d5ab1a7d3c46ba5adc" kindref="member">sel_sync_ahb</ref>;</highlight></codeline>
<codeline lineno="124" refid="structadc16__config__t_1a4d3e62735edd2cc2486e5e23553eaf0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__config__t_1a4d3e62735edd2cc2486e5e23553eaf0b" kindref="member">adc_ahb_en</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/><ref refid="structadc16__config__t" kindref="compound">adc16_config_t</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="structadc16__channel__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129" refid="structadc16__channel__config__t_1a7c2358cd6661e7a06da2222859f431b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__channel__config__t_1a7c2358cd6661e7a06da2222859f431b7" kindref="member">ch</ref>;</highlight></codeline>
<codeline lineno="130" refid="structadc16__channel__config__t_1a960a31e26ac288a0082e8b0a8aef552b" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/><ref refid="structadc16__channel__config__t_1a960a31e26ac288a0082e8b0a8aef552b" kindref="member">thshdh</ref>;</highlight></codeline>
<codeline lineno="131" refid="structadc16__channel__config__t_1aa4c1874f3f670f2b548785bdfaa58ded" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/><ref refid="structadc16__channel__config__t_1aa4c1874f3f670f2b548785bdfaa58ded" kindref="member">thshdl</ref>;</highlight></codeline>
<codeline lineno="132" refid="structadc16__channel__config__t_1a4ec9764ed93cb2176be0a69f268bb62c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__channel__config__t_1a4ec9764ed93cb2176be0a69f268bb62c" kindref="member">wdog_int_en</ref>;</highlight></codeline>
<codeline lineno="133" refid="structadc16__channel__config__t_1ae7a89aa12b0febc435fd10b2c9fa4215" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__channel__config__t_1ae7a89aa12b0febc435fd10b2c9fa4215" kindref="member">sample_cycle_shift</ref>;</highlight></codeline>
<codeline lineno="134" refid="structadc16__channel__config__t_1a0f7f2142e768a4aea8a340897be1fa3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__channel__config__t_1a0f7f2142e768a4aea8a340897be1fa3a" kindref="member">sample_cycle</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><ref refid="structadc16__channel__config__t" kindref="compound">adc16_channel_config_t</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="structadc16__channel__threshold__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139" refid="structadc16__channel__threshold__t_1a4da52f7228356b0f0f9df1b1d9658feb" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__channel__threshold__t_1a4da52f7228356b0f0f9df1b1d9658feb" kindref="member">ch</ref>;</highlight></codeline>
<codeline lineno="140" refid="structadc16__channel__threshold__t_1ae40350a76dc1ba04b1eef4281601c747" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/><ref refid="structadc16__channel__threshold__t_1ae40350a76dc1ba04b1eef4281601c747" kindref="member">thshdh</ref>;</highlight></codeline>
<codeline lineno="141" refid="structadc16__channel__threshold__t_1a10d564f0ec47f4f8711e2977f9fe951e" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/><ref refid="structadc16__channel__threshold__t_1a10d564f0ec47f4f8711e2977f9fe951e" kindref="member">thshdl</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/><ref refid="structadc16__channel__threshold__t" kindref="compound">adc16_channel_threshold_t</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structadc16__dma__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146" refid="structadc16__dma__config__t_1abd5b8cdd9c2873e04d4a035454fa966b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>*<ref refid="structadc16__dma__config__t_1abd5b8cdd9c2873e04d4a035454fa966b" kindref="member">start_addr</ref>;</highlight></codeline>
<codeline lineno="147" refid="structadc16__dma__config__t_1a313cf3a3f156e33accbc0587b2789819" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__dma__config__t_1a313cf3a3f156e33accbc0587b2789819" kindref="member">buff_len_in_4bytes</ref>;</highlight></codeline>
<codeline lineno="148" refid="structadc16__dma__config__t_1a466a2a740312bef2fea766513b60e0f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__dma__config__t_1a466a2a740312bef2fea766513b60e0f9" kindref="member">stop_pos</ref>;</highlight></codeline>
<codeline lineno="149" refid="structadc16__dma__config__t_1a6b4cf0b9c64f605a82333d44465cc4a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__dma__config__t_1a6b4cf0b9c64f605a82333d44465cc4a1" kindref="member">stop_en</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><ref refid="structadc16__dma__config__t" kindref="compound">adc16_dma_config_t</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ADC_SOC_IP_VERSION)<sp/>&amp;&amp;<sp/>(ADC_SOC_IP_VERSION<sp/>&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>result<sp/><sp/><sp/><sp/>:16;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>seq_num<sp/><sp/><sp/>:4;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:4;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>adc_ch<sp/><sp/><sp/><sp/>:5;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:2;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cycle_bit<sp/>:1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/><ref refid="structadc16__seq__dma__data__t" kindref="compound">adc16_seq_dma_data_t</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="structadc16__seq__dma__data__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164" refid="structadc16__seq__dma__data__t_1a557c98cdf515919827a0f79cdee2df63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__seq__dma__data__t_1a557c98cdf515919827a0f79cdee2df63" kindref="member">result</ref><sp/><sp/><sp/><sp/>:16;</highlight></codeline>
<codeline lineno="165" refid="structadc16__seq__dma__data__t_1aa202e95f3c99e29d01badc99a8cdb91a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__seq__dma__data__t_1aa202e95f3c99e29d01badc99a8cdb91a" kindref="member">seq_num</ref><sp/><sp/><sp/>:4;</highlight></codeline>
<codeline lineno="166" refid="structadc16__seq__dma__data__t_1a4861268580f265d915d743da2d402a2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__seq__dma__data__t_1a4861268580f265d915d743da2d402a2c" kindref="member">adc_ch</ref><sp/><sp/><sp/><sp/>:5;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:6;</highlight></codeline>
<codeline lineno="168" refid="structadc16__seq__dma__data__t_1a734a735f4ffba520a65a5b53303137ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__seq__dma__data__t_1a734a735f4ffba520a65a5b53303137ee" kindref="member">cycle_bit</ref><sp/>:1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<sp/><ref refid="structadc16__seq__dma__data__t" kindref="compound">adc16_seq_dma_data_t</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ADC_SOC_IP_VERSION)<sp/>&amp;&amp;<sp/>(ADC_SOC_IP_VERSION<sp/>&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>result<sp/><sp/><sp/><sp/>:16;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>seq_num<sp/><sp/><sp/>:2;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:2;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>trig_ch<sp/><sp/><sp/>:4;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>adc_ch<sp/><sp/><sp/><sp/>:5;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:2;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cycle_bit<sp/>:1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}<sp/><ref refid="structadc16__pmt__dma__data__t" kindref="compound">adc16_pmt_dma_data_t</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="structadc16__pmt__dma__data__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185" refid="structadc16__pmt__dma__data__t_1aceb876c51fd62b9e3b580c82f59dcb29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__pmt__dma__data__t_1aceb876c51fd62b9e3b580c82f59dcb29" kindref="member">result</ref><sp/><sp/><sp/><sp/>:16;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:4;</highlight></codeline>
<codeline lineno="187" refid="structadc16__pmt__dma__data__t_1a3136d3c40e70a4885b5e2017977f7928" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__pmt__dma__data__t_1a3136d3c40e70a4885b5e2017977f7928" kindref="member">adc_ch</ref><sp/><sp/><sp/><sp/>:5;</highlight></codeline>
<codeline lineno="188" refid="structadc16__pmt__dma__data__t_1ab5899eb011e1147a447cad287c8a0936" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__pmt__dma__data__t_1ab5899eb011e1147a447cad287c8a0936" kindref="member">trig_ch</ref><sp/><sp/><sp/>:4;</highlight></codeline>
<codeline lineno="189" refid="structadc16__pmt__dma__data__t_1ab709396c3635a83fab60929576e0530c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__pmt__dma__data__t_1ab709396c3635a83fab60929576e0530c" kindref="member">seq_num</ref><sp/><sp/><sp/>:2;</highlight></codeline>
<codeline lineno="190" refid="structadc16__pmt__dma__data__t_1a26162448d8d8544f74d398fd387e5572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structadc16__pmt__dma__data__t_1a26162448d8d8544f74d398fd387e5572" kindref="member">cycle_bit</ref><sp/>:1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}<sp/><ref refid="structadc16__pmt__dma__data__t" kindref="compound">adc16_pmt_dma_data_t</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="structadc16__prd__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196" refid="structadc16__prd__config__t_1a3684b9f51e3b4be30c5604824cab5b1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__prd__config__t_1a3684b9f51e3b4be30c5604824cab5b1f" kindref="member">ch</ref>;</highlight></codeline>
<codeline lineno="197" refid="structadc16__prd__config__t_1a0d324703155883053146e2dbfca9dc51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__prd__config__t_1a0d324703155883053146e2dbfca9dc51" kindref="member">prescale</ref>;</highlight></codeline>
<codeline lineno="198" refid="structadc16__prd__config__t_1ab230d65e33359247eb94a7890aa7a4bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__prd__config__t_1ab230d65e33359247eb94a7890aa7a4bc" kindref="member">period_count</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/><ref refid="structadc16__prd__config__t" kindref="compound">adc16_prd_config_t</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="structadc16__seq__queue__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203" refid="structadc16__seq__queue__config__t_1a187ec3d905c73db1352c08e925cd1976" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__seq__queue__config__t_1a187ec3d905c73db1352c08e925cd1976" kindref="member">seq_int_en</ref>;</highlight></codeline>
<codeline lineno="204" refid="structadc16__seq__queue__config__t_1ac4d07201beda600b4e6b59b5869daee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__seq__queue__config__t_1ac4d07201beda600b4e6b59b5869daee4" kindref="member">ch</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}<sp/><ref refid="structadc16__seq__queue__config__t" kindref="compound">adc16_seq_queue_config_t</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="structadc16__seq__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209" refid="structadc16__seq__config__t_1aac9b19360bd9de3ae8322b668fc29ef3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structadc16__seq__queue__config__t" kindref="compound">adc16_seq_queue_config_t</ref><sp/>queue[<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a48f987e19c946a0b5c45536743d0b656" kindref="member">ADC_SOC_SEQ_MAX_LEN</ref>];</highlight></codeline>
<codeline lineno="210" refid="structadc16__seq__config__t_1ae52f470689de1e37099840813cb15333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__seq__config__t_1ae52f470689de1e37099840813cb15333" kindref="member">restart_en</ref>;</highlight></codeline>
<codeline lineno="211" refid="structadc16__seq__config__t_1aafca2939fa8bea31aa173296c5432ac7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__seq__config__t_1aafca2939fa8bea31aa173296c5432ac7" kindref="member">cont_en</ref>;</highlight></codeline>
<codeline lineno="212" refid="structadc16__seq__config__t_1a9bb32aece189d39ac4dde58ba89279a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__seq__config__t_1a9bb32aece189d39ac4dde58ba89279a9" kindref="member">sw_trig_en</ref>;</highlight></codeline>
<codeline lineno="213" refid="structadc16__seq__config__t_1a816bc448e079e0674b453cabdde323ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structadc16__seq__config__t_1a816bc448e079e0674b453cabdde323ff" kindref="member">hw_trig_en</ref>;</highlight></codeline>
<codeline lineno="214" refid="structadc16__seq__config__t_1ae23cb011454e134124a4d5fff007f020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__seq__config__t_1ae23cb011454e134124a4d5fff007f020" kindref="member">seq_len</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/><ref refid="structadc16__seq__config__t" kindref="compound">adc16_seq_config_t</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="structadc16__pmt__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219" refid="structadc16__pmt__config__t_1a6c4aacea0edf611abd18473e9cdcb6cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>inten[<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ab8bb2b014dd2780fa7f17cd6c21eed3d" kindref="member">ADC_SOC_MAX_TRIG_CH_LEN</ref>];</highlight></codeline>
<codeline lineno="220" refid="structadc16__pmt__config__t_1a9778b9e73cdf93e22c17b918ae96effa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>adc_ch[<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ab8bb2b014dd2780fa7f17cd6c21eed3d" kindref="member">ADC_SOC_MAX_TRIG_CH_LEN</ref>];</highlight></codeline>
<codeline lineno="221" refid="structadc16__pmt__config__t_1a1415f7da8dff96e73f3aae0fa4c8f87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__pmt__config__t_1a1415f7da8dff96e73f3aae0fa4c8f87a" kindref="member">trig_ch</ref>;</highlight></codeline>
<codeline lineno="222" refid="structadc16__pmt__config__t_1a0b0dc8dd6b935a1182262c00d260815c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structadc16__pmt__config__t_1a0b0dc8dd6b935a1182262c00d260815c" kindref="member">trig_len</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<sp/><ref refid="structadc16__pmt__config__t" kindref="compound">adc16_pmt_config_t</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga528d2bc629d60cf2a651302d7b0b89de" kindref="member">adc16_get_default_config</ref>(<ref refid="structadc16__config__t" kindref="compound">adc16_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga7092dae99754cdaf414a1927bc660764" kindref="member">adc16_get_channel_default_config</ref>(<ref refid="structadc16__channel__config__t" kindref="compound">adc16_channel_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1gabfcf94c8763a15417942cafe4bcdc9d4" kindref="member">adc16_deinit</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1ga29ae18f3a045b012e3a712bd57211aa2" kindref="member">adc16_init</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/><ref refid="structadc16__config__t" kindref="compound">adc16_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1gad71c54ee3dff867577fa50905466ab30" kindref="member">adc16_init_channel</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/><ref refid="structadc16__channel__config__t" kindref="compound">adc16_channel_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1gaac1af29523e4a8cdcd8b5d4d06905230" kindref="member">adc16_get_channel_threshold</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ch,<sp/><ref refid="structadc16__channel__threshold__t" kindref="compound">adc16_channel_threshold_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(ADC_SOC_BUSMODE_ENABLE_CTRL_SUPPORT)<sp/>&amp;&amp;<sp/>ADC_SOC_BUSMODE_ENABLE_CTRL_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>adc16_enable_oneshot_mode(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>adc16_disable_oneshot_mode(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1gad9104b000a0efa16b6b65e31d2b017ed" kindref="member">adc16_set_prd_config</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/><ref refid="structadc16__prd__config__t" kindref="compound">adc16_prd_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1ga74997d3d122564904c4894470e23c220" kindref="member">adc16_set_seq_config</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/><ref refid="structadc16__seq__config__t" kindref="compound">adc16_seq_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1gae8373223c527f7bb85a71321c020b038" kindref="member">adc16_set_pmt_config</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/><ref refid="structadc16__pmt__config__t" kindref="compound">adc16_pmt_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1ga46bf5e0678374a216b2ddd3f259f2aef" kindref="member">adc16_set_pmt_queue_enable</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>trig_ch,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="group__adc16__interface_1ga497d99708be375f9283c13a9689bc986" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga497d99708be375f9283c13a9689bc986" kindref="member">adc16_seq_enable_hw_trigger</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1acac88c1a468d8cf010d8da899193aa7e" kindref="member">SEQ_CFG0</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a44883f2e629362e30b664692597d1b40" kindref="member">ADC16_SEQ_CFG0_HW_TRIG_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375" refid="group__adc16__interface_1gab4be0c9386629b1070d07ac9d2ed735c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1gab4be0c9386629b1070d07ac9d2ed735c" kindref="member">adc16_seq_disable_hw_trigger</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1acac88c1a468d8cf010d8da899193aa7e" kindref="member">SEQ_CFG0</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a44883f2e629362e30b664692597d1b40" kindref="member">ADC16_SEQ_CFG0_HW_TRIG_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392" refid="group__adc16__interface_1gaa499b8c9719aa2561b5d1a5880b233e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1gaa499b8c9719aa2561b5d1a5880b233e3" kindref="member">adc16_set_seq_stop_pos</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint16_t<sp/>stop_pos)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a7ae74aa26dfdc2ce1cf9cad5e0eaa0f5" kindref="member">SEQ_DMA_CFG</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structADC16__Type_1a7ae74aa26dfdc2ce1cf9cad5e0eaa0f5" kindref="member">SEQ_DMA_CFG</ref><sp/>&amp;<sp/>~<ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1aabedc74b1fd192f29fc402c91bae91fb" kindref="member">ADC16_SEQ_DMA_CFG_STOP_POS_MASK</ref>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a176f01fbd1beffe71347d166fe44c01f" kindref="member">ADC16_SEQ_DMA_CFG_STOP_POS_SET</ref>(stop_pos);</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="group__adc16__interface_1ga7d2a0bb0b5d434f5f4fc4d915e2f6b06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga7d2a0bb0b5d434f5f4fc4d915e2f6b06" kindref="member">adc16_init_pmt_dma</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>addr)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a4faf533f1d396e6f536efba400e08ab0" kindref="member">TRG_DMA_ADDR</ref><sp/>=<sp/>addr<sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a26a6288bfd268b626d16a3dd13e58a48" kindref="member">ADC16_TRG_DMA_ADDR_TRG_DMA_ADDR_MASK</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1gafbf9182408fe2273020418d57bfce958" kindref="member">adc16_init_seq_dma</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/><ref refid="structadc16__dma__config__t" kindref="compound">adc16_dma_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="group__adc16__interface_1ga31730cfce13c2229b018fd2899c8f9dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__adc16__interface_1ga31730cfce13c2229b018fd2899c8f9dd" kindref="member">adc16_get_status_flags</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structADC16__Type_1ab734189d5a292e031cb511800a9ac377" kindref="member">INT_STS</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="group__adc16__interface_1gafbd981847633030661865c4fc9584917" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1gafbd981847633030661865c4fc9584917" kindref="member">adc16_disable_busywait</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a4595ad5c4ee19a0d94ec397b2e1634b4" kindref="member">BUF_CFG0</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1aa327d814b619fe727d2fc2947cd74789" kindref="member">ADC16_BUF_CFG0_WAIT_DIS_SET</ref>(1);</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="group__adc16__interface_1ga18d4ee267592949450cbbd126df93164" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga18d4ee267592949450cbbd126df93164" kindref="member">adc16_enable_busywait</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a4595ad5c4ee19a0d94ec397b2e1634b4" kindref="member">BUF_CFG0</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a3a9c67bd9d6bd02efc50fab756efbf7c" kindref="member">ADC16_BUF_CFG0_WAIT_DIS_MASK</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="group__adc16__interface_1gad93c314e82245223bccc1392d83aff45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1gad93c314e82245223bccc1392d83aff45" kindref="member">adc16_set_nonblocking_read</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a4595ad5c4ee19a0d94ec397b2e1634b4" kindref="member">BUF_CFG0</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a3a9c67bd9d6bd02efc50fab756efbf7c" kindref="member">ADC16_BUF_CFG0_WAIT_DIS_MASK</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="group__adc16__interface_1ga383b51e9570ab22c85a04f45b75960d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga383b51e9570ab22c85a04f45b75960d8" kindref="member">adc16_set_blocking_read</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a4595ad5c4ee19a0d94ec397b2e1634b4" kindref="member">BUF_CFG0</ref><sp/>&amp;=<sp/>~<ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a3a9c67bd9d6bd02efc50fab756efbf7c" kindref="member">ADC16_BUF_CFG0_WAIT_DIS_MASK</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="group__adc16__interface_1ga2805fa5d8122edc1cf529d2ec2f60dcb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga2805fa5d8122edc1cf529d2ec2f60dcb" kindref="member">adc16_is_nonblocking_mode</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1aa130d2c50b425fc7dc68f47c65e5ee0c" kindref="member">ADC16_BUF_CFG0_WAIT_DIS_GET</ref>(ptr-&gt;<ref refid="structADC16__Type_1a4595ad5c4ee19a0d94ec397b2e1634b4" kindref="member">BUF_CFG0</ref>)<sp/><sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="group__adc16__interface_1ga40ec2d8e61c96342b5c249134dbb9c0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga40ec2d8e61c96342b5c249134dbb9c0a" kindref="member">adc16_get_conv_valid_status</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ch)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1aab202794f3c8d017975b0053b01a792a" kindref="member">ADC16_BUS_RESULT_VALID_GET</ref>(ptr-&gt;<ref refid="structADC16__Type_1ace073845a0c899bae88f5eabf95843cf" kindref="member">BUS_RESULT</ref>[ch]);</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="group__adc16__interface_1gae51a3a9480885246f0879a2e4b4343fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1gae51a3a9480885246f0879a2e4b4343fe" kindref="member">adc16_clear_status_flags</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1ab734189d5a292e031cb511800a9ac377" kindref="member">INT_STS</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="group__adc16__interface_1ga4e3921519adb696b6204f468935cfa02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1ga4e3921519adb696b6204f468935cfa02" kindref="member">adc16_enable_interrupts</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a7624a07eeaf16ae5b6e3b03286820c9b" kindref="member">INT_EN</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="group__adc16__interface_1gaaa08e54b2599803a03f9f762599e4aa1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__adc16__interface_1gaaa08e54b2599803a03f9f762599e4aa1" kindref="member">adc16_disable_interrupts</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a7624a07eeaf16ae5b6e3b03286820c9b" kindref="member">INT_EN</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1ga1ba1954e47c0f7dd4f2ad63586f1e0f8" kindref="member">adc16_trigger_seq_by_sw</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1gac39e00710c81bb574e913473f1e5001a" kindref="member">adc16_trigger_pmt_by_sw</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>trig_ch);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1ga162458b8a08cb0775f388c97158c0433" kindref="member">adc16_get_oneshot_result</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ch,<sp/>uint16_t<sp/>*result);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__adc16__interface_1ga6d266efb82fae629b6c31dde656495ac" kindref="member">adc16_get_prd_result</ref>(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ch,<sp/>uint16_t<sp/>*result);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ADC16_SOC_TEMP_CH_EN)<sp/>&amp;&amp;<sp/>ADC16_SOC_TEMP_CH_EN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>adc16_enable_temp_sensor(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>adc16_disable_temp_sensor(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_ADC16_HAS_MOT_EN)<sp/>&amp;&amp;<sp/>HPM_IP_FEATURE_ADC16_HAS_MOT_EN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>adc16_enable_motor(<ref refid="structADC16__Type" kindref="compound">ADC16_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structADC16__Type_1a003f098505368f6e7b8a5aadddabef70" kindref="member">ANA_CTRL0</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__adc16__regs_8h_1a52ab06bb236e4748c2abea58832caec4" kindref="member">ADC16_ANA_CTRL0_MOTO_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_ADC16_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_adc16_drv.h"/>
  </compounddef>
</doxygen>
