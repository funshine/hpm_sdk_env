<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__nnconvolution" kind="group">
    <compoundname>nnconvolution</compoundname>
    <title>NN Convolution Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nnconvolution_1gaf6fad182b1496ef1d5651b6628701293" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>1x1<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//160x120x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their</highlight></codeline>
<codeline><highlight class="normal">//stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Scale<sp/>up<sp/>the<sp/>bias<sp/>by<sp/>2^6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Scale<sp/>down<sp/>the<sp/>output<sp/>tensor<sp/>by<sp/>1/2^9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>120</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>STRIDE_Y,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7621" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7621" bodyend="7655"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga48801812baf4ac44d8f420656e0d344e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution for RGB images with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-vector enabled and its size must be &quot;out_tensor_ch * (3 * ker_dim *
                                 ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[3<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_RGB_sft_bias(in_data,<sp/>IN_DIM,<sp/>weight,<sp/>OUT_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7708" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7708" bodyend="7734"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacb280da3e5ee9dae757454a6f9fde55a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution for RGB images with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[3<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>(3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>+<sp/>1)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>wt_tmp_buf[OUT_CH<sp/>*<sp/>(3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>+<sp/>1)];</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>wt_tmp_buf);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7787" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7787" bodyend="7813"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga4289d8b8bf7de39fe2ec6716aeb1fb21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x1<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7866" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7866" bodyend="7893"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa3bea4019638b22edc46a625f5cf7cce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_conv_HWC_s8_s8_s8_sft_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>80x59x5</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>40</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>30</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,<sp/>bias,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7956" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7956" bodyend="7990"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad9c7a0bfeedea12c13702a7b85f6045b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>12x12x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>8x8x50</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>50</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>8</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8044" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8044" bodyend="8071"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6ebc094b7ca8a8eb46c249c165dc0990" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//80x59x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>80</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>59</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_Y<sp/>*<sp/>OUT_X];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any(in_data,<sp/>IN_W,<sp/>IN_Y<sp/>,<sp/>IN_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8139" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8139" bodyend="8173"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae45d9ea581aa690f6bc604878b7ff56a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 16-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x1<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>input_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias(input_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8226" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8226" bodyend="8253"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2ad7e5bbd56df8f95bd183850900ff56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 16-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that both in_tensor_ch and out_tensor_ch are multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x4<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x8</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>4</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8307" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8307" bodyend="8334"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab92665e531cb2e24620d923c487f5697" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 16-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that both in_tensor_ch and out_tensor_ch are multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//80x59x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>80</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>59</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/><sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,<sp/>IN_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8402" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8402" bodyend="8436"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga14a5303eb12476d8342725b778f3d60f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer depthwise convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>11x11x28<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x3<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>9x9x48</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>11</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>48</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>7</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>9</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>OUT_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_dw_HWC_s8_s8_s8_sft_bias(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>0,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8489" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8489" bodyend="8516"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacbd18e7251df9494ddf4619156237efd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer depthwise convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Perform<sp/>a<sp/>depth-wise<sp/>convolution<sp/>for<sp/>a<sp/>79x59x12<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x3</highlight></codeline>
<codeline><highlight class="normal">//kernel<sp/>and<sp/>generate<sp/>a<sp/>77x57x12<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM_X<sp/>79</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM_Y<sp/>59</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_SHIFT<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>7</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM_X<sp/>77</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM_Y<sp/>57</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM_X<sp/>*<sp/>IN_DIM_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>OUT_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM_X<sp/>*<sp/>OUT_DIM_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any(in_data,<sp/>IN_DIM_X,<sp/>IN_DIM_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM,<sp/>KER_DIM,<sp/>PAD,<sp/>PAD,<sp/>STRIDE,<sp/>STRIDE,<sp/>bias,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BIAS_SHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM_X,<sp/>OUT_DIM_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8580" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8580" bodyend="8614"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga291d3433cfdeac37ddedd621e0cea855" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs.. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8661" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8661" bodyend="8695"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab36c58937982cb251a299463e48ff357" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8743" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8743" bodyend="8777"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad97f5d188a38e067ca8afe1d26a3f9e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8824" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8824" bodyend="8858"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1ee3747f0f50187370bb25d91b412447" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8906" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8906" bodyend="8940"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac7a64479b1a28db67739740f7797c0ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8988" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8988" bodyend="9022"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1353634c6dd78e51d72ad649f1851741" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9068" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9068" bodyend="9101"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga40b28637cd642db0f36e19b0c5008433" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9148" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9148" bodyend="9181"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1a24af57ab9a2be65f085e36c0c80520" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9227" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9227" bodyend="9260"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga13dceb3700caa3c22c53bd7f6017a40d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9307" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9307" bodyend="9340"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2e95b6dd2dc0ebe0fb31b4ce4e97b5c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9387" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9387" bodyend="9420"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaeed17db639b9ce3a896bc2bfeaaeb8ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9453" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9453" bodyend="9480"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gadbb401015033df936d4547841e0c6778" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9514" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9514" bodyend="9541"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae84e818d001cf7ea2c4331924f36e35e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9574" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9574" bodyend="9601"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga02b99a74afdae934fc45f491a59d2214" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9634" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9634" bodyend="9661"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3fbca4e04cca9289834c84a10a913a88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9695" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9695" bodyend="9722"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac66363c7f5934113644361412bcf3afc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9754" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9754" bodyend="9780"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga760c3e28022de0cc9781549ec67b472a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9812" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9812" bodyend="9838"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga546898208090a68e33f99ced79470f5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9870" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9870" bodyend="9896"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2f5d213d0023ff26d9ce168bfefa2a40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 8-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9928" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9928" bodyend="9954"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga30719ccfc86c77e8b4fde37011f8d543" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9986" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9986" bodyend="10012"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0bc1ef1d72db702cc49be0016a4180f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10044" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10044" bodyend="10071"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa32181a4fa9730dd1aaff34473aad105" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10103" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10103" bodyend="10130"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab00822cf6d1b355344c6385a2555dab4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10162" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10162" bodyend="10189"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga7cd15bdefc9684fc8c6dc5740bd973e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10221" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10221" bodyend="10248"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga14a05c18351cdbb2158cf1978e508f8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10280" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10280" bodyend="10307"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaf85f4310b5b177044f48ea61614aaf10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10338" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10338" bodyend="10364"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaba554ffd11e415541ebab72f6161915d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10395" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10395" bodyend="10421"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga44f3d234a8ffe93b8cbc31e19ed49cc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10452" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10452" bodyend="10478"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga681fd01c3db04f540acb48e080682acc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10509" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10509" bodyend="10535"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6ca86332aeecf3be577bfb87f554d178" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10566" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10566" bodyend="10592"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa733b3587ec4a987004946f46fdf4d8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10630" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10630" bodyend="10664"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gafa3b832483993fd1609f2744a7a1c6d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10703" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10703" bodyend="10737"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa245691db40029df9384b7e50b79fde4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10775" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10775" bodyend="10809"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae65c6f8353b1d3eb0ad4f6bbdb89c4cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10848" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10848" bodyend="10882"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1ba10db375981d7dfba5902aea8de0ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10921" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10921" bodyend="10955"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaf210756844a35322033afcc20325eae5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10992" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10992" bodyend="11025"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaea70ea34cd3a6e45bc89ada5e110e698" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11062" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11062" bodyend="11095"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad00d5ffdfffd45ad20e15c41da36a31b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11132" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11132" bodyend="11165"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad463faadd1a58de1fabc5f05a396f025" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11202" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11202" bodyend="11235"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga7bb79b1cd25ff4e15ddfff5ac9336d3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11272" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11272" bodyend="11305"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa2232c5f84cbe4d40d4201756d87c308" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11338" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11338" bodyend="11365"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3c6fcf87e6f94a46600aab9b8154e747" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11397" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11397" bodyend="11424"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga88f4d9ab1a22cc7d551664bf37c11f4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11456" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11456" bodyend="11483"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3c07fe5b1305f89f094eb44de887288e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11515" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11515" bodyend="11542"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae3cdb24a3bc9374cc98a97d1cf66d713" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11574" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11574" bodyend="11601"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaddf5ec832e3e3306da2089d5bb742aee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11632" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11632" bodyend="11658"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacb88aa3904d0374b532ac0dfae36d0ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11689" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11689" bodyend="11715"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga11e8db5b74e51807c0f6c264ceb88a3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to (in_tensor_ch * ker_dim * ker_dim + 1) / 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11746" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11746" bodyend="11772"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga8021fde290f091b9348e56ae24fdf912" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs, and with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11803" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11803" bodyend="11829"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga19633dab07a1ccb79712b58dbf7e9a51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11860" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11860" bodyend="11886"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga425531141b804498f1b04ab9203c35c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11924" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11924" bodyend="11958"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0a8c643e8c77051213ccf469486ddccb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11997" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11997" bodyend="12031"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga048ff15cdd4652c25b9b250f8356f335" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12069" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12069" bodyend="12103"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab6af36649c64102a6e1c80e623bed9f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12142" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12142" bodyend="12176"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga24277b452593c20ae17ff2086fb8253a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12215" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12215" bodyend="12249"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae8250ca3c328de6b4ea93e4f62bcf541" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12286" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12286" bodyend="12319"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6bf168c41fda67552bd4b5f5c200a268" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12357" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12357" bodyend="12390"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab5cb8f3dc2985f57b742036399164798" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12427" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12427" bodyend="12460"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac080214be9e1938ba324ca42c0aade2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12498" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12498" bodyend="12531"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae9744bde30c4e26b17ef6dc89acb16d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12569" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12569" bodyend="12602"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2420b518e254e3fd4abe27f16a2a7901" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit interger inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor groups </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1 </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12650" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12650" bodyend="12686"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa7a9c1eab5556db05cfa3d05dfa4c71c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12694" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12694" bodyend="12703"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae1c62cb7f29063bf12498148562fdca7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t pad_x, const uint16_t stride_x, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1xn kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that out_tensor_dim_x is a multiple of 4. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12743" column="19" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12743" bodyend="12776"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1e0aac3f254eb048c027362e2fa40c0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel. It is always 1 here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12787" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12787" bodyend="12798"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gafcbbcd4692c657df2ab93d7529fc0adb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor groups </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12841" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12841" bodyend="12881"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga89509f5499197a1f65bc7e29ff471f2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12891" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12891" bodyend="12902"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga9cfa87c1ba0068ad397a429d1ac1aab2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const int8_t *in_tensor, const int32_t in_tensor_dim_x, const int32_t in_tensor_dim_y, const int32_t in_tensor_ch, const int8_t *ker_weight, const int32_t out_tensor_ch, const int32_t pad_x, const int32_t pad_y, const int32_t stride_x, const int32_t stride_y, const int32_t *bias, int8_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_tensor_dim_x, const int32_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const int32_t dilation_x, const int32_t dilation_y, int16_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise 3x3 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch and pad_x is less than 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12943" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12943" bodyend="12980"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga455407b84cfc71528b0dd8680c64a8b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ch_mult, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t dilation_x, const uint16_t dilation_y, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ch_mult</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit interger inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels. out_tensor_ch is equal to ch_mult * in_tensor_ch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_mult</parametername>
</parameternamelist>
<parameterdescription>
<para>multiplier of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">to<sp/>be<sp/>modified...</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13029" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13029" bodyend="13071"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad954df9be69373bdc385362c70b140dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t dilation_x, const uint16_t dilation_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that in_tensor_ch has to be equal to out_tensor_ch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13117" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13117" bodyend="13158"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad9339201eff1c27fd41039bfc4a4756c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13168" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13168" bodyend="13179"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0b9ce54b2ac422932e71b67b66d657c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any</definition>
        <argsstring>(const uint8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint8_t *ker_weight, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const int16_t ch_mult, const int16_t pad_x, const int16_t pad_y, const int16_t stride_x, const int16_t stride_y, const int16_t dilation_x, const int16_t dilation_y, const int32_t *bias, const int32_t in_offset, const int32_t ker_offset, const int32_t out_offset, uint8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t act_min, const int32_t act_max, const int32_t out_shift, const int32_t out_scale)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any</name>
        <param>
          <type>const uint8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>ch_mult</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>ker_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_scale</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_mult</parametername>
</parameternamelist>
<parameterdescription>
<para>multiplier of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -255 to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the filter kernel It should be in the range of -255 to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>shift amount for the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of sacling for the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that both ch_mult and ker_dim_x are multiple of 2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13221" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13221" bodyend="13262"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The convolution functions transform the input matrix into a column vector with im2col, and then use matrix-matrix multiplication to get the convolution result. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
